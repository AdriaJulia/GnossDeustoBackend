### YamlMime:ManagedReference
items:
- uid: API_DISCOVER.Models.Entities.SparqlObject.Head
  commentId: T:API_DISCOVER.Models.Entities.SparqlObject.Head
  id: SparqlObject.Head
  parent: API_DISCOVER.Models.Entities
  children:
  - API_DISCOVER.Models.Entities.SparqlObject.Head.#ctor
  - API_DISCOVER.Models.Entities.SparqlObject.Head.link
  - API_DISCOVER.Models.Entities.SparqlObject.Head.vars
  langs:
  - csharp
  - vb
  name: SparqlObject.Head
  nameWithType: SparqlObject.Head
  fullName: API_DISCOVER.Models.Entities.SparqlObject.Head
  type: Class
  source:
    remote:
      path: API_DISCOVER/API_DISCOVER/Models/Entities/SparqlObject.cs
      branch: master
      repo: https://github.com/HerculesCRUE/GnossDeustoBackend.git
    id: Head
    path: Models/Entities/SparqlObject.cs
    startLine: 33
  assemblies:
  - API_DISCOVER
  namespace: API_DISCOVER.Models.Entities
  syntax:
    content: public class Head
    content.vb: Public Class Head
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: API_DISCOVER.Models.Entities.SparqlObject.Head.#ctor
  commentId: M:API_DISCOVER.Models.Entities.SparqlObject.Head.#ctor
  id: '#ctor'
  parent: API_DISCOVER.Models.Entities.SparqlObject.Head
  langs:
  - csharp
  - vb
  name: Head()
  nameWithType: SparqlObject.Head.Head()
  fullName: API_DISCOVER.Models.Entities.SparqlObject.Head.Head()
  type: Constructor
  source:
    remote:
      path: API_DISCOVER/API_DISCOVER/Models/Entities/SparqlObject.cs
      branch: master
      repo: https://github.com/HerculesCRUE/GnossDeustoBackend.git
    id: .ctor
    path: Models/Entities/SparqlObject.cs
    startLine: 35
  assemblies:
  - API_DISCOVER
  namespace: API_DISCOVER.Models.Entities
  syntax:
    content: public Head()
    content.vb: Public Sub New
  overload: API_DISCOVER.Models.Entities.SparqlObject.Head.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: API_DISCOVER.Models.Entities.SparqlObject.Head.link
  commentId: P:API_DISCOVER.Models.Entities.SparqlObject.Head.link
  id: link
  parent: API_DISCOVER.Models.Entities.SparqlObject.Head
  langs:
  - csharp
  - vb
  name: link
  nameWithType: SparqlObject.Head.link
  fullName: API_DISCOVER.Models.Entities.SparqlObject.Head.link
  type: Property
  source:
    remote:
      path: API_DISCOVER/API_DISCOVER/Models/Entities/SparqlObject.cs
      branch: master
      repo: https://github.com/HerculesCRUE/GnossDeustoBackend.git
    id: link
    path: Models/Entities/SparqlObject.cs
    startLine: 37
  assemblies:
  - API_DISCOVER
  namespace: API_DISCOVER.Models.Entities
  syntax:
    content: public HashSet<object> link { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.HashSet{System.Object}
    content.vb: Public Property link As HashSet(Of Object)
  overload: API_DISCOVER.Models.Entities.SparqlObject.Head.link*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: API_DISCOVER.Models.Entities.SparqlObject.Head.vars
  commentId: P:API_DISCOVER.Models.Entities.SparqlObject.Head.vars
  id: vars
  parent: API_DISCOVER.Models.Entities.SparqlObject.Head
  langs:
  - csharp
  - vb
  name: vars
  nameWithType: SparqlObject.Head.vars
  fullName: API_DISCOVER.Models.Entities.SparqlObject.Head.vars
  type: Property
  source:
    remote:
      path: API_DISCOVER/API_DISCOVER/Models/Entities/SparqlObject.cs
      branch: master
      repo: https://github.com/HerculesCRUE/GnossDeustoBackend.git
    id: vars
    path: Models/Entities/SparqlObject.cs
    startLine: 39
  assemblies:
  - API_DISCOVER
  namespace: API_DISCOVER.Models.Entities
  syntax:
    content: public HashSet<string> vars { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.HashSet{System.String}
    content.vb: Public Property vars As HashSet(Of String)
  overload: API_DISCOVER.Models.Entities.SparqlObject.Head.vars*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: API_DISCOVER.Models.Entities
  commentId: N:API_DISCOVER.Models.Entities
  name: API_DISCOVER.Models.Entities
  nameWithType: API_DISCOVER.Models.Entities
  fullName: API_DISCOVER.Models.Entities
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: API_DISCOVER.Models.Entities.SparqlObject.Head.#ctor*
  commentId: Overload:API_DISCOVER.Models.Entities.SparqlObject.Head.#ctor
  name: Head
  nameWithType: SparqlObject.Head.Head
  fullName: API_DISCOVER.Models.Entities.SparqlObject.Head.Head
- uid: API_DISCOVER.Models.Entities.SparqlObject.Head.link*
  commentId: Overload:API_DISCOVER.Models.Entities.SparqlObject.Head.link
  name: link
  nameWithType: SparqlObject.Head.link
  fullName: API_DISCOVER.Models.Entities.SparqlObject.Head.link
- uid: System.Collections.Generic.HashSet{System.Object}
  commentId: T:System.Collections.Generic.HashSet{System.Object}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.HashSet`1
  name: HashSet<Object>
  nameWithType: HashSet<Object>
  fullName: System.Collections.Generic.HashSet<System.Object>
  nameWithType.vb: HashSet(Of Object)
  fullName.vb: System.Collections.Generic.HashSet(Of System.Object)
  name.vb: HashSet(Of Object)
  spec.csharp:
  - uid: System.Collections.Generic.HashSet`1
    name: HashSet
    nameWithType: HashSet
    fullName: System.Collections.Generic.HashSet
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.HashSet`1
    name: HashSet
    nameWithType: HashSet
    fullName: System.Collections.Generic.HashSet
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.HashSet`1
  commentId: T:System.Collections.Generic.HashSet`1
  isExternal: true
  name: HashSet<T>
  nameWithType: HashSet<T>
  fullName: System.Collections.Generic.HashSet<T>
  nameWithType.vb: HashSet(Of T)
  fullName.vb: System.Collections.Generic.HashSet(Of T)
  name.vb: HashSet(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.HashSet`1
    name: HashSet
    nameWithType: HashSet
    fullName: System.Collections.Generic.HashSet
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.HashSet`1
    name: HashSet
    nameWithType: HashSet
    fullName: System.Collections.Generic.HashSet
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: API_DISCOVER.Models.Entities.SparqlObject.Head.vars*
  commentId: Overload:API_DISCOVER.Models.Entities.SparqlObject.Head.vars
  name: vars
  nameWithType: SparqlObject.Head.vars
  fullName: API_DISCOVER.Models.Entities.SparqlObject.Head.vars
- uid: System.Collections.Generic.HashSet{System.String}
  commentId: T:System.Collections.Generic.HashSet{System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.HashSet`1
  name: HashSet<String>
  nameWithType: HashSet<String>
  fullName: System.Collections.Generic.HashSet<System.String>
  nameWithType.vb: HashSet(Of String)
  fullName.vb: System.Collections.Generic.HashSet(Of System.String)
  name.vb: HashSet(Of String)
  spec.csharp:
  - uid: System.Collections.Generic.HashSet`1
    name: HashSet
    nameWithType: HashSet
    fullName: System.Collections.Generic.HashSet
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.HashSet`1
    name: HashSet
    nameWithType: HashSet
    fullName: System.Collections.Generic.HashSet
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
