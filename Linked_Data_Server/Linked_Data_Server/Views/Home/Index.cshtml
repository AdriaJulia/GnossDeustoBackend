@model KeyValuePair<List<Linked_Data_Server.Models.Entities.DiscoverRdfViewModel>,Dictionary<string,string>>
@{
    ViewData["BodyClass"] = "fichaRecurso";
}

<script>
    $(function () {
        $("#autocomplete").autocomplete({
            minLength: 3,
            source: function (request, response) {
                $.ajax({
                    url: "@Url.Action("index", "autocomplete")",
                    type: "GET",
                    dataType: "json",
                    data: {
                        q: request.term
                    },
                    success: function (data) {
                        response($.map(data, function (item) {
                            return {
                                label: item.Key,
                                url: item.Value
                            }
                        }))
                    }
                })
            },
            select: function (event, ui) {
                document.location.href = ui.item.url;
            }
        })
    });
</script>
<div class="row">
    <div class="autocomplete ui-widget">
        <label for="autocomplete">Search: </label>
        <input id="autocomplete" class="ui-autocomplete-input" autocomplete="off">
    </div>
    <div class="col col-12 col-lg-12 col-contenido">
        <div class="wrapCol">
            <div class="header-resource">
                <div class="h1-container">
                    <h1>@ViewData["Title"]</h1>
                </div>
            </div>
            @if (Model.Key != null)
            {
                int i = 0;
                foreach (Linked_Data_Server.Models.Entities.DiscoverRdfViewModel entity in Model.Key)
                {
                    if (i == 1)
                    {
                        <h2>Entidades relacionadas</h2>
                    }
                    PintarItem(entity, i > 0,Model.Value);
                    i++;
                }
            }
        </div>
    </div>
</div>
@functions
{
    void PintarItem(Linked_Data_Server.Models.Entities.DiscoverRdfViewModel pItem, bool pEntityLink,Dictionary<string,string> pPropsTransform)
    {

        <div class="contenido">
            <div class="grupo grupo-descripcion">
                <div class="estado-tarea">

                    <table class="rdftable">
                        <thead class="table-subject">
                            <tr>
                                <th colspan="2">
                                    @if (pEntityLink)
                                    {
                                        <span id="@pItem.uriEntity"><a href="@pItem.uriEntity">@pItem.uriEntity</a></span>
                                    }
                                    else
                                    {
                                        <span id="@pItem.uriEntity">@pItem.uriEntity</span>
                                    }
                                </th>
                            </tr>
                        </thead>

                        <tbody>
                            @foreach (var stringProperty in pItem.stringPropertiesEntity)
                            {
                                foreach (var valor in stringProperty.Value)
                                {
                                    string propiedadAbreviada = stringProperty.Key;
                                    if (propiedadAbreviada.Contains("/"))
                                    {
                                        propiedadAbreviada = propiedadAbreviada.Substring(propiedadAbreviada.LastIndexOf("/") + 1);
                                    }
                            <tr>
                                @{
                                    String title = "";
                                }
                                @if (pItem.communNamePropierties.ContainsKey(stringProperty.Key))
                                {
                                    title = pItem.communNamePropierties[stringProperty.Key];
                                }
                                <td class="" title="@title">
                                    <b>@propiedadAbreviada</b>
                                    <a href="@stringProperty.Key" target="_blank"><span class="linkext">&nbsp;&nbsp;&nbsp;&nbsp;</span></a>
                                </td>

                                @if (pItem.urisRdf.Contains(valor))
                                {
                                    <td>
                                        <a href="@valor">
                                            @valor
                                        </a>
                                    </td>
                                }
                                else
                                {
                                    if (stringProperty.Key == "http://www.w3.org/1999/02/22-rdf-syntax-ns#type")
                                    {
                                        title = "";

                                        if (pItem.communNamePropierties.ContainsKey(stringProperty.Key))
                                        {
                                            title = pItem.communNamePropierties[stringProperty.Key];
                                        }

                                        string valorPropiedadAbreviada = valor;
                                        if (valorPropiedadAbreviada.Contains("/"))
                                        {
                                            valorPropiedadAbreviada = valorPropiedadAbreviada.Substring(valorPropiedadAbreviada.LastIndexOf("/") + 1);
                                        }
                                        <td title="@title"><b>@valorPropiedadAbreviada</b></td>
                                    }
                                    else if (pPropsTransform.ContainsKey(stringProperty.Key))
                                    {
                                        string uri = pPropsTransform[stringProperty.Key].Replace("{value}",valor);
                                        <td><b><a href="@uri" target="_blank">@valor</a> <a href="@uri" target="_blank"><span class="linkext">&nbsp;&nbsp;&nbsp;&nbsp;</span></a></b></td>
                                    }
                                    else
                                    {
                                        <td><b>@valor</b></td>
                                    }
                                }
                            </tr>
                                }
                            }
                            @foreach (var entitiesProperty in pItem.entitiesPropertiesEntity)
                            {
                                foreach (var valor in entitiesProperty.Value)
                                {
                                    string propiedadAbreviada = entitiesProperty.Key;
                                    if (propiedadAbreviada.Contains("/"))
                                    {
                                        propiedadAbreviada = propiedadAbreviada.Substring(propiedadAbreviada.LastIndexOf("/") + 1);
                                    }
                                    String title = "";

                                    if (pItem.communNamePropierties.ContainsKey(entitiesProperty.Key))
                                    {
                                        title = pItem.communNamePropierties[entitiesProperty.Key];
                                    }
                                    <tr>
                                        <td class="" title="@title">
                                            <b>@propiedadAbreviada</b>
                                            <a href="@entitiesProperty.Key" target="_blank"><span class="linkext">&nbsp;&nbsp;&nbsp;&nbsp;</span></a>
                                        </td>
                                        <td class="">
                                            @{
                                                PintarItem(valor, false,pPropsTransform);
                                            }
                                        </td>
                                    </tr>
                                }
                            }
                        </tbody>
                    </table>

                </div>

            </div>
        </div>
    }
}