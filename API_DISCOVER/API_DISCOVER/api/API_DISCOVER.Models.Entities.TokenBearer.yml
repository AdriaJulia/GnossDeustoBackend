### YamlMime:ManagedReference
items:
- uid: API_DISCOVER.Models.Entities.TokenBearer
  commentId: T:API_DISCOVER.Models.Entities.TokenBearer
  id: TokenBearer
  parent: API_DISCOVER.Models.Entities
  children:
  - API_DISCOVER.Models.Entities.TokenBearer.access_token
  - API_DISCOVER.Models.Entities.TokenBearer.expires_in
  - API_DISCOVER.Models.Entities.TokenBearer.scope
  - API_DISCOVER.Models.Entities.TokenBearer.token_type
  langs:
  - csharp
  - vb
  name: TokenBearer
  nameWithType: TokenBearer
  fullName: API_DISCOVER.Models.Entities.TokenBearer
  type: Class
  source:
    remote:
      path: API_DISCOVER/API_DISCOVER/Models/Entities/TokenBearer.cs
      branch: master
      repo: https://github.com/HerculesCRUE/GnossDeustoBackend.git
    id: TokenBearer
    path: Models/Entities/TokenBearer.cs
    startLine: 15
  assemblies:
  - API_DISCOVER
  namespace: API_DISCOVER.Models.Entities
  summary: "\nClase que representa un token de acceso\n"
  example: []
  syntax:
    content: public class TokenBearer
    content.vb: Public Class TokenBearer
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: API_DISCOVER.Models.Entities.TokenBearer.access_token
  commentId: P:API_DISCOVER.Models.Entities.TokenBearer.access_token
  id: access_token
  parent: API_DISCOVER.Models.Entities.TokenBearer
  langs:
  - csharp
  - vb
  name: access_token
  nameWithType: TokenBearer.access_token
  fullName: API_DISCOVER.Models.Entities.TokenBearer.access_token
  type: Property
  source:
    remote:
      path: API_DISCOVER/API_DISCOVER/Models/Entities/TokenBearer.cs
      branch: master
      repo: https://github.com/HerculesCRUE/GnossDeustoBackend.git
    id: access_token
    path: Models/Entities/TokenBearer.cs
    startLine: 18
  assemblies:
  - API_DISCOVER
  namespace: API_DISCOVER.Models.Entities
  syntax:
    content: public string access_token { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property access_token As String
  overload: API_DISCOVER.Models.Entities.TokenBearer.access_token*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: API_DISCOVER.Models.Entities.TokenBearer.expires_in
  commentId: P:API_DISCOVER.Models.Entities.TokenBearer.expires_in
  id: expires_in
  parent: API_DISCOVER.Models.Entities.TokenBearer
  langs:
  - csharp
  - vb
  name: expires_in
  nameWithType: TokenBearer.expires_in
  fullName: API_DISCOVER.Models.Entities.TokenBearer.expires_in
  type: Property
  source:
    remote:
      path: API_DISCOVER/API_DISCOVER/Models/Entities/TokenBearer.cs
      branch: master
      repo: https://github.com/HerculesCRUE/GnossDeustoBackend.git
    id: expires_in
    path: Models/Entities/TokenBearer.cs
    startLine: 19
  assemblies:
  - API_DISCOVER
  namespace: API_DISCOVER.Models.Entities
  syntax:
    content: public int expires_in { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property expires_in As Integer
  overload: API_DISCOVER.Models.Entities.TokenBearer.expires_in*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: API_DISCOVER.Models.Entities.TokenBearer.token_type
  commentId: P:API_DISCOVER.Models.Entities.TokenBearer.token_type
  id: token_type
  parent: API_DISCOVER.Models.Entities.TokenBearer
  langs:
  - csharp
  - vb
  name: token_type
  nameWithType: TokenBearer.token_type
  fullName: API_DISCOVER.Models.Entities.TokenBearer.token_type
  type: Property
  source:
    remote:
      path: API_DISCOVER/API_DISCOVER/Models/Entities/TokenBearer.cs
      branch: master
      repo: https://github.com/HerculesCRUE/GnossDeustoBackend.git
    id: token_type
    path: Models/Entities/TokenBearer.cs
    startLine: 20
  assemblies:
  - API_DISCOVER
  namespace: API_DISCOVER.Models.Entities
  syntax:
    content: public string token_type { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property token_type As String
  overload: API_DISCOVER.Models.Entities.TokenBearer.token_type*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: API_DISCOVER.Models.Entities.TokenBearer.scope
  commentId: P:API_DISCOVER.Models.Entities.TokenBearer.scope
  id: scope
  parent: API_DISCOVER.Models.Entities.TokenBearer
  langs:
  - csharp
  - vb
  name: scope
  nameWithType: TokenBearer.scope
  fullName: API_DISCOVER.Models.Entities.TokenBearer.scope
  type: Property
  source:
    remote:
      path: API_DISCOVER/API_DISCOVER/Models/Entities/TokenBearer.cs
      branch: master
      repo: https://github.com/HerculesCRUE/GnossDeustoBackend.git
    id: scope
    path: Models/Entities/TokenBearer.cs
    startLine: 21
  assemblies:
  - API_DISCOVER
  namespace: API_DISCOVER.Models.Entities
  syntax:
    content: public string scope { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property scope As String
  overload: API_DISCOVER.Models.Entities.TokenBearer.scope*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: API_DISCOVER.Models.Entities
  commentId: N:API_DISCOVER.Models.Entities
  name: API_DISCOVER.Models.Entities
  nameWithType: API_DISCOVER.Models.Entities
  fullName: API_DISCOVER.Models.Entities
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: API_DISCOVER.Models.Entities.TokenBearer.access_token*
  commentId: Overload:API_DISCOVER.Models.Entities.TokenBearer.access_token
  name: access_token
  nameWithType: TokenBearer.access_token
  fullName: API_DISCOVER.Models.Entities.TokenBearer.access_token
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: API_DISCOVER.Models.Entities.TokenBearer.expires_in*
  commentId: Overload:API_DISCOVER.Models.Entities.TokenBearer.expires_in
  name: expires_in
  nameWithType: TokenBearer.expires_in
  fullName: API_DISCOVER.Models.Entities.TokenBearer.expires_in
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: API_DISCOVER.Models.Entities.TokenBearer.token_type*
  commentId: Overload:API_DISCOVER.Models.Entities.TokenBearer.token_type
  name: token_type
  nameWithType: TokenBearer.token_type
  fullName: API_DISCOVER.Models.Entities.TokenBearer.token_type
- uid: API_DISCOVER.Models.Entities.TokenBearer.scope*
  commentId: Overload:API_DISCOVER.Models.Entities.TokenBearer.scope
  name: scope
  nameWithType: TokenBearer.scope
  fullName: API_DISCOVER.Models.Entities.TokenBearer.scope
