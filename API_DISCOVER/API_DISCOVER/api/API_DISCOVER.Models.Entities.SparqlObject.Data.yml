### YamlMime:ManagedReference
items:
- uid: API_DISCOVER.Models.Entities.SparqlObject.Data
  commentId: T:API_DISCOVER.Models.Entities.SparqlObject.Data
  id: SparqlObject.Data
  parent: API_DISCOVER.Models.Entities
  children:
  - API_DISCOVER.Models.Entities.SparqlObject.Data.#ctor
  - API_DISCOVER.Models.Entities.SparqlObject.Data.datatype
  - API_DISCOVER.Models.Entities.SparqlObject.Data.lang
  - API_DISCOVER.Models.Entities.SparqlObject.Data.type
  - API_DISCOVER.Models.Entities.SparqlObject.Data.value
  langs:
  - csharp
  - vb
  name: SparqlObject.Data
  nameWithType: SparqlObject.Data
  fullName: API_DISCOVER.Models.Entities.SparqlObject.Data
  type: Class
  source:
    remote:
      path: API_DISCOVER/API_DISCOVER/Models/Entities/SparqlObject.cs
      branch: master
      repo: https://github.com/HerculesCRUE/GnossDeustoBackend.git
    id: Data
    path: Models/Entities/SparqlObject.cs
    startLine: 20
  assemblies:
  - API_DISCOVER
  namespace: API_DISCOVER.Models.Entities
  syntax:
    content: >-
      [DataContract]

      public class Data
    content.vb: >-
      <DataContract>

      Public Class Data
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  attributes:
  - type: System.Runtime.Serialization.DataContractAttribute
    ctor: System.Runtime.Serialization.DataContractAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: API_DISCOVER.Models.Entities.SparqlObject.Data.#ctor
  commentId: M:API_DISCOVER.Models.Entities.SparqlObject.Data.#ctor
  id: '#ctor'
  parent: API_DISCOVER.Models.Entities.SparqlObject.Data
  langs:
  - csharp
  - vb
  name: Data()
  nameWithType: SparqlObject.Data.Data()
  fullName: API_DISCOVER.Models.Entities.SparqlObject.Data.Data()
  type: Constructor
  source:
    remote:
      path: API_DISCOVER/API_DISCOVER/Models/Entities/SparqlObject.cs
      branch: master
      repo: https://github.com/HerculesCRUE/GnossDeustoBackend.git
    id: .ctor
    path: Models/Entities/SparqlObject.cs
    startLine: 23
  assemblies:
  - API_DISCOVER
  namespace: API_DISCOVER.Models.Entities
  syntax:
    content: public Data()
    content.vb: Public Sub New
  overload: API_DISCOVER.Models.Entities.SparqlObject.Data.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: API_DISCOVER.Models.Entities.SparqlObject.Data.datatype
  commentId: P:API_DISCOVER.Models.Entities.SparqlObject.Data.datatype
  id: datatype
  parent: API_DISCOVER.Models.Entities.SparqlObject.Data
  langs:
  - csharp
  - vb
  name: datatype
  nameWithType: SparqlObject.Data.datatype
  fullName: API_DISCOVER.Models.Entities.SparqlObject.Data.datatype
  type: Property
  source:
    remote:
      path: API_DISCOVER/API_DISCOVER/Models/Entities/SparqlObject.cs
      branch: master
      repo: https://github.com/HerculesCRUE/GnossDeustoBackend.git
    id: datatype
    path: Models/Entities/SparqlObject.cs
    startLine: 24
  assemblies:
  - API_DISCOVER
  namespace: API_DISCOVER.Models.Entities
  syntax:
    content: >-
      [DataMember(Name = "datatype")]

      public string datatype { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <DataMember(Name:="datatype")>

      Public Property datatype As String
  overload: API_DISCOVER.Models.Entities.SparqlObject.Data.datatype*
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Name
      type: System.String
      value: datatype
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: API_DISCOVER.Models.Entities.SparqlObject.Data.type
  commentId: P:API_DISCOVER.Models.Entities.SparqlObject.Data.type
  id: type
  parent: API_DISCOVER.Models.Entities.SparqlObject.Data
  langs:
  - csharp
  - vb
  name: type
  nameWithType: SparqlObject.Data.type
  fullName: API_DISCOVER.Models.Entities.SparqlObject.Data.type
  type: Property
  source:
    remote:
      path: API_DISCOVER/API_DISCOVER/Models/Entities/SparqlObject.cs
      branch: master
      repo: https://github.com/HerculesCRUE/GnossDeustoBackend.git
    id: type
    path: Models/Entities/SparqlObject.cs
    startLine: 26
  assemblies:
  - API_DISCOVER
  namespace: API_DISCOVER.Models.Entities
  syntax:
    content: >-
      [DataMember(Name = "type")]

      public string type { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <DataMember(Name:="type")>

      Public Property type As String
  overload: API_DISCOVER.Models.Entities.SparqlObject.Data.type*
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Name
      type: System.String
      value: type
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: API_DISCOVER.Models.Entities.SparqlObject.Data.value
  commentId: P:API_DISCOVER.Models.Entities.SparqlObject.Data.value
  id: value
  parent: API_DISCOVER.Models.Entities.SparqlObject.Data
  langs:
  - csharp
  - vb
  name: value
  nameWithType: SparqlObject.Data.value
  fullName: API_DISCOVER.Models.Entities.SparqlObject.Data.value
  type: Property
  source:
    remote:
      path: API_DISCOVER/API_DISCOVER/Models/Entities/SparqlObject.cs
      branch: master
      repo: https://github.com/HerculesCRUE/GnossDeustoBackend.git
    id: value
    path: Models/Entities/SparqlObject.cs
    startLine: 28
  assemblies:
  - API_DISCOVER
  namespace: API_DISCOVER.Models.Entities
  syntax:
    content: >-
      [DataMember(Name = "value")]

      public string value { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <DataMember(Name:="value")>

      Public Property value As String
  overload: API_DISCOVER.Models.Entities.SparqlObject.Data.value*
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Name
      type: System.String
      value: value
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: API_DISCOVER.Models.Entities.SparqlObject.Data.lang
  commentId: P:API_DISCOVER.Models.Entities.SparqlObject.Data.lang
  id: lang
  parent: API_DISCOVER.Models.Entities.SparqlObject.Data
  langs:
  - csharp
  - vb
  name: lang
  nameWithType: SparqlObject.Data.lang
  fullName: API_DISCOVER.Models.Entities.SparqlObject.Data.lang
  type: Property
  source:
    remote:
      path: API_DISCOVER/API_DISCOVER/Models/Entities/SparqlObject.cs
      branch: master
      repo: https://github.com/HerculesCRUE/GnossDeustoBackend.git
    id: lang
    path: Models/Entities/SparqlObject.cs
    startLine: 30
  assemblies:
  - API_DISCOVER
  namespace: API_DISCOVER.Models.Entities
  syntax:
    content: >-
      [DataMember(Name = "xml:lang")]

      public string lang { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <DataMember(Name:="xml:lang")>

      Public Property lang As String
  overload: API_DISCOVER.Models.Entities.SparqlObject.Data.lang*
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Name
      type: System.String
      value: xml:lang
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: API_DISCOVER.Models.Entities
  commentId: N:API_DISCOVER.Models.Entities
  name: API_DISCOVER.Models.Entities
  nameWithType: API_DISCOVER.Models.Entities
  fullName: API_DISCOVER.Models.Entities
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: API_DISCOVER.Models.Entities.SparqlObject.Data.#ctor*
  commentId: Overload:API_DISCOVER.Models.Entities.SparqlObject.Data.#ctor
  name: Data
  nameWithType: SparqlObject.Data.Data
  fullName: API_DISCOVER.Models.Entities.SparqlObject.Data.Data
- uid: API_DISCOVER.Models.Entities.SparqlObject.Data.datatype*
  commentId: Overload:API_DISCOVER.Models.Entities.SparqlObject.Data.datatype
  name: datatype
  nameWithType: SparqlObject.Data.datatype
  fullName: API_DISCOVER.Models.Entities.SparqlObject.Data.datatype
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: API_DISCOVER.Models.Entities.SparqlObject.Data.type*
  commentId: Overload:API_DISCOVER.Models.Entities.SparqlObject.Data.type
  name: type
  nameWithType: SparqlObject.Data.type
  fullName: API_DISCOVER.Models.Entities.SparqlObject.Data.type
- uid: API_DISCOVER.Models.Entities.SparqlObject.Data.value*
  commentId: Overload:API_DISCOVER.Models.Entities.SparqlObject.Data.value
  name: value
  nameWithType: SparqlObject.Data.value
  fullName: API_DISCOVER.Models.Entities.SparqlObject.Data.value
- uid: API_DISCOVER.Models.Entities.SparqlObject.Data.lang*
  commentId: Overload:API_DISCOVER.Models.Entities.SparqlObject.Data.lang
  name: lang
  nameWithType: SparqlObject.Data.lang
  fullName: API_DISCOVER.Models.Entities.SparqlObject.Data.lang
