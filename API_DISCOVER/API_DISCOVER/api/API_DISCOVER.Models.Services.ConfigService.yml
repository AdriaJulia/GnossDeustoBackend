### YamlMime:ManagedReference
items:
- uid: API_DISCOVER.Models.Services.ConfigService
  commentId: T:API_DISCOVER.Models.Services.ConfigService
  id: ConfigService
  parent: API_DISCOVER.Models.Services
  children:
  - API_DISCOVER.Models.Services.ConfigService.Configuration
  - API_DISCOVER.Models.Services.ConfigService.GetMaxScore
  - API_DISCOVER.Models.Services.ConfigService.GetMinScore
  langs:
  - csharp
  - vb
  name: ConfigService
  nameWithType: ConfigService
  fullName: API_DISCOVER.Models.Services.ConfigService
  type: Class
  source:
    remote:
      path: API_DISCOVER/API_DISCOVER/Models/Services/ConfigService.cs
      branch: master
      repo: https://github.com/HerculesCRUE/GnossDeustoBackend.git
    id: ConfigService
    path: Models/Services/ConfigService.cs
    startLine: 15
  assemblies:
  - API_DISCOVER
  namespace: API_DISCOVER.Models.Services
  summary: "\nClase para obtener la configuraci√≥n necesaria del servicio\n"
  example: []
  syntax:
    content: public class ConfigService
    content.vb: Public Class ConfigService
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: API_DISCOVER.Models.Services.ConfigService.Configuration
  commentId: P:API_DISCOVER.Models.Services.ConfigService.Configuration
  id: Configuration
  parent: API_DISCOVER.Models.Services.ConfigService
  langs:
  - csharp
  - vb
  name: Configuration
  nameWithType: ConfigService.Configuration
  fullName: API_DISCOVER.Models.Services.ConfigService.Configuration
  type: Property
  source:
    remote:
      path: API_DISCOVER/API_DISCOVER/Models/Services/ConfigService.cs
      branch: master
      repo: https://github.com/HerculesCRUE/GnossDeustoBackend.git
    id: Configuration
    path: Models/Services/ConfigService.cs
    startLine: 17
  assemblies:
  - API_DISCOVER
  namespace: API_DISCOVER.Models.Services
  syntax:
    content: public IConfigurationRoot Configuration { get; set; }
    parameters: []
    return:
      type: Microsoft.Extensions.Configuration.IConfigurationRoot
    content.vb: Public Property Configuration As IConfigurationRoot
  overload: API_DISCOVER.Models.Services.ConfigService.Configuration*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: API_DISCOVER.Models.Services.ConfigService.GetMaxScore
  commentId: M:API_DISCOVER.Models.Services.ConfigService.GetMaxScore
  id: GetMaxScore
  parent: API_DISCOVER.Models.Services.ConfigService
  langs:
  - csharp
  - vb
  name: GetMaxScore()
  nameWithType: ConfigService.GetMaxScore()
  fullName: API_DISCOVER.Models.Services.ConfigService.GetMaxScore()
  type: Method
  source:
    remote:
      path: API_DISCOVER/API_DISCOVER/Models/Services/ConfigService.cs
      branch: master
      repo: https://github.com/HerculesCRUE/GnossDeustoBackend.git
    id: GetMaxScore
    path: Models/Services/ConfigService.cs
    startLine: 24
  assemblies:
  - API_DISCOVER
  namespace: API_DISCOVER.Models.Services
  summary: "\nObtiene el MaxScore\n"
  example: []
  syntax:
    content: public float GetMaxScore()
    return:
      type: System.Single
    content.vb: Public Function GetMaxScore As Single
  overload: API_DISCOVER.Models.Services.ConfigService.GetMaxScore*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: API_DISCOVER.Models.Services.ConfigService.GetMinScore
  commentId: M:API_DISCOVER.Models.Services.ConfigService.GetMinScore
  id: GetMinScore
  parent: API_DISCOVER.Models.Services.ConfigService
  langs:
  - csharp
  - vb
  name: GetMinScore()
  nameWithType: ConfigService.GetMinScore()
  fullName: API_DISCOVER.Models.Services.ConfigService.GetMinScore()
  type: Method
  source:
    remote:
      path: API_DISCOVER/API_DISCOVER/Models/Services/ConfigService.cs
      branch: master
      repo: https://github.com/HerculesCRUE/GnossDeustoBackend.git
    id: GetMinScore
    path: Models/Services/ConfigService.cs
    startLine: 50
  assemblies:
  - API_DISCOVER
  namespace: API_DISCOVER.Models.Services
  summary: "\nObtiene el MinScore\n"
  example: []
  syntax:
    content: public float GetMinScore()
    return:
      type: System.Single
    content.vb: Public Function GetMinScore As Single
  overload: API_DISCOVER.Models.Services.ConfigService.GetMinScore*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: API_DISCOVER.Models.Services
  commentId: N:API_DISCOVER.Models.Services
  name: API_DISCOVER.Models.Services
  nameWithType: API_DISCOVER.Models.Services
  fullName: API_DISCOVER.Models.Services
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: API_DISCOVER.Models.Services.ConfigService.Configuration*
  commentId: Overload:API_DISCOVER.Models.Services.ConfigService.Configuration
  name: Configuration
  nameWithType: ConfigService.Configuration
  fullName: API_DISCOVER.Models.Services.ConfigService.Configuration
- uid: Microsoft.Extensions.Configuration.IConfigurationRoot
  commentId: T:Microsoft.Extensions.Configuration.IConfigurationRoot
  parent: Microsoft.Extensions.Configuration
  isExternal: true
  name: IConfigurationRoot
  nameWithType: IConfigurationRoot
  fullName: Microsoft.Extensions.Configuration.IConfigurationRoot
- uid: Microsoft.Extensions.Configuration
  commentId: N:Microsoft.Extensions.Configuration
  isExternal: true
  name: Microsoft.Extensions.Configuration
  nameWithType: Microsoft.Extensions.Configuration
  fullName: Microsoft.Extensions.Configuration
- uid: API_DISCOVER.Models.Services.ConfigService.GetMaxScore*
  commentId: Overload:API_DISCOVER.Models.Services.ConfigService.GetMaxScore
  name: GetMaxScore
  nameWithType: ConfigService.GetMaxScore
  fullName: API_DISCOVER.Models.Services.ConfigService.GetMaxScore
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  name: Single
  nameWithType: Single
  fullName: System.Single
- uid: API_DISCOVER.Models.Services.ConfigService.GetMinScore*
  commentId: Overload:API_DISCOVER.Models.Services.ConfigService.GetMinScore
  name: GetMinScore
  nameWithType: ConfigService.GetMinScore
  fullName: API_DISCOVER.Models.Services.ConfigService.GetMinScore
