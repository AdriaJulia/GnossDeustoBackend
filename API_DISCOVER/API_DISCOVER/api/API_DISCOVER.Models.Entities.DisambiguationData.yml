### YamlMime:ManagedReference
items:
- uid: API_DISCOVER.Models.Entities.DisambiguationData
  commentId: T:API_DISCOVER.Models.Entities.DisambiguationData
  id: DisambiguationData
  parent: API_DISCOVER.Models.Entities
  children:
  - API_DISCOVER.Models.Entities.DisambiguationData.#ctor
  - API_DISCOVER.Models.Entities.DisambiguationData.disambiguation
  - API_DISCOVER.Models.Entities.DisambiguationData.identifiers
  - API_DISCOVER.Models.Entities.DisambiguationData.properties
  langs:
  - csharp
  - vb
  name: DisambiguationData
  nameWithType: DisambiguationData
  fullName: API_DISCOVER.Models.Entities.DisambiguationData
  type: Class
  source:
    remote:
      path: API_DISCOVER/API_DISCOVER/Models/Entities/DisambiguationData.cs
      branch: master
      repo: https://github.com/HerculesCRUE/GnossDeustoBackend.git
    id: DisambiguationData
    path: Models/Entities/DisambiguationData.cs
    startLine: 10
  assemblies:
  - API_DISCOVER
  namespace: API_DISCOVER.Models.Entities
  summary: "\nDatos para apoyar en la realización de la desambiguación\n"
  example: []
  syntax:
    content: public class DisambiguationData
    content.vb: Public Class DisambiguationData
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: API_DISCOVER.Models.Entities.DisambiguationData.#ctor
  commentId: M:API_DISCOVER.Models.Entities.DisambiguationData.#ctor
  id: '#ctor'
  parent: API_DISCOVER.Models.Entities.DisambiguationData
  langs:
  - csharp
  - vb
  name: DisambiguationData()
  nameWithType: DisambiguationData.DisambiguationData()
  fullName: API_DISCOVER.Models.Entities.DisambiguationData.DisambiguationData()
  type: Constructor
  source:
    remote:
      path: API_DISCOVER/API_DISCOVER/Models/Entities/DisambiguationData.cs
      branch: master
      repo: https://github.com/HerculesCRUE/GnossDeustoBackend.git
    id: .ctor
    path: Models/Entities/DisambiguationData.cs
    startLine: 15
  assemblies:
  - API_DISCOVER
  namespace: API_DISCOVER.Models.Entities
  summary: "\nConstructor\n"
  example: []
  syntax:
    content: public DisambiguationData()
    content.vb: Public Sub New
  overload: API_DISCOVER.Models.Entities.DisambiguationData.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: API_DISCOVER.Models.Entities.DisambiguationData.disambiguation
  commentId: P:API_DISCOVER.Models.Entities.DisambiguationData.disambiguation
  id: disambiguation
  parent: API_DISCOVER.Models.Entities.DisambiguationData
  langs:
  - csharp
  - vb
  name: disambiguation
  nameWithType: DisambiguationData.disambiguation
  fullName: API_DISCOVER.Models.Entities.DisambiguationData.disambiguation
  type: Property
  source:
    remote:
      path: API_DISCOVER/API_DISCOVER/Models/Entities/DisambiguationData.cs
      branch: master
      repo: https://github.com/HerculesCRUE/GnossDeustoBackend.git
    id: disambiguation
    path: Models/Entities/DisambiguationData.cs
    startLine: 47
  assemblies:
  - API_DISCOVER
  namespace: API_DISCOVER.Models.Entities
  summary: "\nConfiguración de desambiguación utilizada para apoyar en la realización de la desambiguación\n"
  example: []
  syntax:
    content: public Disambiguation disambiguation { get; set; }
    parameters: []
    return:
      type: API_DISCOVER.Models.Entities.Disambiguation
    content.vb: Public Property disambiguation As Disambiguation
  overload: API_DISCOVER.Models.Entities.DisambiguationData.disambiguation*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: API_DISCOVER.Models.Entities.DisambiguationData.identifiers
  commentId: P:API_DISCOVER.Models.Entities.DisambiguationData.identifiers
  id: identifiers
  parent: API_DISCOVER.Models.Entities.DisambiguationData
  langs:
  - csharp
  - vb
  name: identifiers
  nameWithType: DisambiguationData.identifiers
  fullName: API_DISCOVER.Models.Entities.DisambiguationData.identifiers
  type: Property
  source:
    remote:
      path: API_DISCOVER/API_DISCOVER/Models/Entities/DisambiguationData.cs
      branch: master
      repo: https://github.com/HerculesCRUE/GnossDeustoBackend.git
    id: identifiers
    path: Models/Entities/DisambiguationData.cs
    startLine: 51
  assemblies:
  - API_DISCOVER
  namespace: API_DISCOVER.Models.Entities
  summary: "\nIdentificadores para apoyar en la realización de la desambiguación, la clave es la url de la propiedad y los valores son listados con los identificadores\n"
  example: []
  syntax:
    content: public Dictionary<string, HashSet<string>> identifiers { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.HashSet{System.String}}
    content.vb: Public Property identifiers As Dictionary(Of String, HashSet(Of String))
  overload: API_DISCOVER.Models.Entities.DisambiguationData.identifiers*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: API_DISCOVER.Models.Entities.DisambiguationData.properties
  commentId: P:API_DISCOVER.Models.Entities.DisambiguationData.properties
  id: properties
  parent: API_DISCOVER.Models.Entities.DisambiguationData
  langs:
  - csharp
  - vb
  name: properties
  nameWithType: DisambiguationData.properties
  fullName: API_DISCOVER.Models.Entities.DisambiguationData.properties
  type: Property
  source:
    remote:
      path: API_DISCOVER/API_DISCOVER/Models/Entities/DisambiguationData.cs
      branch: master
      repo: https://github.com/HerculesCRUE/GnossDeustoBackend.git
    id: properties
    path: Models/Entities/DisambiguationData.cs
    startLine: 55
  assemblies:
  - API_DISCOVER
  namespace: API_DISCOVER.Models.Entities
  summary: "\nPropiedades utilizadas para la realización de la desambiguación\n"
  example: []
  syntax:
    content: public List<DisambiguationData.DataProperty> properties { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.List{API_DISCOVER.Models.Entities.DisambiguationData.DataProperty}
    content.vb: Public Property properties As List(Of DisambiguationData.DataProperty)
  overload: API_DISCOVER.Models.Entities.DisambiguationData.properties*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: API_DISCOVER.Models.Entities
  commentId: N:API_DISCOVER.Models.Entities
  name: API_DISCOVER.Models.Entities
  nameWithType: API_DISCOVER.Models.Entities
  fullName: API_DISCOVER.Models.Entities
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: API_DISCOVER.Models.Entities.DisambiguationData.#ctor*
  commentId: Overload:API_DISCOVER.Models.Entities.DisambiguationData.#ctor
  name: DisambiguationData
  nameWithType: DisambiguationData.DisambiguationData
  fullName: API_DISCOVER.Models.Entities.DisambiguationData.DisambiguationData
- uid: API_DISCOVER.Models.Entities.DisambiguationData.disambiguation*
  commentId: Overload:API_DISCOVER.Models.Entities.DisambiguationData.disambiguation
  name: disambiguation
  nameWithType: DisambiguationData.disambiguation
  fullName: API_DISCOVER.Models.Entities.DisambiguationData.disambiguation
- uid: API_DISCOVER.Models.Entities.Disambiguation
  commentId: T:API_DISCOVER.Models.Entities.Disambiguation
  parent: API_DISCOVER.Models.Entities
  name: Disambiguation
  nameWithType: Disambiguation
  fullName: API_DISCOVER.Models.Entities.Disambiguation
- uid: API_DISCOVER.Models.Entities.DisambiguationData.identifiers*
  commentId: Overload:API_DISCOVER.Models.Entities.DisambiguationData.identifiers
  name: identifiers
  nameWithType: DisambiguationData.identifiers
  fullName: API_DISCOVER.Models.Entities.DisambiguationData.identifiers
- uid: System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.HashSet{System.String}}
  commentId: T:System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.HashSet{System.String}}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.Dictionary`2
  name: Dictionary<String, HashSet<String>>
  nameWithType: Dictionary<String, HashSet<String>>
  fullName: System.Collections.Generic.Dictionary<System.String, System.Collections.Generic.HashSet<System.String>>
  nameWithType.vb: Dictionary(Of String, HashSet(Of String))
  fullName.vb: System.Collections.Generic.Dictionary(Of System.String, System.Collections.Generic.HashSet(Of System.String))
  name.vb: Dictionary(Of String, HashSet(Of String))
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.HashSet`1
    name: HashSet
    nameWithType: HashSet
    fullName: System.Collections.Generic.HashSet
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.HashSet`1
    name: HashSet
    nameWithType: HashSet
    fullName: System.Collections.Generic.HashSet
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.Dictionary`2
  commentId: T:System.Collections.Generic.Dictionary`2
  isExternal: true
  name: Dictionary<TKey, TValue>
  nameWithType: Dictionary<TKey, TValue>
  fullName: System.Collections.Generic.Dictionary<TKey, TValue>
  nameWithType.vb: Dictionary(Of TKey, TValue)
  fullName.vb: System.Collections.Generic.Dictionary(Of TKey, TValue)
  name.vb: Dictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: API_DISCOVER.Models.Entities.DisambiguationData.properties*
  commentId: Overload:API_DISCOVER.Models.Entities.DisambiguationData.properties
  name: properties
  nameWithType: DisambiguationData.properties
  fullName: API_DISCOVER.Models.Entities.DisambiguationData.properties
- uid: System.Collections.Generic.List{API_DISCOVER.Models.Entities.DisambiguationData.DataProperty}
  commentId: T:System.Collections.Generic.List{API_DISCOVER.Models.Entities.DisambiguationData.DataProperty}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<DisambiguationData.DataProperty>
  nameWithType: List<DisambiguationData.DataProperty>
  fullName: System.Collections.Generic.List<API_DISCOVER.Models.Entities.DisambiguationData.DataProperty>
  nameWithType.vb: List(Of DisambiguationData.DataProperty)
  fullName.vb: System.Collections.Generic.List(Of API_DISCOVER.Models.Entities.DisambiguationData.DataProperty)
  name.vb: List(Of DisambiguationData.DataProperty)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: API_DISCOVER.Models.Entities.DisambiguationData.DataProperty
    name: DisambiguationData.DataProperty
    nameWithType: DisambiguationData.DataProperty
    fullName: API_DISCOVER.Models.Entities.DisambiguationData.DataProperty
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: API_DISCOVER.Models.Entities.DisambiguationData.DataProperty
    name: DisambiguationData.DataProperty
    nameWithType: DisambiguationData.DataProperty
    fullName: API_DISCOVER.Models.Entities.DisambiguationData.DataProperty
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
