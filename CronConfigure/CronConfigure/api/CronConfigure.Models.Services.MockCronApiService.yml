### YamlMime:ManagedReference
items:
- uid: CronConfigure.Models.Services.MockCronApiService
  commentId: T:CronConfigure.Models.Services.MockCronApiService
  id: MockCronApiService
  parent: CronConfigure.Models.Services
  children:
  - CronConfigure.Models.Services.MockCronApiService.DeleteJob(System.String)
  - CronConfigure.Models.Services.MockCronApiService.DeleteRecurringJob(System.String)
  - CronConfigure.Models.Services.MockCronApiService.EnqueueJob(System.String)
  - CronConfigure.Models.Services.MockCronApiService.ExistJob(System.String)
  - CronConfigure.Models.Services.MockCronApiService.ExistRecurringJob(System.String)
  - CronConfigure.Models.Services.MockCronApiService.ExistScheduledJob(System.String)
  - CronConfigure.Models.Services.MockCronApiService.GetJobs(CronConfigure.Models.Enumeracion.JobType,System.Int32,System.Int32)
  - CronConfigure.Models.Services.MockCronApiService.GetJobsOfRecurringJob(System.String)
  - CronConfigure.Models.Services.MockCronApiService.GetRecurringJobs
  - CronConfigure.Models.Services.MockCronApiService.GetRecurringJobs(System.String)
  - CronConfigure.Models.Services.MockCronApiService.GetScheduledJobs(System.Int32,System.Int32)
  langs:
  - csharp
  - vb
  name: MockCronApiService
  nameWithType: MockCronApiService
  fullName: CronConfigure.Models.Services.MockCronApiService
  type: Class
  source:
    remote:
      path: CronConfigure/CronConfigure/Models/Services/MockCronApiService.cs
      branch: master
      repo: https://github.com/HerculesCRUE/GnossDeustoBackend.git
    id: MockCronApiService
    path: Models/Services/MockCronApiService.cs
    startLine: 9
  assemblies:
  - CronConfigure
  namespace: CronConfigure.Models.Services
  syntax:
    content: 'public class MockCronApiService : ICronApiService'
    content.vb: >-
      Public Class MockCronApiService
          Implements ICronApiService
  inheritance:
  - System.Object
  implements:
  - CronConfigure.Models.Services.ICronApiService
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: CronConfigure.Models.Services.MockCronApiService.DeleteJob(System.String)
  commentId: M:CronConfigure.Models.Services.MockCronApiService.DeleteJob(System.String)
  id: DeleteJob(System.String)
  parent: CronConfigure.Models.Services.MockCronApiService
  langs:
  - csharp
  - vb
  name: DeleteJob(String)
  nameWithType: MockCronApiService.DeleteJob(String)
  fullName: CronConfigure.Models.Services.MockCronApiService.DeleteJob(System.String)
  type: Method
  source:
    remote:
      path: CronConfigure/CronConfigure/Models/Services/MockCronApiService.cs
      branch: master
      repo: https://github.com/HerculesCRUE/GnossDeustoBackend.git
    id: DeleteJob
    path: Models/Services/MockCronApiService.cs
    startLine: 11
  assemblies:
  - CronConfigure
  namespace: CronConfigure.Models.Services
  syntax:
    content: public void DeleteJob(string id)
    parameters:
    - id: id
      type: System.String
    content.vb: Public Sub DeleteJob(id As String)
  overload: CronConfigure.Models.Services.MockCronApiService.DeleteJob*
  implements:
  - CronConfigure.Models.Services.ICronApiService.DeleteJob(System.String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: CronConfigure.Models.Services.MockCronApiService.DeleteRecurringJob(System.String)
  commentId: M:CronConfigure.Models.Services.MockCronApiService.DeleteRecurringJob(System.String)
  id: DeleteRecurringJob(System.String)
  parent: CronConfigure.Models.Services.MockCronApiService
  langs:
  - csharp
  - vb
  name: DeleteRecurringJob(String)
  nameWithType: MockCronApiService.DeleteRecurringJob(String)
  fullName: CronConfigure.Models.Services.MockCronApiService.DeleteRecurringJob(System.String)
  type: Method
  source:
    remote:
      path: CronConfigure/CronConfigure/Models/Services/MockCronApiService.cs
      branch: master
      repo: https://github.com/HerculesCRUE/GnossDeustoBackend.git
    id: DeleteRecurringJob
    path: Models/Services/MockCronApiService.cs
    startLine: 16
  assemblies:
  - CronConfigure
  namespace: CronConfigure.Models.Services
  syntax:
    content: public void DeleteRecurringJob(string id)
    parameters:
    - id: id
      type: System.String
    content.vb: Public Sub DeleteRecurringJob(id As String)
  overload: CronConfigure.Models.Services.MockCronApiService.DeleteRecurringJob*
  implements:
  - CronConfigure.Models.Services.ICronApiService.DeleteRecurringJob(System.String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: CronConfigure.Models.Services.MockCronApiService.EnqueueJob(System.String)
  commentId: M:CronConfigure.Models.Services.MockCronApiService.EnqueueJob(System.String)
  id: EnqueueJob(System.String)
  parent: CronConfigure.Models.Services.MockCronApiService
  langs:
  - csharp
  - vb
  name: EnqueueJob(String)
  nameWithType: MockCronApiService.EnqueueJob(String)
  fullName: CronConfigure.Models.Services.MockCronApiService.EnqueueJob(System.String)
  type: Method
  source:
    remote:
      path: CronConfigure/CronConfigure/Models/Services/MockCronApiService.cs
      branch: master
      repo: https://github.com/HerculesCRUE/GnossDeustoBackend.git
    id: EnqueueJob
    path: Models/Services/MockCronApiService.cs
    startLine: 21
  assemblies:
  - CronConfigure
  namespace: CronConfigure.Models.Services
  syntax:
    content: public void EnqueueJob(string id)
    parameters:
    - id: id
      type: System.String
    content.vb: Public Sub EnqueueJob(id As String)
  overload: CronConfigure.Models.Services.MockCronApiService.EnqueueJob*
  implements:
  - CronConfigure.Models.Services.ICronApiService.EnqueueJob(System.String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: CronConfigure.Models.Services.MockCronApiService.ExistJob(System.String)
  commentId: M:CronConfigure.Models.Services.MockCronApiService.ExistJob(System.String)
  id: ExistJob(System.String)
  parent: CronConfigure.Models.Services.MockCronApiService
  langs:
  - csharp
  - vb
  name: ExistJob(String)
  nameWithType: MockCronApiService.ExistJob(String)
  fullName: CronConfigure.Models.Services.MockCronApiService.ExistJob(System.String)
  type: Method
  source:
    remote:
      path: CronConfigure/CronConfigure/Models/Services/MockCronApiService.cs
      branch: master
      repo: https://github.com/HerculesCRUE/GnossDeustoBackend.git
    id: ExistJob
    path: Models/Services/MockCronApiService.cs
    startLine: 26
  assemblies:
  - CronConfigure
  namespace: CronConfigure.Models.Services
  syntax:
    content: public bool ExistJob(string id)
    parameters:
    - id: id
      type: System.String
    return:
      type: System.Boolean
    content.vb: Public Function ExistJob(id As String) As Boolean
  overload: CronConfigure.Models.Services.MockCronApiService.ExistJob*
  implements:
  - CronConfigure.Models.Services.ICronApiService.ExistJob(System.String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: CronConfigure.Models.Services.MockCronApiService.ExistRecurringJob(System.String)
  commentId: M:CronConfigure.Models.Services.MockCronApiService.ExistRecurringJob(System.String)
  id: ExistRecurringJob(System.String)
  parent: CronConfigure.Models.Services.MockCronApiService
  langs:
  - csharp
  - vb
  name: ExistRecurringJob(String)
  nameWithType: MockCronApiService.ExistRecurringJob(String)
  fullName: CronConfigure.Models.Services.MockCronApiService.ExistRecurringJob(System.String)
  type: Method
  source:
    remote:
      path: CronConfigure/CronConfigure/Models/Services/MockCronApiService.cs
      branch: master
      repo: https://github.com/HerculesCRUE/GnossDeustoBackend.git
    id: ExistRecurringJob
    path: Models/Services/MockCronApiService.cs
    startLine: 38
  assemblies:
  - CronConfigure
  namespace: CronConfigure.Models.Services
  syntax:
    content: public bool ExistRecurringJob(string recurringJob)
    parameters:
    - id: recurringJob
      type: System.String
    return:
      type: System.Boolean
    content.vb: Public Function ExistRecurringJob(recurringJob As String) As Boolean
  overload: CronConfigure.Models.Services.MockCronApiService.ExistRecurringJob*
  implements:
  - CronConfigure.Models.Services.ICronApiService.ExistRecurringJob(System.String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: CronConfigure.Models.Services.MockCronApiService.ExistScheduledJob(System.String)
  commentId: M:CronConfigure.Models.Services.MockCronApiService.ExistScheduledJob(System.String)
  id: ExistScheduledJob(System.String)
  parent: CronConfigure.Models.Services.MockCronApiService
  langs:
  - csharp
  - vb
  name: ExistScheduledJob(String)
  nameWithType: MockCronApiService.ExistScheduledJob(String)
  fullName: CronConfigure.Models.Services.MockCronApiService.ExistScheduledJob(System.String)
  type: Method
  source:
    remote:
      path: CronConfigure/CronConfigure/Models/Services/MockCronApiService.cs
      branch: master
      repo: https://github.com/HerculesCRUE/GnossDeustoBackend.git
    id: ExistScheduledJob
    path: Models/Services/MockCronApiService.cs
    startLine: 50
  assemblies:
  - CronConfigure
  namespace: CronConfigure.Models.Services
  syntax:
    content: public bool ExistScheduledJob(string id)
    parameters:
    - id: id
      type: System.String
    return:
      type: System.Boolean
    content.vb: Public Function ExistScheduledJob(id As String) As Boolean
  overload: CronConfigure.Models.Services.MockCronApiService.ExistScheduledJob*
  implements:
  - CronConfigure.Models.Services.ICronApiService.ExistScheduledJob(System.String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: CronConfigure.Models.Services.MockCronApiService.GetJobs(CronConfigure.Models.Enumeracion.JobType,System.Int32,System.Int32)
  commentId: M:CronConfigure.Models.Services.MockCronApiService.GetJobs(CronConfigure.Models.Enumeracion.JobType,System.Int32,System.Int32)
  id: GetJobs(CronConfigure.Models.Enumeracion.JobType,System.Int32,System.Int32)
  parent: CronConfigure.Models.Services.MockCronApiService
  langs:
  - csharp
  - vb
  name: GetJobs(JobType, Int32, Int32)
  nameWithType: MockCronApiService.GetJobs(JobType, Int32, Int32)
  fullName: CronConfigure.Models.Services.MockCronApiService.GetJobs(CronConfigure.Models.Enumeracion.JobType, System.Int32, System.Int32)
  type: Method
  source:
    remote:
      path: CronConfigure/CronConfigure/Models/Services/MockCronApiService.cs
      branch: master
      repo: https://github.com/HerculesCRUE/GnossDeustoBackend.git
    id: GetJobs
    path: Models/Services/MockCronApiService.cs
    startLine: 62
  assemblies:
  - CronConfigure
  namespace: CronConfigure.Models.Services
  syntax:
    content: public List<JobViewModel> GetJobs(JobType type, int from, int count)
    parameters:
    - id: type
      type: CronConfigure.Models.Enumeracion.JobType
    - id: from
      type: System.Int32
    - id: count
      type: System.Int32
    return:
      type: System.Collections.Generic.List{CronConfigure.ViewModels.JobViewModel}
    content.vb: Public Function GetJobs(type As JobType, from As Integer, count As Integer) As List(Of JobViewModel)
  overload: CronConfigure.Models.Services.MockCronApiService.GetJobs*
  implements:
  - CronConfigure.Models.Services.ICronApiService.GetJobs(CronConfigure.Models.Enumeracion.JobType,System.Int32,System.Int32)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: CronConfigure.Models.Services.MockCronApiService.GetJobsOfRecurringJob(System.String)
  commentId: M:CronConfigure.Models.Services.MockCronApiService.GetJobsOfRecurringJob(System.String)
  id: GetJobsOfRecurringJob(System.String)
  parent: CronConfigure.Models.Services.MockCronApiService
  langs:
  - csharp
  - vb
  name: GetJobsOfRecurringJob(String)
  nameWithType: MockCronApiService.GetJobsOfRecurringJob(String)
  fullName: CronConfigure.Models.Services.MockCronApiService.GetJobsOfRecurringJob(System.String)
  type: Method
  source:
    remote:
      path: CronConfigure/CronConfigure/Models/Services/MockCronApiService.cs
      branch: master
      repo: https://github.com/HerculesCRUE/GnossDeustoBackend.git
    id: GetJobsOfRecurringJob
    path: Models/Services/MockCronApiService.cs
    startLine: 67
  assemblies:
  - CronConfigure
  namespace: CronConfigure.Models.Services
  syntax:
    content: public List<JobViewModel> GetJobsOfRecurringJob(string recurringJob)
    parameters:
    - id: recurringJob
      type: System.String
    return:
      type: System.Collections.Generic.List{CronConfigure.ViewModels.JobViewModel}
    content.vb: Public Function GetJobsOfRecurringJob(recurringJob As String) As List(Of JobViewModel)
  overload: CronConfigure.Models.Services.MockCronApiService.GetJobsOfRecurringJob*
  implements:
  - CronConfigure.Models.Services.ICronApiService.GetJobsOfRecurringJob(System.String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: CronConfigure.Models.Services.MockCronApiService.GetRecurringJobs
  commentId: M:CronConfigure.Models.Services.MockCronApiService.GetRecurringJobs
  id: GetRecurringJobs
  parent: CronConfigure.Models.Services.MockCronApiService
  langs:
  - csharp
  - vb
  name: GetRecurringJobs()
  nameWithType: MockCronApiService.GetRecurringJobs()
  fullName: CronConfigure.Models.Services.MockCronApiService.GetRecurringJobs()
  type: Method
  source:
    remote:
      path: CronConfigure/CronConfigure/Models/Services/MockCronApiService.cs
      branch: master
      repo: https://github.com/HerculesCRUE/GnossDeustoBackend.git
    id: GetRecurringJobs
    path: Models/Services/MockCronApiService.cs
    startLine: 72
  assemblies:
  - CronConfigure
  namespace: CronConfigure.Models.Services
  syntax:
    content: public List<RecurringJobViewModel> GetRecurringJobs()
    return:
      type: System.Collections.Generic.List{CronConfigure.ViewModels.RecurringJobViewModel}
    content.vb: Public Function GetRecurringJobs As List(Of RecurringJobViewModel)
  overload: CronConfigure.Models.Services.MockCronApiService.GetRecurringJobs*
  implements:
  - CronConfigure.Models.Services.ICronApiService.GetRecurringJobs
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: CronConfigure.Models.Services.MockCronApiService.GetRecurringJobs(System.String)
  commentId: M:CronConfigure.Models.Services.MockCronApiService.GetRecurringJobs(System.String)
  id: GetRecurringJobs(System.String)
  parent: CronConfigure.Models.Services.MockCronApiService
  langs:
  - csharp
  - vb
  name: GetRecurringJobs(String)
  nameWithType: MockCronApiService.GetRecurringJobs(String)
  fullName: CronConfigure.Models.Services.MockCronApiService.GetRecurringJobs(System.String)
  type: Method
  source:
    remote:
      path: CronConfigure/CronConfigure/Models/Services/MockCronApiService.cs
      branch: master
      repo: https://github.com/HerculesCRUE/GnossDeustoBackend.git
    id: GetRecurringJobs
    path: Models/Services/MockCronApiService.cs
    startLine: 77
  assemblies:
  - CronConfigure
  namespace: CronConfigure.Models.Services
  syntax:
    content: public RecurringJobViewModel GetRecurringJobs(string id)
    parameters:
    - id: id
      type: System.String
    return:
      type: CronConfigure.ViewModels.RecurringJobViewModel
    content.vb: Public Function GetRecurringJobs(id As String) As RecurringJobViewModel
  overload: CronConfigure.Models.Services.MockCronApiService.GetRecurringJobs*
  implements:
  - CronConfigure.Models.Services.ICronApiService.GetRecurringJobs(System.String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: CronConfigure.Models.Services.MockCronApiService.GetScheduledJobs(System.Int32,System.Int32)
  commentId: M:CronConfigure.Models.Services.MockCronApiService.GetScheduledJobs(System.Int32,System.Int32)
  id: GetScheduledJobs(System.Int32,System.Int32)
  parent: CronConfigure.Models.Services.MockCronApiService
  langs:
  - csharp
  - vb
  name: GetScheduledJobs(Int32, Int32)
  nameWithType: MockCronApiService.GetScheduledJobs(Int32, Int32)
  fullName: CronConfigure.Models.Services.MockCronApiService.GetScheduledJobs(System.Int32, System.Int32)
  type: Method
  source:
    remote:
      path: CronConfigure/CronConfigure/Models/Services/MockCronApiService.cs
      branch: master
      repo: https://github.com/HerculesCRUE/GnossDeustoBackend.git
    id: GetScheduledJobs
    path: Models/Services/MockCronApiService.cs
    startLine: 82
  assemblies:
  - CronConfigure
  namespace: CronConfigure.Models.Services
  syntax:
    content: public List<ScheduledJobViewModel> GetScheduledJobs(int from, int count)
    parameters:
    - id: from
      type: System.Int32
    - id: count
      type: System.Int32
    return:
      type: System.Collections.Generic.List{CronConfigure.ViewModels.ScheduledJobViewModel}
    content.vb: Public Function GetScheduledJobs(from As Integer, count As Integer) As List(Of ScheduledJobViewModel)
  overload: CronConfigure.Models.Services.MockCronApiService.GetScheduledJobs*
  implements:
  - CronConfigure.Models.Services.ICronApiService.GetScheduledJobs(System.Int32,System.Int32)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: CronConfigure.Models.Services
  commentId: N:CronConfigure.Models.Services
  name: CronConfigure.Models.Services
  nameWithType: CronConfigure.Models.Services
  fullName: CronConfigure.Models.Services
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: CronConfigure.Models.Services.ICronApiService
  commentId: T:CronConfigure.Models.Services.ICronApiService
  parent: CronConfigure.Models.Services
  name: ICronApiService
  nameWithType: ICronApiService
  fullName: CronConfigure.Models.Services.ICronApiService
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: CronConfigure.Models.Services.MockCronApiService.DeleteJob*
  commentId: Overload:CronConfigure.Models.Services.MockCronApiService.DeleteJob
  name: DeleteJob
  nameWithType: MockCronApiService.DeleteJob
  fullName: CronConfigure.Models.Services.MockCronApiService.DeleteJob
- uid: CronConfigure.Models.Services.ICronApiService.DeleteJob(System.String)
  commentId: M:CronConfigure.Models.Services.ICronApiService.DeleteJob(System.String)
  parent: CronConfigure.Models.Services.ICronApiService
  isExternal: true
  name: DeleteJob(String)
  nameWithType: ICronApiService.DeleteJob(String)
  fullName: CronConfigure.Models.Services.ICronApiService.DeleteJob(System.String)
  spec.csharp:
  - uid: CronConfigure.Models.Services.ICronApiService.DeleteJob(System.String)
    name: DeleteJob
    nameWithType: ICronApiService.DeleteJob
    fullName: CronConfigure.Models.Services.ICronApiService.DeleteJob
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: CronConfigure.Models.Services.ICronApiService.DeleteJob(System.String)
    name: DeleteJob
    nameWithType: ICronApiService.DeleteJob
    fullName: CronConfigure.Models.Services.ICronApiService.DeleteJob
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: CronConfigure.Models.Services.MockCronApiService.DeleteRecurringJob*
  commentId: Overload:CronConfigure.Models.Services.MockCronApiService.DeleteRecurringJob
  name: DeleteRecurringJob
  nameWithType: MockCronApiService.DeleteRecurringJob
  fullName: CronConfigure.Models.Services.MockCronApiService.DeleteRecurringJob
- uid: CronConfigure.Models.Services.ICronApiService.DeleteRecurringJob(System.String)
  commentId: M:CronConfigure.Models.Services.ICronApiService.DeleteRecurringJob(System.String)
  parent: CronConfigure.Models.Services.ICronApiService
  isExternal: true
  name: DeleteRecurringJob(String)
  nameWithType: ICronApiService.DeleteRecurringJob(String)
  fullName: CronConfigure.Models.Services.ICronApiService.DeleteRecurringJob(System.String)
  spec.csharp:
  - uid: CronConfigure.Models.Services.ICronApiService.DeleteRecurringJob(System.String)
    name: DeleteRecurringJob
    nameWithType: ICronApiService.DeleteRecurringJob
    fullName: CronConfigure.Models.Services.ICronApiService.DeleteRecurringJob
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: CronConfigure.Models.Services.ICronApiService.DeleteRecurringJob(System.String)
    name: DeleteRecurringJob
    nameWithType: ICronApiService.DeleteRecurringJob
    fullName: CronConfigure.Models.Services.ICronApiService.DeleteRecurringJob
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: CronConfigure.Models.Services.MockCronApiService.EnqueueJob*
  commentId: Overload:CronConfigure.Models.Services.MockCronApiService.EnqueueJob
  name: EnqueueJob
  nameWithType: MockCronApiService.EnqueueJob
  fullName: CronConfigure.Models.Services.MockCronApiService.EnqueueJob
- uid: CronConfigure.Models.Services.ICronApiService.EnqueueJob(System.String)
  commentId: M:CronConfigure.Models.Services.ICronApiService.EnqueueJob(System.String)
  parent: CronConfigure.Models.Services.ICronApiService
  isExternal: true
  name: EnqueueJob(String)
  nameWithType: ICronApiService.EnqueueJob(String)
  fullName: CronConfigure.Models.Services.ICronApiService.EnqueueJob(System.String)
  spec.csharp:
  - uid: CronConfigure.Models.Services.ICronApiService.EnqueueJob(System.String)
    name: EnqueueJob
    nameWithType: ICronApiService.EnqueueJob
    fullName: CronConfigure.Models.Services.ICronApiService.EnqueueJob
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: CronConfigure.Models.Services.ICronApiService.EnqueueJob(System.String)
    name: EnqueueJob
    nameWithType: ICronApiService.EnqueueJob
    fullName: CronConfigure.Models.Services.ICronApiService.EnqueueJob
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: CronConfigure.Models.Services.MockCronApiService.ExistJob*
  commentId: Overload:CronConfigure.Models.Services.MockCronApiService.ExistJob
  name: ExistJob
  nameWithType: MockCronApiService.ExistJob
  fullName: CronConfigure.Models.Services.MockCronApiService.ExistJob
- uid: CronConfigure.Models.Services.ICronApiService.ExistJob(System.String)
  commentId: M:CronConfigure.Models.Services.ICronApiService.ExistJob(System.String)
  parent: CronConfigure.Models.Services.ICronApiService
  isExternal: true
  name: ExistJob(String)
  nameWithType: ICronApiService.ExistJob(String)
  fullName: CronConfigure.Models.Services.ICronApiService.ExistJob(System.String)
  spec.csharp:
  - uid: CronConfigure.Models.Services.ICronApiService.ExistJob(System.String)
    name: ExistJob
    nameWithType: ICronApiService.ExistJob
    fullName: CronConfigure.Models.Services.ICronApiService.ExistJob
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: CronConfigure.Models.Services.ICronApiService.ExistJob(System.String)
    name: ExistJob
    nameWithType: ICronApiService.ExistJob
    fullName: CronConfigure.Models.Services.ICronApiService.ExistJob
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: CronConfigure.Models.Services.MockCronApiService.ExistRecurringJob*
  commentId: Overload:CronConfigure.Models.Services.MockCronApiService.ExistRecurringJob
  name: ExistRecurringJob
  nameWithType: MockCronApiService.ExistRecurringJob
  fullName: CronConfigure.Models.Services.MockCronApiService.ExistRecurringJob
- uid: CronConfigure.Models.Services.ICronApiService.ExistRecurringJob(System.String)
  commentId: M:CronConfigure.Models.Services.ICronApiService.ExistRecurringJob(System.String)
  parent: CronConfigure.Models.Services.ICronApiService
  isExternal: true
  name: ExistRecurringJob(String)
  nameWithType: ICronApiService.ExistRecurringJob(String)
  fullName: CronConfigure.Models.Services.ICronApiService.ExistRecurringJob(System.String)
  spec.csharp:
  - uid: CronConfigure.Models.Services.ICronApiService.ExistRecurringJob(System.String)
    name: ExistRecurringJob
    nameWithType: ICronApiService.ExistRecurringJob
    fullName: CronConfigure.Models.Services.ICronApiService.ExistRecurringJob
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: CronConfigure.Models.Services.ICronApiService.ExistRecurringJob(System.String)
    name: ExistRecurringJob
    nameWithType: ICronApiService.ExistRecurringJob
    fullName: CronConfigure.Models.Services.ICronApiService.ExistRecurringJob
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: CronConfigure.Models.Services.MockCronApiService.ExistScheduledJob*
  commentId: Overload:CronConfigure.Models.Services.MockCronApiService.ExistScheduledJob
  name: ExistScheduledJob
  nameWithType: MockCronApiService.ExistScheduledJob
  fullName: CronConfigure.Models.Services.MockCronApiService.ExistScheduledJob
- uid: CronConfigure.Models.Services.ICronApiService.ExistScheduledJob(System.String)
  commentId: M:CronConfigure.Models.Services.ICronApiService.ExistScheduledJob(System.String)
  parent: CronConfigure.Models.Services.ICronApiService
  isExternal: true
  name: ExistScheduledJob(String)
  nameWithType: ICronApiService.ExistScheduledJob(String)
  fullName: CronConfigure.Models.Services.ICronApiService.ExistScheduledJob(System.String)
  spec.csharp:
  - uid: CronConfigure.Models.Services.ICronApiService.ExistScheduledJob(System.String)
    name: ExistScheduledJob
    nameWithType: ICronApiService.ExistScheduledJob
    fullName: CronConfigure.Models.Services.ICronApiService.ExistScheduledJob
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: CronConfigure.Models.Services.ICronApiService.ExistScheduledJob(System.String)
    name: ExistScheduledJob
    nameWithType: ICronApiService.ExistScheduledJob
    fullName: CronConfigure.Models.Services.ICronApiService.ExistScheduledJob
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: CronConfigure.Models.Services.MockCronApiService.GetJobs*
  commentId: Overload:CronConfigure.Models.Services.MockCronApiService.GetJobs
  name: GetJobs
  nameWithType: MockCronApiService.GetJobs
  fullName: CronConfigure.Models.Services.MockCronApiService.GetJobs
- uid: CronConfigure.Models.Services.ICronApiService.GetJobs(CronConfigure.Models.Enumeracion.JobType,System.Int32,System.Int32)
  commentId: M:CronConfigure.Models.Services.ICronApiService.GetJobs(CronConfigure.Models.Enumeracion.JobType,System.Int32,System.Int32)
  parent: CronConfigure.Models.Services.ICronApiService
  isExternal: true
  name: GetJobs(JobType, Int32, Int32)
  nameWithType: ICronApiService.GetJobs(JobType, Int32, Int32)
  fullName: CronConfigure.Models.Services.ICronApiService.GetJobs(CronConfigure.Models.Enumeracion.JobType, System.Int32, System.Int32)
  spec.csharp:
  - uid: CronConfigure.Models.Services.ICronApiService.GetJobs(CronConfigure.Models.Enumeracion.JobType,System.Int32,System.Int32)
    name: GetJobs
    nameWithType: ICronApiService.GetJobs
    fullName: CronConfigure.Models.Services.ICronApiService.GetJobs
  - name: (
    nameWithType: (
    fullName: (
  - uid: CronConfigure.Models.Enumeracion.JobType
    name: JobType
    nameWithType: JobType
    fullName: CronConfigure.Models.Enumeracion.JobType
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: CronConfigure.Models.Services.ICronApiService.GetJobs(CronConfigure.Models.Enumeracion.JobType,System.Int32,System.Int32)
    name: GetJobs
    nameWithType: ICronApiService.GetJobs
    fullName: CronConfigure.Models.Services.ICronApiService.GetJobs
  - name: (
    nameWithType: (
    fullName: (
  - uid: CronConfigure.Models.Enumeracion.JobType
    name: JobType
    nameWithType: JobType
    fullName: CronConfigure.Models.Enumeracion.JobType
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: CronConfigure.Models.Enumeracion.JobType
  commentId: T:CronConfigure.Models.Enumeracion.JobType
  parent: CronConfigure.Models.Enumeracion
  name: JobType
  nameWithType: JobType
  fullName: CronConfigure.Models.Enumeracion.JobType
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Collections.Generic.List{CronConfigure.ViewModels.JobViewModel}
  commentId: T:System.Collections.Generic.List{CronConfigure.ViewModels.JobViewModel}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<JobViewModel>
  nameWithType: List<JobViewModel>
  fullName: System.Collections.Generic.List<CronConfigure.ViewModels.JobViewModel>
  nameWithType.vb: List(Of JobViewModel)
  fullName.vb: System.Collections.Generic.List(Of CronConfigure.ViewModels.JobViewModel)
  name.vb: List(Of JobViewModel)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: CronConfigure.ViewModels.JobViewModel
    name: JobViewModel
    nameWithType: JobViewModel
    fullName: CronConfigure.ViewModels.JobViewModel
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: CronConfigure.ViewModels.JobViewModel
    name: JobViewModel
    nameWithType: JobViewModel
    fullName: CronConfigure.ViewModels.JobViewModel
  - name: )
    nameWithType: )
    fullName: )
- uid: CronConfigure.Models.Enumeracion
  commentId: N:CronConfigure.Models.Enumeracion
  name: CronConfigure.Models.Enumeracion
  nameWithType: CronConfigure.Models.Enumeracion
  fullName: CronConfigure.Models.Enumeracion
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: CronConfigure.Models.Services.MockCronApiService.GetJobsOfRecurringJob*
  commentId: Overload:CronConfigure.Models.Services.MockCronApiService.GetJobsOfRecurringJob
  name: GetJobsOfRecurringJob
  nameWithType: MockCronApiService.GetJobsOfRecurringJob
  fullName: CronConfigure.Models.Services.MockCronApiService.GetJobsOfRecurringJob
- uid: CronConfigure.Models.Services.ICronApiService.GetJobsOfRecurringJob(System.String)
  commentId: M:CronConfigure.Models.Services.ICronApiService.GetJobsOfRecurringJob(System.String)
  parent: CronConfigure.Models.Services.ICronApiService
  isExternal: true
  name: GetJobsOfRecurringJob(String)
  nameWithType: ICronApiService.GetJobsOfRecurringJob(String)
  fullName: CronConfigure.Models.Services.ICronApiService.GetJobsOfRecurringJob(System.String)
  spec.csharp:
  - uid: CronConfigure.Models.Services.ICronApiService.GetJobsOfRecurringJob(System.String)
    name: GetJobsOfRecurringJob
    nameWithType: ICronApiService.GetJobsOfRecurringJob
    fullName: CronConfigure.Models.Services.ICronApiService.GetJobsOfRecurringJob
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: CronConfigure.Models.Services.ICronApiService.GetJobsOfRecurringJob(System.String)
    name: GetJobsOfRecurringJob
    nameWithType: ICronApiService.GetJobsOfRecurringJob
    fullName: CronConfigure.Models.Services.ICronApiService.GetJobsOfRecurringJob
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: CronConfigure.Models.Services.MockCronApiService.GetRecurringJobs*
  commentId: Overload:CronConfigure.Models.Services.MockCronApiService.GetRecurringJobs
  name: GetRecurringJobs
  nameWithType: MockCronApiService.GetRecurringJobs
  fullName: CronConfigure.Models.Services.MockCronApiService.GetRecurringJobs
- uid: CronConfigure.Models.Services.ICronApiService.GetRecurringJobs
  commentId: M:CronConfigure.Models.Services.ICronApiService.GetRecurringJobs
  parent: CronConfigure.Models.Services.ICronApiService
  name: GetRecurringJobs()
  nameWithType: ICronApiService.GetRecurringJobs()
  fullName: CronConfigure.Models.Services.ICronApiService.GetRecurringJobs()
  spec.csharp:
  - uid: CronConfigure.Models.Services.ICronApiService.GetRecurringJobs
    name: GetRecurringJobs
    nameWithType: ICronApiService.GetRecurringJobs
    fullName: CronConfigure.Models.Services.ICronApiService.GetRecurringJobs
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: CronConfigure.Models.Services.ICronApiService.GetRecurringJobs
    name: GetRecurringJobs
    nameWithType: ICronApiService.GetRecurringJobs
    fullName: CronConfigure.Models.Services.ICronApiService.GetRecurringJobs
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List{CronConfigure.ViewModels.RecurringJobViewModel}
  commentId: T:System.Collections.Generic.List{CronConfigure.ViewModels.RecurringJobViewModel}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<RecurringJobViewModel>
  nameWithType: List<RecurringJobViewModel>
  fullName: System.Collections.Generic.List<CronConfigure.ViewModels.RecurringJobViewModel>
  nameWithType.vb: List(Of RecurringJobViewModel)
  fullName.vb: System.Collections.Generic.List(Of CronConfigure.ViewModels.RecurringJobViewModel)
  name.vb: List(Of RecurringJobViewModel)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: CronConfigure.ViewModels.RecurringJobViewModel
    name: RecurringJobViewModel
    nameWithType: RecurringJobViewModel
    fullName: CronConfigure.ViewModels.RecurringJobViewModel
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: CronConfigure.ViewModels.RecurringJobViewModel
    name: RecurringJobViewModel
    nameWithType: RecurringJobViewModel
    fullName: CronConfigure.ViewModels.RecurringJobViewModel
  - name: )
    nameWithType: )
    fullName: )
- uid: CronConfigure.Models.Services.ICronApiService.GetRecurringJobs(System.String)
  commentId: M:CronConfigure.Models.Services.ICronApiService.GetRecurringJobs(System.String)
  parent: CronConfigure.Models.Services.ICronApiService
  isExternal: true
  name: GetRecurringJobs(String)
  nameWithType: ICronApiService.GetRecurringJobs(String)
  fullName: CronConfigure.Models.Services.ICronApiService.GetRecurringJobs(System.String)
  spec.csharp:
  - uid: CronConfigure.Models.Services.ICronApiService.GetRecurringJobs(System.String)
    name: GetRecurringJobs
    nameWithType: ICronApiService.GetRecurringJobs
    fullName: CronConfigure.Models.Services.ICronApiService.GetRecurringJobs
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: CronConfigure.Models.Services.ICronApiService.GetRecurringJobs(System.String)
    name: GetRecurringJobs
    nameWithType: ICronApiService.GetRecurringJobs
    fullName: CronConfigure.Models.Services.ICronApiService.GetRecurringJobs
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: CronConfigure.ViewModels.RecurringJobViewModel
  commentId: T:CronConfigure.ViewModels.RecurringJobViewModel
  parent: CronConfigure.ViewModels
  name: RecurringJobViewModel
  nameWithType: RecurringJobViewModel
  fullName: CronConfigure.ViewModels.RecurringJobViewModel
- uid: CronConfigure.ViewModels
  commentId: N:CronConfigure.ViewModels
  name: CronConfigure.ViewModels
  nameWithType: CronConfigure.ViewModels
  fullName: CronConfigure.ViewModels
- uid: CronConfigure.Models.Services.MockCronApiService.GetScheduledJobs*
  commentId: Overload:CronConfigure.Models.Services.MockCronApiService.GetScheduledJobs
  name: GetScheduledJobs
  nameWithType: MockCronApiService.GetScheduledJobs
  fullName: CronConfigure.Models.Services.MockCronApiService.GetScheduledJobs
- uid: CronConfigure.Models.Services.ICronApiService.GetScheduledJobs(System.Int32,System.Int32)
  commentId: M:CronConfigure.Models.Services.ICronApiService.GetScheduledJobs(System.Int32,System.Int32)
  parent: CronConfigure.Models.Services.ICronApiService
  isExternal: true
  name: GetScheduledJobs(Int32, Int32)
  nameWithType: ICronApiService.GetScheduledJobs(Int32, Int32)
  fullName: CronConfigure.Models.Services.ICronApiService.GetScheduledJobs(System.Int32, System.Int32)
  spec.csharp:
  - uid: CronConfigure.Models.Services.ICronApiService.GetScheduledJobs(System.Int32,System.Int32)
    name: GetScheduledJobs
    nameWithType: ICronApiService.GetScheduledJobs
    fullName: CronConfigure.Models.Services.ICronApiService.GetScheduledJobs
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: CronConfigure.Models.Services.ICronApiService.GetScheduledJobs(System.Int32,System.Int32)
    name: GetScheduledJobs
    nameWithType: ICronApiService.GetScheduledJobs
    fullName: CronConfigure.Models.Services.ICronApiService.GetScheduledJobs
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List{CronConfigure.ViewModels.ScheduledJobViewModel}
  commentId: T:System.Collections.Generic.List{CronConfigure.ViewModels.ScheduledJobViewModel}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<ScheduledJobViewModel>
  nameWithType: List<ScheduledJobViewModel>
  fullName: System.Collections.Generic.List<CronConfigure.ViewModels.ScheduledJobViewModel>
  nameWithType.vb: List(Of ScheduledJobViewModel)
  fullName.vb: System.Collections.Generic.List(Of CronConfigure.ViewModels.ScheduledJobViewModel)
  name.vb: List(Of ScheduledJobViewModel)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: CronConfigure.ViewModels.ScheduledJobViewModel
    name: ScheduledJobViewModel
    nameWithType: ScheduledJobViewModel
    fullName: CronConfigure.ViewModels.ScheduledJobViewModel
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: CronConfigure.ViewModels.ScheduledJobViewModel
    name: ScheduledJobViewModel
    nameWithType: ScheduledJobViewModel
    fullName: CronConfigure.ViewModels.ScheduledJobViewModel
  - name: )
    nameWithType: )
    fullName: )
