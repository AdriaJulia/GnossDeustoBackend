### YamlMime:ManagedReference
items:
- uid: CronConfigure.Models.Hangfire.Hash
  commentId: T:CronConfigure.Models.Hangfire.Hash
  id: Hash
  parent: CronConfigure.Models.Hangfire
  children:
  - CronConfigure.Models.Hangfire.Hash.ExpireAt
  - CronConfigure.Models.Hangfire.Hash.Field
  - CronConfigure.Models.Hangfire.Hash.Key
  - CronConfigure.Models.Hangfire.Hash.Value
  langs:
  - csharp
  - vb
  name: Hash
  nameWithType: Hash
  fullName: CronConfigure.Models.Hangfire.Hash
  type: Class
  source:
    remote:
      path: CronConfigure/CronConfigure/Models/Hangfire/Hash.cs
      branch: master
      repo: https://github.com/HerculesCRUE/GnossDeustoBackend.git
    id: Hash
    path: Models/Hangfire/Hash.cs
    startLine: 10
  assemblies:
  - CronConfigure
  namespace: CronConfigure.Models.Hangfire
  syntax:
    content: >-
      [Table("hash", Schema = "hangfire")]

      public class Hash
    content.vb: >-
      <Table("hash", Schema:="hangfire")>

      Public Class Hash
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  attributes:
  - type: System.ComponentModel.DataAnnotations.Schema.TableAttribute
    ctor: System.ComponentModel.DataAnnotations.Schema.TableAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: hash
    namedArguments:
    - name: Schema
      type: System.String
      value: hangfire
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: CronConfigure.Models.Hangfire.Hash.Key
  commentId: P:CronConfigure.Models.Hangfire.Hash.Key
  id: Key
  parent: CronConfigure.Models.Hangfire.Hash
  langs:
  - csharp
  - vb
  name: Key
  nameWithType: Hash.Key
  fullName: CronConfigure.Models.Hangfire.Hash.Key
  type: Property
  source:
    remote:
      path: CronConfigure/CronConfigure/Models/Hangfire/Hash.cs
      branch: master
      repo: https://github.com/HerculesCRUE/GnossDeustoBackend.git
    id: Key
    path: Models/Hangfire/Hash.cs
    startLine: 13
  assemblies:
  - CronConfigure
  namespace: CronConfigure.Models.Hangfire
  syntax:
    content: >-
      [Column(Order = 0)]

      [StringLength(100)]

      public string Key { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <Column(Order:=0)>

      <StringLength(100)>

      Public Property Key As String
  overload: CronConfigure.Models.Hangfire.Hash.Key*
  attributes:
  - type: System.ComponentModel.DataAnnotations.Schema.ColumnAttribute
    ctor: System.ComponentModel.DataAnnotations.Schema.ColumnAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Order
      type: System.Int32
      value: 0
  - type: System.ComponentModel.DataAnnotations.StringLengthAttribute
    ctor: System.ComponentModel.DataAnnotations.StringLengthAttribute.#ctor(System.Int32)
    arguments:
    - type: System.Int32
      value: 100
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: CronConfigure.Models.Hangfire.Hash.Field
  commentId: P:CronConfigure.Models.Hangfire.Hash.Field
  id: Field
  parent: CronConfigure.Models.Hangfire.Hash
  langs:
  - csharp
  - vb
  name: Field
  nameWithType: Hash.Field
  fullName: CronConfigure.Models.Hangfire.Hash.Field
  type: Property
  source:
    remote:
      path: CronConfigure/CronConfigure/Models/Hangfire/Hash.cs
      branch: master
      repo: https://github.com/HerculesCRUE/GnossDeustoBackend.git
    id: Field
    path: Models/Hangfire/Hash.cs
    startLine: 17
  assemblies:
  - CronConfigure
  namespace: CronConfigure.Models.Hangfire
  syntax:
    content: >-
      [Column(Order = 1)]

      [StringLength(100)]

      public string Field { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <Column(Order:=1)>

      <StringLength(100)>

      Public Property Field As String
  overload: CronConfigure.Models.Hangfire.Hash.Field*
  attributes:
  - type: System.ComponentModel.DataAnnotations.Schema.ColumnAttribute
    ctor: System.ComponentModel.DataAnnotations.Schema.ColumnAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Order
      type: System.Int32
      value: 1
  - type: System.ComponentModel.DataAnnotations.StringLengthAttribute
    ctor: System.ComponentModel.DataAnnotations.StringLengthAttribute.#ctor(System.Int32)
    arguments:
    - type: System.Int32
      value: 100
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: CronConfigure.Models.Hangfire.Hash.Value
  commentId: P:CronConfigure.Models.Hangfire.Hash.Value
  id: Value
  parent: CronConfigure.Models.Hangfire.Hash
  langs:
  - csharp
  - vb
  name: Value
  nameWithType: Hash.Value
  fullName: CronConfigure.Models.Hangfire.Hash.Value
  type: Property
  source:
    remote:
      path: CronConfigure/CronConfigure/Models/Hangfire/Hash.cs
      branch: master
      repo: https://github.com/HerculesCRUE/GnossDeustoBackend.git
    id: Value
    path: Models/Hangfire/Hash.cs
    startLine: 21
  assemblies:
  - CronConfigure
  namespace: CronConfigure.Models.Hangfire
  syntax:
    content: public string Value { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Value As String
  overload: CronConfigure.Models.Hangfire.Hash.Value*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: CronConfigure.Models.Hangfire.Hash.ExpireAt
  commentId: P:CronConfigure.Models.Hangfire.Hash.ExpireAt
  id: ExpireAt
  parent: CronConfigure.Models.Hangfire.Hash
  langs:
  - csharp
  - vb
  name: ExpireAt
  nameWithType: Hash.ExpireAt
  fullName: CronConfigure.Models.Hangfire.Hash.ExpireAt
  type: Property
  source:
    remote:
      path: CronConfigure/CronConfigure/Models/Hangfire/Hash.cs
      branch: master
      repo: https://github.com/HerculesCRUE/GnossDeustoBackend.git
    id: ExpireAt
    path: Models/Hangfire/Hash.cs
    startLine: 24
  assemblies:
  - CronConfigure
  namespace: CronConfigure.Models.Hangfire
  syntax:
    content: public DateTime? ExpireAt { get; set; }
    parameters: []
    return:
      type: System.Nullable{System.DateTime}
    content.vb: Public Property ExpireAt As Date?
  overload: CronConfigure.Models.Hangfire.Hash.ExpireAt*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: CronConfigure.Models.Hangfire
  commentId: N:CronConfigure.Models.Hangfire
  name: CronConfigure.Models.Hangfire
  nameWithType: CronConfigure.Models.Hangfire
  fullName: CronConfigure.Models.Hangfire
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: CronConfigure.Models.Hangfire.Hash.Key*
  commentId: Overload:CronConfigure.Models.Hangfire.Hash.Key
  name: Key
  nameWithType: Hash.Key
  fullName: CronConfigure.Models.Hangfire.Hash.Key
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: CronConfigure.Models.Hangfire.Hash.Field*
  commentId: Overload:CronConfigure.Models.Hangfire.Hash.Field
  name: Field
  nameWithType: Hash.Field
  fullName: CronConfigure.Models.Hangfire.Hash.Field
- uid: CronConfigure.Models.Hangfire.Hash.Value*
  commentId: Overload:CronConfigure.Models.Hangfire.Hash.Value
  name: Value
  nameWithType: Hash.Value
  fullName: CronConfigure.Models.Hangfire.Hash.Value
- uid: CronConfigure.Models.Hangfire.Hash.ExpireAt*
  commentId: Overload:CronConfigure.Models.Hangfire.Hash.ExpireAt
  name: ExpireAt
  nameWithType: Hash.ExpireAt
  fullName: CronConfigure.Models.Hangfire.Hash.ExpireAt
- uid: System.Nullable{System.DateTime}
  commentId: T:System.Nullable{System.DateTime}
  parent: System
  definition: System.Nullable`1
  name: Nullable<DateTime>
  nameWithType: Nullable<DateTime>
  fullName: System.Nullable<System.DateTime>
  nameWithType.vb: Nullable(Of DateTime)
  fullName.vb: System.Nullable(Of System.DateTime)
  name.vb: Nullable(Of DateTime)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: System.DateTime
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: System.DateTime
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullName.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
