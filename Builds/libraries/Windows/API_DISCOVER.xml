<?xml version="1.0"?>
<doc>
    <assembly>
        <name>API_DISCOVER</name>
    </assembly>
    <members>
        <member name="T:API_DISCOVER.Extra.Exceptions.BadRequestException">
            <summary>
            Excepción del tipo BadRequest
            </summary>
        </member>
        <member name="T:API_DISCOVER.Extra.Exceptions.ValidationException">
            <summary>
            Excepción de validación
            </summary>
        </member>
        <member name="T:API_DISCOVER.Models.Entities.Disambiguation">
            <summary>
            Configuración de desambiguación utilizada para apoyar en la realización de la desambiguación
            </summary>
        </member>
        <member name="M:API_DISCOVER.Models.Entities.Disambiguation.#ctor(System.String,System.Collections.Generic.List{System.String},System.Collections.Generic.List{API_DISCOVER.Models.Entities.Disambiguation.Property})">
            <summary>
            Constructor
            </summary>
            <param name="pRdfType">rdf:type al que afecta</param>
            <param name="pIdentifiers">Url de las propiedades que son identificadores de la entidad</param>
            <param name="pProperties">Configuración de propiedades utilizadas para apoyar en la realización de la desambiguación</param>
        </member>
        <member name="T:API_DISCOVER.Models.Entities.Disambiguation.Property">
            <summary>
            Propiedades utilizadas para apoyar en la realización de la desambiguación
            </summary>
        </member>
        <member name="M:API_DISCOVER.Models.Entities.Disambiguation.Property.#ctor(System.String,System.Boolean,System.Boolean,API_DISCOVER.Models.Entities.Disambiguation.Property.Type,System.Nullable{System.Int32},System.Nullable{System.Single},System.Nullable{System.Single})">
            <summary>
            Constructor
            </summary>
            <param name="pProperty">Url de la propiedad utilizada</param>
            <param name="pMandatory">Indica si es obligatorio que se cumpla esta restricción para considerar la desambiguación</param>
            <param name="pInverse">Indica si la propiedad es inverse, es decir, la entidad que se intenta desambiguar es el objeto de propiedad</param>
            <param name="pType">Tipo de desambiguación a aplicar</param>
            <param name="pMaxNumWordsTitle">Número de palabras a partir de la cual la similitud de tipo 'title' obtiene la máxima puntuación</param>
            <param name="pScorePositive">Puntuación positiva de la propiedad en la desambiguación (entre 0 y 1)</param>
            <param name="pScoreNegative">Puntuación negativa de la propiedad en la desambiguación (entre 0 y 1)</param>
        </member>
        <member name="P:API_DISCOVER.Models.Entities.Disambiguation.Property.property">
            <summary>
            Url de la propiedad utilizada
            </summary>
        </member>
        <member name="P:API_DISCOVER.Models.Entities.Disambiguation.Property.mandatory">
            <summary>
            Indica si es obligatorio que se cumpla esta restricción para considerar la desambiguación
            </summary>
        </member>
        <member name="P:API_DISCOVER.Models.Entities.Disambiguation.Property.inverse">
            <summary>
            Indica si la propiedad es inverse, es decir, la entidad que se intenta desambiguar es el objeto de propiedad
            </summary>
        </member>
        <member name="P:API_DISCOVER.Models.Entities.Disambiguation.Property.type">
            <summary>
            Tipo de desambiguación a aplicar
            </summary>
        </member>
        <member name="P:API_DISCOVER.Models.Entities.Disambiguation.Property.maxNumWordsTitle">
            <summary>
            Número de palabras a partir de la cual la similitud de tipo 'title' obtiene la máxima puntuación
            </summary>
        </member>
        <member name="P:API_DISCOVER.Models.Entities.Disambiguation.Property.scorePositive">
            <summary>
            Puntuación positiva de la propiedad en la desambiguación (entre 0 y 1)
            </summary>
        </member>
        <member name="P:API_DISCOVER.Models.Entities.Disambiguation.Property.scoreNegative">
            <summary>
            Puntuación negativa de la propiedad en la desambiguación (entre 0 y 1)
            </summary>
        </member>
        <member name="P:API_DISCOVER.Models.Entities.Disambiguation.rdfType">
            <summary>
            rdf:type al que afecta
            </summary>
        </member>
        <member name="P:API_DISCOVER.Models.Entities.Disambiguation.identifiers">
            <summary>
            Url de las propiedades que son identificadores de la entidad
            </summary>
        </member>
        <member name="P:API_DISCOVER.Models.Entities.Disambiguation.properties">
            <summary>
            Configuración de propiedades utilizadas para apoyar en la realización de la desambiguación
            </summary>
        </member>
        <member name="T:API_DISCOVER.Models.Entities.DisambiguationData">
            <summary>
            Datos para apoyar en la realización de la desambiguación
            </summary>
        </member>
        <member name="M:API_DISCOVER.Models.Entities.DisambiguationData.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="T:API_DISCOVER.Models.Entities.DisambiguationData.DataProperty">
            <summary>
            Datos de una propiedad para apoyar en la realización de la desambiguación
            </summary>
        </member>
        <member name="M:API_DISCOVER.Models.Entities.DisambiguationData.DataProperty.#ctor(API_DISCOVER.Models.Entities.Disambiguation.Property,System.Collections.Generic.HashSet{System.String})">
            <summary>
            Constructor
            </summary>
            <param name="pProperty">Propiedad para apoyar en la realización de la desambiguación</param>
            <param name="pValues">Valores de la propiedad para apoyar en la realización de la desambiguación</param>
        </member>
        <member name="P:API_DISCOVER.Models.Entities.DisambiguationData.DataProperty.property">
            <summary>
            Propiedad para apoyar en la realización de la desambiguación
            </summary>
        </member>
        <member name="P:API_DISCOVER.Models.Entities.DisambiguationData.DataProperty.values">
            <summary>
            Valores de la propiedad para apoyar en la realización de la desambiguación
            </summary>
        </member>
        <member name="P:API_DISCOVER.Models.Entities.DisambiguationData.disambiguation">
            <summary>
            Configuración de desambiguación utilizada para apoyar en la realización de la desambiguación
            </summary>
        </member>
        <member name="P:API_DISCOVER.Models.Entities.DisambiguationData.identifiers">
            <summary>
            Identificadores para apoyar en la realización de la desambiguación, la clave es la url de la propiedad y los valores son listados con los identificadores
            </summary>
        </member>
        <member name="P:API_DISCOVER.Models.Entities.DisambiguationData.properties">
            <summary>
            Propiedades utilizadas para la realización de la desambiguación
            </summary>
        </member>
        <member name="T:API_DISCOVER.Models.Entities.DiscoverCache">
            <summary>
            Objeto para cachear las peticiones a diversos APIs de Discover
            </summary>
        </member>
        <member name="M:API_DISCOVER.Models.Entities.DiscoverCache.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="P:API_DISCOVER.Models.Entities.DiscoverCache.Sparql">
            <summary>
            Caché para las consultas SPARQL
            </summary>
        </member>
        <member name="P:API_DISCOVER.Models.Entities.DiscoverCache.ORCIDExpandedSearch">
            <summary>
            Caché para peticiones a ORCID
            </summary>
        </member>
        <member name="P:API_DISCOVER.Models.Entities.DiscoverCache.ORCIDPerson">
            <summary>
            Caché para peticiones a ORCID
            </summary>
        </member>
        <member name="P:API_DISCOVER.Models.Entities.DiscoverCache.ORCIDWorks">
            <summary>
            Caché para peticiones a ORCID
            </summary>
        </member>
        <member name="P:API_DISCOVER.Models.Entities.DiscoverCache.SCOPUSWorks">
            <summary>
            Caché para peticiones a SCOPUS
            </summary>
        </member>
        <member name="P:API_DISCOVER.Models.Entities.DiscoverCache.SCOPUSPerson">
            <summary>
            Caché para peticiones a SCOPUS
            </summary>
        </member>
        <member name="P:API_DISCOVER.Models.Entities.DiscoverCache.DBLPAuthors">
            <summary>
            Caché para peticiones a DBLP
            </summary>
        </member>
        <member name="P:API_DISCOVER.Models.Entities.DiscoverCache.DBLPPerson">
            <summary>
            Caché para peticiones a DBLP
            </summary>
        </member>
        <member name="P:API_DISCOVER.Models.Entities.DiscoverCache.CROSSREF_Works">
            <summary>
            Caché para peticiones a CROSSREF
            </summary>
        </member>
        <member name="P:API_DISCOVER.Models.Entities.DiscoverCache.PUBMED_WorkSearchByTitle">
            <summary>
            Caché para peticiones a PUBMED
            </summary>
        </member>
        <member name="P:API_DISCOVER.Models.Entities.DiscoverCache.PUBMED_WorkByID">
            <summary>
            Caché para peticiones a PUBMED
            </summary>
        </member>
        <member name="P:API_DISCOVER.Models.Entities.DiscoverCache.WOSWorks">
            <summary>
            Caché para peticiones a WOS
            </summary>
        </member>
        <member name="P:API_DISCOVER.Models.Entities.DiscoverCache.RECOLECTAWorks">
            <summary>
            Caché para peticiones a RECOLECTA
            </summary>
        </member>
        <member name="P:API_DISCOVER.Models.Entities.DiscoverCache.DOAJWorks">
            <summary>
            Caché para peticiones a DOAJ
            </summary>
        </member>
        <member name="T:API_DISCOVER.Models.Entities.DiscoverItem">
            <summary>
            Representa un item de descubrimiento
            </summary>
        </member>
        <member name="T:API_DISCOVER.Models.Entities.DiscoverItem.DiscoverDissambiguation">
            <summary>
            Representa un problema de desambiguación en un DiscoverItem
            </summary>
        </member>
        <member name="T:API_DISCOVER.Models.Entities.DiscoverItem.DiscoverDissambiguation.DiscoverDissambiguationCandiate">
            <summary>
            Representa un candidato para un problema de desambiguación en un DiscoverItem
            </summary>
        </member>
        <member name="P:API_DISCOVER.Models.Entities.DiscoverItem.DiscoverDissambiguation.DiscoverDissambiguationCandiate.ID">
            <summary>
            Identificador del problema de desambiguación
            </summary>
        </member>
        <member name="P:API_DISCOVER.Models.Entities.DiscoverItem.DiscoverDissambiguation.DiscoverDissambiguationCandiate.DiscoverDissambiguationID">
            <summary>
            Identificador del DiscoverDissambiguation
            </summary>
        </member>
        <member name="P:API_DISCOVER.Models.Entities.DiscoverItem.DiscoverDissambiguation.DiscoverDissambiguationCandiate.IDCandidate">
            <summary>
            Candidato para la desambiguación
            </summary>
        </member>
        <member name="P:API_DISCOVER.Models.Entities.DiscoverItem.DiscoverDissambiguation.DiscoverDissambiguationCandiate.Score">
            <summary>
            Puntuación para la desambiguación
            </summary>
        </member>
        <member name="P:API_DISCOVER.Models.Entities.DiscoverItem.DiscoverDissambiguation.ID">
            <summary>
            Identificador del problema de desambiguación
            </summary>
        </member>
        <member name="P:API_DISCOVER.Models.Entities.DiscoverItem.DiscoverDissambiguation.DiscoverItemID">
            <summary>
            Identificador del discoverItem
            </summary>
        </member>
        <member name="P:API_DISCOVER.Models.Entities.DiscoverItem.DiscoverDissambiguation.IDOrigin">
            <summary>
            Identificador de la entidad en la que hay dudas
            </summary>
        </member>
        <member name="P:API_DISCOVER.Models.Entities.DiscoverItem.DiscoverDissambiguation.DissambiguationCandiates">
            <summary>
            Candiatos de desambiguación
            </summary>
        </member>
        <member name="T:API_DISCOVER.Models.Entities.DiscoverItem.DiscardDissambiguation">
            <summary>
            Representa descartes para un problema de desambiguación en un DiscoverItem
            </summary>
        </member>
        <member name="P:API_DISCOVER.Models.Entities.DiscoverItem.DiscardDissambiguation.ID">
            <summary>
            Identificador del problema de desambiguación
            </summary>
        </member>
        <member name="P:API_DISCOVER.Models.Entities.DiscoverItem.DiscardDissambiguation.DiscoverItemID">
            <summary>
            Identificador del discoverItem
            </summary>
        </member>
        <member name="P:API_DISCOVER.Models.Entities.DiscoverItem.DiscardDissambiguation.IDOrigin">
            <summary>
            Identificador de la entidad para que le tenemos los descartes
            </summary>
        </member>
        <member name="P:API_DISCOVER.Models.Entities.DiscoverItem.DiscardDissambiguation.DiscardCandidates">
            <summary>
            Candidatos descartados cargadas
            </summary>
        </member>
        <member name="P:API_DISCOVER.Models.Entities.DiscoverItem.ID">
            <summary>
            Identificador del item
            </summary>
        </member>
        <member name="P:API_DISCOVER.Models.Entities.DiscoverItem.Status">
            <summary>
            Indica el estado del item:
                Pending
                Processed
                ProcessedDissambiguationProblem
                Error
            </summary>
        </member>
        <member name="P:API_DISCOVER.Models.Entities.DiscoverItem.Rdf">
            <summary>
            RDF original antes del descbrimiento
            </summary>
        </member>
        <member name="P:API_DISCOVER.Models.Entities.DiscoverItem.DiscoverRdf">
            <summary>
            RDF final tras el descubrimiento
            </summary>
        </member>
        <member name="P:API_DISCOVER.Models.Entities.DiscoverItem.Error">
            <summary>
            Error
            </summary>
        </member>
        <member name="P:API_DISCOVER.Models.Entities.DiscoverItem.JobID">
            <summary>
            Identificador de la tarea de la que procede (en caso de que proceda de una tarea)
            </summary>
        </member>
        <member name="P:API_DISCOVER.Models.Entities.DiscoverItem.Publish">
            <summary>
            Indica si hay que publicar el resultado o no 
            </summary>
        </member>
        <member name="P:API_DISCOVER.Models.Entities.DiscoverItem.DissambiguationProcessed">
            <summary>
            Indica si están ya resueltos los problemas de desambiguación
            </summary>
        </member>
        <member name="P:API_DISCOVER.Models.Entities.DiscoverItem.DiscoverReport">
            <summary>
            Reporte de las tareas del descubrimiento
            </summary>
        </member>
        <member name="P:API_DISCOVER.Models.Entities.DiscoverItem.DissambiguationProblems">
            <summary>
            Problemas de desambiguación
            </summary>
        </member>
        <member name="P:API_DISCOVER.Models.Entities.DiscoverItem.DiscardDissambiguations">
            <summary>
            Descartes de desambiguación
            </summary>
        </member>
        <member name="P:API_DISCOVER.Models.Entities.DiscoverItem.LoadedEntities">
            <summary>
            Entidades cargadas
            </summary>
        </member>
        <member name="M:API_DISCOVER.Models.Entities.DiscoverItem.UpdateDissambiguationProblems(System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.Dictionary{System.String,System.Single}},System.Collections.Generic.List{System.String},System.String)">
            <summary>
            Modificamos el objeto DiscoverItem para guardarlo cuando ha habido problemas de desambiguación
            </summary>
            <param name="pProblems">Problemas de desambiguación</param>
            <param name="pLoadedEntities">Entidades ya cargadas en el grafo</param>
            <param name="pDiscoverRDF">RDF de descubrimiento</param>
        </member>
        <member name="M:API_DISCOVER.Models.Entities.DiscoverItem.UpdateDissambiguationDiscards(System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.String)">
            <summary>
            Modificamos el objeto DiscoverItem para guardarlo cuando hse han seleccionado descartes para la desmbiguación y se va a volver a procesar
            </summary>
            <param name="pDiscards">Problemas de desambiguación</param>
            <param name="pDiscoverRDF">RDF de descubrimiento</param>
        </member>
        <member name="M:API_DISCOVER.Models.Entities.DiscoverItem.UpdateReport(System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.Dictionary{System.String,System.Single}},System.String,System.String)">
            <summary>
            Modificamos el objeto DiscoverItem para guardarlo cuando se procesa para generar un report
            </summary>
            <param name="pProblems">Problemas de desambiguación</param>
            <param name="pDiscoverRDF">RDF de descubrimiento</param>     
            <param name="pDiscoverReport">Reporte</param>
        </member>
        <member name="M:API_DISCOVER.Models.Entities.DiscoverItem.UpdateProcessed">
            <summary>
            Modificamos el objeto DiscoverItem para guardarlo cuando se procesa correctamente
            </summary>
        </member>
        <member name="M:API_DISCOVER.Models.Entities.DiscoverItem.UpdateError(System.String)">
            <summary>
            Modificamos el objeto DiscoverItem para guardarlo cuando se produce un error
            </summary>
            <param name="pError">Error</param>
        </member>
        <member name="T:API_DISCOVER.Models.Entities.DiscoverResult">
            <summary>
            Resultado despues de aplicar a un RDF el descubrimiento
            </summary>
        </member>
        <member name="M:API_DISCOVER.Models.Entities.DiscoverResult.#ctor(VDS.RDF.RohGraph,VDS.RDF.RohGraph,VDS.RDF.RohGraph,System.Collections.Generic.HashSet{System.String},System.Collections.Generic.Dictionary{System.String,System.String},System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.KeyValuePair{System.String,System.Single}},System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.KeyValuePair{System.String,System.Single}},System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.Dictionary{System.String,System.Single}},System.DateTime,System.DateTime,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.KeyValuePair{System.String,System.Collections.Generic.HashSet{System.String}}}})">
            <summary>
            Constructor del resultado del descubirmiento
            </summary>
            <param name="pDataGraph">Grafo con los datos</param>
            <param name="pDataInferenceGraph">Grafo con los datos (con inferencia)</param>
            <param name="pOntologyGraph">Grafo con la ontología</param>
            <param name="pDiscoveredEntitiesWithSubject">Entidades descubiertas con los sujetos</param>
            <param name="pDiscoveredEntitiesWithId">Entidades descubiertas con los identificadores</param>
            <param name="pDiscoveredEntitiesWithDataBase">Entidades descubiertas con la BBDD</param>
            <param name="pDiscoveredEntitiesWithExternalIntegration">Entidades descubiertas con al integración externa</param>
            <param name="pDiscoveredEntitiesProbability">Probabilidades de descubriiento</param>
            <param name="pDateStart">Fecha inicio descubirmiento</param>
            <param name="pDateEnd">Fecha fin descubirmiento</param>
            <param name="pExternalIntegration">Datos obtendidos con las integraciones con fuentes externas junto con su provenecia</param>
        </member>
        <member name="P:API_DISCOVER.Models.Entities.DiscoverResult.dataGraph">
            <summary>
            Grafo con los datos
            </summary>
        </member>
        <member name="P:API_DISCOVER.Models.Entities.DiscoverResult.dataInferenceGraph">
            <summary>
            Grafo con los datos (con inferencia)
            </summary>
        </member>
        <member name="P:API_DISCOVER.Models.Entities.DiscoverResult.ontologyGraph">
            <summary>
            Grafo con la ontología
            </summary>
        </member>
        <member name="P:API_DISCOVER.Models.Entities.DiscoverResult.discoveredEntitiesWithSubject">
            <summary>
            Entidades descubiertas con los sujetos
            </summary>
        </member>
        <member name="P:API_DISCOVER.Models.Entities.DiscoverResult.discoveredEntitiesWithId">
            <summary>
            Entidades descubiertas con los identificadores
            </summary>
        </member>
        <member name="P:API_DISCOVER.Models.Entities.DiscoverResult.discoveredEntitiesWithDataBase">
            <summary>
            Entidades descubiertas con la BBDD
            </summary>
        </member>
        <member name="P:API_DISCOVER.Models.Entities.DiscoverResult.discoveredEntitiesWithExternalIntegration">
            <summary>
            Entidades descubiertas con la Integración externa
            </summary>
        </member>
        <member name="P:API_DISCOVER.Models.Entities.DiscoverResult.discoveredEntitiesProbability">
            <summary>
            Probabilidades de descubriiento
            </summary>
        </member>
        <member name="P:API_DISCOVER.Models.Entities.DiscoverResult.start">
            <summary>
            Inicio del descubrimiento
            </summary>
        </member>
        <member name="P:API_DISCOVER.Models.Entities.DiscoverResult.end">
            <summary>
            Fin del descubrimiento
            </summary>
        </member>
        <member name="P:API_DISCOVER.Models.Entities.DiscoverResult.secondsProcessed">
            <summary>
            Tiempo (en segundos) en procesar el descubrimiento
            </summary>
        </member>
        <member name="P:API_DISCOVER.Models.Entities.DiscoverResult.externalIntegration">
            <summary>
            Datos obtendidos con la integración con fuentes externas junto con su provenencia
            </summary>
        </member>
        <member name="M:API_DISCOVER.Models.Entities.DiscoverResult.GetDataGraphRDF">
            <summary>
            Obtiene el RDF del dataGraph
            </summary>
            <returns></returns>
        </member>
        <member name="T:API_DISCOVER.Models.Entities.ExternalAPIs.CROSSREF_API">
            <summary>
            Clase para interactuar con el API de CROSSREF
            </summary>
        </member>
        <member name="M:API_DISCOVER.Models.Entities.ExternalAPIs.CROSSREF_API.WorkSearchByContributor(System.String,System.String)">
            <summary>
            Busca documentos en función de sus autores en el API de CROSSREF
            </summary>
            <param name="q">Texto a buscar</param>
            <param name="CrossrefUserAgent">user agent para usar en las peticiones al API de CROSSREF</param>
            <returns>Objeto con los documentos y las personas</returns>
        </member>
        <member name="T:API_DISCOVER.Models.Entities.ExternalAPIs.DBLP_API">
            <summary>
            Clase para interactuar con el API de DBLP
            </summary>
        </member>
        <member name="M:API_DISCOVER.Models.Entities.ExternalAPIs.DBLP_API.AuthorSearch(System.String)">
            <summary>
            Busca personas en el API de DBLP
            </summary>
            <param name="q">Texto a buscar (con urlEncode)</param>
            <returns>Objeto con las personas encontradas</returns>
        </member>
        <member name="M:API_DISCOVER.Models.Entities.ExternalAPIs.DBLP_API.Person(System.String)">
            <summary>
            Obtiene los datos de una persona en el API de DBLP
            </summary>
            <param name="url">Url de DBLP de ORCID</param>
            <returns>Objeto con los datos de la persona</returns>
        </member>
        <member name="M:API_DISCOVER.Models.Entities.ExternalAPIs.DBLP_API.Limpiar(System.Xml.Linq.XElement)">
            <summary>
            Limpia el XML que obtenemos del API de DBLP (en ocasiones está mal formado)
            </summary>
            <param name="pElement">Elemento XML</param>
            <returns>Elemento XML limpio</returns>
        </member>
        <member name="T:API_DISCOVER.Models.Entities.ExternalAPIs.DBLPAuthors">
            <remarks/>
        </member>
        <member name="P:API_DISCOVER.Models.Entities.ExternalAPIs.DBLPAuthors.hits">
            <remarks/>
        </member>
        <member name="T:API_DISCOVER.Models.Entities.ExternalAPIs.resultHits">
            <remarks/>
        </member>
        <member name="P:API_DISCOVER.Models.Entities.ExternalAPIs.resultHits.hit">
            <remarks/>
        </member>
        <member name="T:API_DISCOVER.Models.Entities.ExternalAPIs.resultHitsHit">
            <remarks/>
        </member>
        <member name="P:API_DISCOVER.Models.Entities.ExternalAPIs.resultHitsHit.info">
            <remarks/>
        </member>
        <member name="T:API_DISCOVER.Models.Entities.ExternalAPIs.resultHitsHitInfo">
            <remarks/>
        </member>
        <member name="P:API_DISCOVER.Models.Entities.ExternalAPIs.resultHitsHitInfo.author">
            <remarks/>
        </member>
        <member name="P:API_DISCOVER.Models.Entities.ExternalAPIs.resultHitsHitInfo.url">
            <remarks/>
        </member>
        <member name="T:API_DISCOVER.Models.Entities.ExternalAPIs.DBLPPerson">
            <remarks/>
        </member>
        <member name="P:API_DISCOVER.Models.Entities.ExternalAPIs.DBLPPerson.person">
            <remarks/>
        </member>
        <member name="P:API_DISCOVER.Models.Entities.ExternalAPIs.DBLPPerson.r">
            <remarks/>
        </member>
        <member name="T:API_DISCOVER.Models.Entities.ExternalAPIs.dblppersonPerson">
            <remarks/>
        </member>
        <member name="P:API_DISCOVER.Models.Entities.ExternalAPIs.dblppersonPerson.url">
            <remarks/>
        </member>
        <member name="T:API_DISCOVER.Models.Entities.ExternalAPIs.dblppersonR">
            <remarks/>
        </member>
        <member name="P:API_DISCOVER.Models.Entities.ExternalAPIs.dblppersonR.article">
            <remarks/>
        </member>
        <member name="T:API_DISCOVER.Models.Entities.ExternalAPIs.dblppersonRDocument">
            <remarks/>
        </member>
        <member name="P:API_DISCOVER.Models.Entities.ExternalAPIs.dblppersonRDocument.title">
            <remarks/>
        </member>
        <member name="P:API_DISCOVER.Models.Entities.ExternalAPIs.dblppersonRDocument.ee">
            <remarks/>
        </member>
        <member name="P:API_DISCOVER.Models.Entities.ExternalAPIs.dblppersonRDocument.key">
            <remarks/>
        </member>
        <member name="T:API_DISCOVER.Models.Entities.ExternalAPIs.DOAJ_API">
            <summary>
            Clase para interactuar con el API de DOAJ
            </summary>
        </member>
        <member name="T:API_DISCOVER.Models.Entities.ExternalAPIs.ORCID_API">
            <summary>
            Clase para interactuar con el API de ORCID
            </summary>
        </member>
        <member name="M:API_DISCOVER.Models.Entities.ExternalAPIs.ORCID_API.ExpandedSearch(System.String)">
            <summary>
            Busca personas en el API de ORCID
            </summary>
            <param name="q">Texto a buscar (con urlEncode)</param>
            <returns>Objeto con las personas encontradas</returns>
        </member>
        <member name="M:API_DISCOVER.Models.Entities.ExternalAPIs.ORCID_API.Person(System.String)">
            <summary>
            Obtiene los datos de una persona en el API de ORCID
            </summary>
            <param name="id">Identificador de ORCID</param>
            <returns>Objeto con los datos de la persona</returns>
        </member>
        <member name="M:API_DISCOVER.Models.Entities.ExternalAPIs.ORCID_API.Works(System.String)">
            <summary>
            Obtiene los trabajos de una persona en el API de ORCID
            </summary>
            <param name="id">Identificador de ORCID</param>
            <returns>Objeto con los datos de las publicaciones</returns>
        </member>
        <member name="T:API_DISCOVER.Models.Entities.ExternalAPIs.PUBMED_API">
            <summary>
            Clase para interactuar con el API de PUBMED
            </summary>
        </member>
        <member name="M:API_DISCOVER.Models.Entities.ExternalAPIs.PUBMED_API.WorkSearchByTitle(System.String)">
            <summary>
            Busca documentos en función de su título API de PUBMED y obtiene sus identificadores
            </summary>
            <param name="q">Texto a buscar</param>
            <returns>Objeto con los identificadores de los documentos</returns>
        </member>
        <member name="M:API_DISCOVER.Models.Entities.ExternalAPIs.PUBMED_API.GetWorkByID(System.UInt32)">
            <summary>
            Obtiene un documento a través de su identificador
            </summary>
            <param name="id">Identificador</param>
            <returns>Documento</returns>
        </member>
        <member name="T:API_DISCOVER.Models.Entities.ExternalAPIs.eSearchResult">
            <remarks/>
        </member>
        <member name="P:API_DISCOVER.Models.Entities.ExternalAPIs.eSearchResult.IdList">
            <remarks/>
        </member>
        <member name="T:API_DISCOVER.Models.Entities.ExternalAPIs.PubmedArticleSet">
            <remarks/>
        </member>
        <member name="P:API_DISCOVER.Models.Entities.ExternalAPIs.PubmedArticleSet.PubmedArticle">
            <remarks/>
        </member>
        <member name="T:API_DISCOVER.Models.Entities.ExternalAPIs.PubmedArticleSetPubmedArticle">
            <remarks/>
        </member>
        <member name="P:API_DISCOVER.Models.Entities.ExternalAPIs.PubmedArticleSetPubmedArticle.MedlineCitation">
            <remarks/>
        </member>
        <member name="T:API_DISCOVER.Models.Entities.ExternalAPIs.PubmedArticleSetPubmedArticleMedlineCitation">
            <remarks/>
        </member>
        <member name="P:API_DISCOVER.Models.Entities.ExternalAPIs.PubmedArticleSetPubmedArticleMedlineCitation.Article">
            <remarks/>
        </member>
        <member name="T:API_DISCOVER.Models.Entities.ExternalAPIs.PubmedArticleSetPubmedArticleMedlineCitationArticle">
            <remarks/>
        </member>
        <member name="P:API_DISCOVER.Models.Entities.ExternalAPIs.PubmedArticleSetPubmedArticleMedlineCitationArticle.ArticleTitle">
            <remarks/>
        </member>
        <member name="P:API_DISCOVER.Models.Entities.ExternalAPIs.PubmedArticleSetPubmedArticleMedlineCitationArticle.ELocationID">
            <remarks/>
        </member>
        <member name="P:API_DISCOVER.Models.Entities.ExternalAPIs.PubmedArticleSetPubmedArticleMedlineCitationArticle.AuthorList">
            <remarks/>
        </member>
        <member name="T:API_DISCOVER.Models.Entities.ExternalAPIs.PubmedArticleSetPubmedArticleMedlineCitationArticleArticleTitle">
            <remarks/>
        </member>
        <member name="P:API_DISCOVER.Models.Entities.ExternalAPIs.PubmedArticleSetPubmedArticleMedlineCitationArticleArticleTitle.Text">
            <remarks/>
        </member>
        <member name="T:API_DISCOVER.Models.Entities.ExternalAPIs.PubmedArticleSetPubmedArticleMedlineCitationArticleELocationID">
            <remarks/>
        </member>
        <member name="P:API_DISCOVER.Models.Entities.ExternalAPIs.PubmedArticleSetPubmedArticleMedlineCitationArticleELocationID.EIdType">
            <remarks/>
        </member>
        <member name="P:API_DISCOVER.Models.Entities.ExternalAPIs.PubmedArticleSetPubmedArticleMedlineCitationArticleELocationID.Value">
            <remarks/>
        </member>
        <member name="T:API_DISCOVER.Models.Entities.ExternalAPIs.PubmedArticleSetPubmedArticleMedlineCitationArticleAuthorList">
            <remarks/>
        </member>
        <member name="P:API_DISCOVER.Models.Entities.ExternalAPIs.PubmedArticleSetPubmedArticleMedlineCitationArticleAuthorList.Author">
            <remarks/>
        </member>
        <member name="T:API_DISCOVER.Models.Entities.ExternalAPIs.PubmedArticleSetPubmedArticleMedlineCitationArticleAuthorListAuthor">
            <remarks/>
        </member>
        <member name="P:API_DISCOVER.Models.Entities.ExternalAPIs.PubmedArticleSetPubmedArticleMedlineCitationArticleAuthorListAuthor.LastName">
            <remarks/>
        </member>
        <member name="P:API_DISCOVER.Models.Entities.ExternalAPIs.PubmedArticleSetPubmedArticleMedlineCitationArticleAuthorListAuthor.ForeName">
            <remarks/>
        </member>
        <member name="P:API_DISCOVER.Models.Entities.ExternalAPIs.PubmedArticleSetPubmedArticleMedlineCitationArticleAuthorListAuthor.Identifier">
            <remarks/>
        </member>
        <member name="T:API_DISCOVER.Models.Entities.ExternalAPIs.PubmedArticleSetPubmedArticleMedlineCitationArticleAuthorListAuthorIdentifier">
            <remarks/>
        </member>
        <member name="P:API_DISCOVER.Models.Entities.ExternalAPIs.PubmedArticleSetPubmedArticleMedlineCitationArticleAuthorListAuthorIdentifier.Source">
            <remarks/>
        </member>
        <member name="P:API_DISCOVER.Models.Entities.ExternalAPIs.PubmedArticleSetPubmedArticleMedlineCitationArticleAuthorListAuthorIdentifier.Value">
            <remarks/>
        </member>
        <member name="T:API_DISCOVER.Models.Entities.ExternalAPIs.RECOLECTA_API">
            <summary>
            Clase para interactuar con el API de Recolecta
            </summary>
        </member>
        <member name="M:API_DISCOVER.Models.Entities.ExternalAPIs.RECOLECTA_API.Works(System.String)">
            <summary>
            Busca trabajos en el API de Recolecta
            </summary>
            <param name="q">Texto a buscar (con urlEncode)</param>
            <returns>Objeto con los trabajos</returns>
        </member>
        <member name="T:API_DISCOVER.Models.Entities.ExternalAPIs.SCOPUS_API">
            <summary>
            Clase para interactuar con el API de scopus
            </summary>
        </member>
        <member name="M:API_DISCOVER.Models.Entities.ExternalAPIs.SCOPUS_API.Person(System.UInt64,System.String,System.String)">
            <summary>
            Obtiene los datos de una persona en el API de SCOPUS
            </summary>
            <param name="id">Identificador de SCOPUS</param>
            <param name="ScopusApiKey">ApiKey de Scopus</param>
            <param name="ScopusUrl">Url donde se encuentra el API de scopus</param>
            <returns>Objeto con los datos de la persona</returns>
        </member>
        <member name="M:API_DISCOVER.Models.Entities.ExternalAPIs.SCOPUS_API.Works(System.String,System.String,System.String)">
            <summary>
            Busca trabajos en el API de SCOPUS
            </summary>
            <param name="q">Texto a buscar (con urlEncode)</param>
            <param name="ScopusApiKey">ApiKey de Scopus</param>
            /// <param name="ScopusUrl">Url donde se encuentra el API de scopus</param>
            <returns>Objeto con los trabajos</returns>
        </member>
        <member name="T:API_DISCOVER.Models.Entities.ExternalAPIs.SCOPUSWorks">
            <remarks/>
        </member>
        <member name="P:API_DISCOVER.Models.Entities.ExternalAPIs.SCOPUSWorks.entry">
            <remarks/>
        </member>
        <member name="T:API_DISCOVER.Models.Entities.ExternalAPIs.Work">
            <remarks/>
        </member>
        <member name="P:API_DISCOVER.Models.Entities.ExternalAPIs.Work.identifier">
            <remarks/>
        </member>
        <member name="P:API_DISCOVER.Models.Entities.ExternalAPIs.Work.title">
            <remarks/>
        </member>
        <member name="P:API_DISCOVER.Models.Entities.ExternalAPIs.Work.doi">
            <remarks/>
        </member>
        <member name="P:API_DISCOVER.Models.Entities.ExternalAPIs.Work.author">
            <remarks/>
        </member>
        <member name="T:API_DISCOVER.Models.Entities.ExternalAPIs.WorkAuthor">
            <remarks/>
        </member>
        <member name="P:API_DISCOVER.Models.Entities.ExternalAPIs.WorkAuthor.authid">
            <remarks/>
        </member>
        <member name="P:API_DISCOVER.Models.Entities.ExternalAPIs.WorkAuthor.surname">
            <remarks/>
        </member>
        <member name="P:API_DISCOVER.Models.Entities.ExternalAPIs.WorkAuthor.givenname">
            <remarks/>
        </member>
        <member name="T:API_DISCOVER.Models.Entities.ExternalAPIs.SCOPUSPerson">
            <remarks/>
        </member>
        <member name="P:API_DISCOVER.Models.Entities.ExternalAPIs.SCOPUSPerson.coredata">
            <remarks/>
        </member>
        <member name="T:API_DISCOVER.Models.Entities.ExternalAPIs.authorretrievalresponseCoredata">
            <remarks/>
        </member>
        <member name="P:API_DISCOVER.Models.Entities.ExternalAPIs.authorretrievalresponseCoredata.orcid">
            <remarks/>
        </member>
        <member name="T:API_DISCOVER.Models.Entities.ExternalAPIs.WOS_API">
            <summary>
            Clase para interactuar con el API de WOS
            </summary>
        </member>
        <member name="P:API_DISCOVER.Models.Entities.ExternalAPIs.WOS_API._cookie">
            <summary>
            Cookie para las peticiones
            </summary>
        </member>
        <member name="M:API_DISCOVER.Models.Entities.ExternalAPIs.WOS_API.ActualizarCookie(System.String)">
            <summary>
            Genera la cooie para las peticiones al API de WOS
            </summary>
            <param name="authorization"></param>
        </member>
        <member name="M:API_DISCOVER.Models.Entities.ExternalAPIs.WOS_API.Works(System.String,System.String)">
            <summary>
            Busca documentos en función de su título API de WOS 
            </summary>
            <param name="q">Texto a buscar</param>        
            <param name="authorization">Autorización</param>
            <returns>Objeto con los identificadores de los documentos</returns>
        </member>
        <member name="T:API_DISCOVER.Models.Entities.ExternalAPIs.WOSWorks">
            <remarks/>
        </member>
        <member name="P:API_DISCOVER.Models.Entities.ExternalAPIs.WOSWorks.Body">
            <remarks/>
        </member>
        <member name="T:API_DISCOVER.Models.Entities.ExternalAPIs.EnvelopeBody">
            <remarks/>
        </member>
        <member name="P:API_DISCOVER.Models.Entities.ExternalAPIs.EnvelopeBody.searchResponse">
            <remarks/>
        </member>
        <member name="T:API_DISCOVER.Models.Entities.ExternalAPIs.searchResponse">
            <remarks/>
        </member>
        <member name="P:API_DISCOVER.Models.Entities.ExternalAPIs.searchResponse.return">
            <remarks/>
        </member>
        <member name="T:API_DISCOVER.Models.Entities.ExternalAPIs.return">
            <remarks/>
        </member>
        <member name="P:API_DISCOVER.Models.Entities.ExternalAPIs.return.records">
            <remarks/>
        </member>
        <member name="T:API_DISCOVER.Models.Entities.ExternalAPIs.returnRecords">
            <remarks/>
        </member>
        <member name="P:API_DISCOVER.Models.Entities.ExternalAPIs.returnRecords.records">
            <remarks/>
        </member>
        <member name="T:API_DISCOVER.Models.Entities.ExternalAPIs.recordsREC">
            <remarks/>
        </member>
        <member name="P:API_DISCOVER.Models.Entities.ExternalAPIs.recordsREC.UID">
            <remarks/>
        </member>
        <member name="P:API_DISCOVER.Models.Entities.ExternalAPIs.recordsREC.static_data">
            <remarks/>
        </member>
        <member name="P:API_DISCOVER.Models.Entities.ExternalAPIs.recordsREC.dynamic_data">
            <remarks/>
        </member>
        <member name="T:API_DISCOVER.Models.Entities.ExternalAPIs.recordsRECStatic_data">
            <remarks/>
        </member>
        <member name="P:API_DISCOVER.Models.Entities.ExternalAPIs.recordsRECStatic_data.summary">
            <remarks/>
        </member>
        <member name="P:API_DISCOVER.Models.Entities.ExternalAPIs.recordsRECStatic_data.contributors">
            <remarks/>
        </member>
        <member name="T:API_DISCOVER.Models.Entities.ExternalAPIs.recordsRECStatic_dataSummary">
            <remarks/>
        </member>
        <member name="P:API_DISCOVER.Models.Entities.ExternalAPIs.recordsRECStatic_dataSummary.titles">
            <remarks/>
        </member>
        <member name="P:API_DISCOVER.Models.Entities.ExternalAPIs.recordsRECStatic_dataSummary.names">
            <remarks/>
        </member>
        <member name="T:API_DISCOVER.Models.Entities.ExternalAPIs.recordsRECStatic_dataSummaryTitles">
            <remarks/>
        </member>
        <member name="P:API_DISCOVER.Models.Entities.ExternalAPIs.recordsRECStatic_dataSummaryTitles.title">
            <remarks/>
        </member>
        <member name="T:API_DISCOVER.Models.Entities.ExternalAPIs.recordsRECStatic_dataSummaryTitlesTitle">
            <remarks/>
        </member>
        <member name="P:API_DISCOVER.Models.Entities.ExternalAPIs.recordsRECStatic_dataSummaryTitlesTitle.type">
            <remarks/>
        </member>
        <member name="P:API_DISCOVER.Models.Entities.ExternalAPIs.recordsRECStatic_dataSummaryTitlesTitle.Value">
            <remarks/>
        </member>
        <member name="T:API_DISCOVER.Models.Entities.ExternalAPIs.recordsRECStatic_dataSummaryNames">
            <remarks/>
        </member>
        <member name="P:API_DISCOVER.Models.Entities.ExternalAPIs.recordsRECStatic_dataSummaryNames.name">
            <remarks/>
        </member>
        <member name="T:API_DISCOVER.Models.Entities.ExternalAPIs.recordsRECStatic_dataSummaryNamesName">
            <remarks/>
        </member>
        <member name="P:API_DISCOVER.Models.Entities.ExternalAPIs.recordsRECStatic_dataSummaryNamesName.display_name">
            <remarks/>
        </member>
        <member name="T:API_DISCOVER.Models.Entities.ExternalAPIs.recordsRECStatic_dataContributors">
            <remarks/>
        </member>
        <member name="P:API_DISCOVER.Models.Entities.ExternalAPIs.recordsRECStatic_dataContributors.contributor">
            <remarks/>
        </member>
        <member name="T:API_DISCOVER.Models.Entities.ExternalAPIs.recordsRECStatic_dataContributorsContributor">
            <remarks/>
        </member>
        <member name="P:API_DISCOVER.Models.Entities.ExternalAPIs.recordsRECStatic_dataContributorsContributor.name">
            <remarks/>
        </member>
        <member name="T:API_DISCOVER.Models.Entities.ExternalAPIs.recordsRECStatic_dataContributorsContributorName">
            <remarks/>
        </member>
        <member name="P:API_DISCOVER.Models.Entities.ExternalAPIs.recordsRECStatic_dataContributorsContributorName.display_name">
            <remarks/>
        </member>
        <member name="P:API_DISCOVER.Models.Entities.ExternalAPIs.recordsRECStatic_dataContributorsContributorName.r_id">
            <remarks/>
        </member>
        <member name="P:API_DISCOVER.Models.Entities.ExternalAPIs.recordsRECStatic_dataContributorsContributorName.orcid_id">
            <remarks/>
        </member>
        <member name="T:API_DISCOVER.Models.Entities.ExternalAPIs.recordsRECDynamic_data">
            <remarks/>
        </member>
        <member name="P:API_DISCOVER.Models.Entities.ExternalAPIs.recordsRECDynamic_data.cluster_related">
            <remarks/>
        </member>
        <member name="T:API_DISCOVER.Models.Entities.ExternalAPIs.recordsRECDynamic_dataCluster_related">
            <remarks/>
        </member>
        <member name="P:API_DISCOVER.Models.Entities.ExternalAPIs.recordsRECDynamic_dataCluster_related.identifiers">
            <remarks/>
        </member>
        <member name="T:API_DISCOVER.Models.Entities.ExternalAPIs.recordsRECDynamic_dataCluster_relatedIdentifier">
            <remarks/>
        </member>
        <member name="P:API_DISCOVER.Models.Entities.ExternalAPIs.recordsRECDynamic_dataCluster_relatedIdentifier.type">
            <remarks/>
        </member>
        <member name="P:API_DISCOVER.Models.Entities.ExternalAPIs.recordsRECDynamic_dataCluster_relatedIdentifier.value">
            <remarks/>
        </member>
        <member name="T:API_DISCOVER.Models.Entities.TokenBearer">
            <summary>
            Clase que representa un token de acceso
            </summary>
        </member>
        <member name="T:API_DISCOVER.Models.Services.CallCronApiService">
            <summary>
            Servicio para hacer llamadas a los métodos del apiCron
            </summary>
        </member>
        <member name="M:API_DISCOVER.Models.Services.CallCronApiService.GetJob(System.String)">
            <summary>
            Obtiene una tarea
            </summary>
            <param name="id">identificador de la tarea</param>
            <returns>una tarea</returns>
        </member>
        <member name="M:API_DISCOVER.Models.Services.CallCronApiService.CallGetApi(System.String,API_DISCOVER.Models.Entities.TokenBearer)">
            <summary>
            Hace una petición get al apiCron
            </summary>
            <param name="urlMethod">Url del método dentro del apiCron</param>
            <param name="token">token bearer de seguridad</param>
        </member>
        <member name="T:API_DISCOVER.Models.Services.CallEtlApiService">
            <summary>
             Servicio para hacer llamadas a los métodos del controlador etl del API_CARGA 
            </summary>
        </member>
        <member name="M:API_DISCOVER.Models.Services.CallEtlApiService.CallGetOntology">
            <summary>
            Comprueba si la ontología ha cambiado. Si es así devuelve la nueva.
            </summary>
            <returns>La ontología actualizada</returns>
        </member>
        <member name="M:API_DISCOVER.Models.Services.CallEtlApiService.CallGetApi(System.String,API_DISCOVER.Models.Entities.TokenBearer)">
            <summary>
            Hace una petición get al apiCarga
            </summary>
            <param name="urlMethod">Url del método dentro del apiCron</param>
            <param name="token">token bearer de seguridad</param>
        </member>
        <member name="T:API_DISCOVER.Models.Services.CallTokenService">
            <summary>
            clase para la obtención de los tokens de acceso
            </summary>
        </member>
        <member name="M:API_DISCOVER.Models.Services.CallTokenService.CallTokenCarga">
            <summary>
            Obtiene un token de seguridad de acceso para el Api carga
            </summary>
            <returns>Token bearer</returns>
        </member>
        <member name="M:API_DISCOVER.Models.Services.CallTokenService.CallTokenCron">
            <summary>
            Obtiene un token de seguridad de acceso para el Api cron
            </summary>
            <returns>Token bearer</returns>
        </member>
        <!-- Badly formed XML comment ignored for member "M:API_DISCOVER.Models.Services.CallTokenService.CallTokenIdentity(System.String)" -->
        <member name="T:API_DISCOVER.Models.Services.ConfigCrossref">
            <summary>
            Clase para obtener la configuración necesaria para el uso del API de CROSSREF
            </summary>
        </member>
        <member name="M:API_DISCOVER.Models.Services.ConfigCrossref.GetCrossrefUserAgent">
            <summary>
            Obtiene el userAgent para usar en las peticiones al API de Crossref
            </summary>
        </member>
        <member name="T:API_DISCOVER.Models.Services.ConfigScopus">
            <summary>
            Clase para obtener la configuración necesaria para el uso del API de SCOPUS
            </summary>
        </member>
        <member name="M:API_DISCOVER.Models.Services.ConfigScopus.GetScopusApiKey">
            <summary>
            Obtiene el API key de Scopus
            </summary>
        </member>
        <member name="M:API_DISCOVER.Models.Services.ConfigScopus.GetScopusUrl">
            <summary>
            Obtiene el url del API de Scopus
            </summary>
        </member>
        <member name="T:API_DISCOVER.Models.Services.ConfigService">
            <summary>
            Clase para obtener la configuración necesaria del servicio
            </summary>
        </member>
        <member name="M:API_DISCOVER.Models.Services.ConfigService.GetMaxScore">
            <summary>
            Obtiene el MaxScore
            </summary>
        </member>
        <member name="M:API_DISCOVER.Models.Services.ConfigService.GetMinScore">
            <summary>
            Obtiene el MinScore
            </summary>
        </member>
        <member name="T:API_DISCOVER.Models.Services.ConfigSparql">
            <summary>
            Clase para obtener la configuración necesaria para el uso de Sparql
            </summary>
        </member>
        <member name="M:API_DISCOVER.Models.Services.ConfigSparql.GetGraph">
            <summary>
            Obtiene el gráfo configurado en Sparql:Graph del fichero appsettings.json
            </summary>
        </member>
        <member name="M:API_DISCOVER.Models.Services.ConfigSparql.GetEndpoint">
            <summary>
            Obtiene el endpoint configurado en Sparql:Endpoint del fichero appsettings.json
            </summary>
        </member>
        <member name="M:API_DISCOVER.Models.Services.ConfigSparql.GetQueryParam">
            <summary>
            Obtiene el parametro de query configurado en Sparql:QueryParam del fichero appsettings.json
            </summary>
        </member>
        <member name="T:API_DISCOVER.Models.Services.ConfigTokenService">
            <summary>
            Clase para la obtención de los datos necesarios para obtener los tokens de acceso 
            </summary>
        </member>
        <member name="M:API_DISCOVER.Models.Services.ConfigTokenService.GetAuthority">
            <summary>
            obtiene el authority configurado
            </summary>
            <returns>authority</returns>
        </member>
        <member name="M:API_DISCOVER.Models.Services.ConfigTokenService.GetGrantType">
            <summary>
            Obtiene el grant type configurado
            </summary>
            <returns>grant type</returns>
        </member>
        <member name="M:API_DISCOVER.Models.Services.ConfigTokenService.GetScope">
            <summary>
            Obtiene el scope de api carga configurado
            </summary>
            <returns>scope api carga</returns>
        </member>
        <member name="M:API_DISCOVER.Models.Services.ConfigTokenService.GetScopeCron">
            <summary>
            Obtiene el scope del cron configurado
            </summary>
            <returns>scope del cron</returns>
        </member>
        <member name="M:API_DISCOVER.Models.Services.ConfigTokenService.GetClientId">
            <summary>
            Obtiene el cliente id configurado
            </summary>
            <returns>cliente id</returns>
        </member>
        <member name="M:API_DISCOVER.Models.Services.ConfigTokenService.GetClientSecret">
            <summary>
            Obtiene el client secret configurado
            </summary>
            <returns>client secret</returns>
        </member>
        <member name="T:API_DISCOVER.Models.Services.ConfigUrlService">
            <summary>
            Servicio para obtener las variables de configuración de urls
            </summary>
        </member>
        <member name="M:API_DISCOVER.Models.Services.ConfigUrlService.GetUrlCarga">
            <summary>
            Obtiene la url del api de carga que ha sido configurada
            </summary>
            <returns>uri del api carga</returns>
        </member>
        <member name="M:API_DISCOVER.Models.Services.ConfigUrlService.GetUrlCron">
            <summary>
            Obtiene la url del api de carga que ha sido configurada
            </summary>
            <returns>uri del api cron</returns>
        </member>
        <member name="T:API_DISCOVER.Models.Services.ConfigWOS">
            <summary>
            Clase para obtener la configuración necesaria para el uso del API de WOS
            </summary>
        </member>
        <member name="M:API_DISCOVER.Models.Services.ConfigWOS.GetWOSAuthorization">
            <summary>
            Obtiene la autorización para WOS
            </summary>
        </member>
        <member name="T:API_DISCOVER.Models.Services.DiscoverItemBDService">
            <summary>
            Clase para gestionar las operaciones de las tareas de descubrimiento
            </summary>
        </member>
        <member name="M:API_DISCOVER.Models.Services.DiscoverItemBDService.GetDiscoverItemById(System.Guid)">
            <summary>
             Obtiene un item de descubrimiento
            </summary>
            <param name="id">Identificador del item</param>
            <remarks>Item de descubrimiento</remarks>
        </member>
        <member name="M:API_DISCOVER.Models.Services.DiscoverItemBDService.GetDiscoverItemsErrorByJobMini(System.String)">
            <summary>
            Obtiene los items con error de un Job (sólo obtiene el identificador y el estado)
            </summary>
            <param name="jobId">Identificador del job</param>
            <returns>Lista de Items de descubrimiento (sólo obtiene el identificador y el estado)</returns>
        </member>
        <member name="M:API_DISCOVER.Models.Services.DiscoverItemBDService.GetDiscoverItemsStatesByJob(System.String)">
            <summary>
            Obtiene el número de items en cada uno de los estados de descubrimiento
            </summary>
            <param name="jobId">Identificador del job</param>
            <returns></returns>
        </member>
        <member name="M:API_DISCOVER.Models.Services.DiscoverItemBDService.ExistsDiscoverItemsPending(System.String)">
            <summary>
            Obtiene si existen o no items pendientes de procesar por el descubrimiento para un Job
            </summary>
            <param name="jobId">Identificador del job</param>
            <returns></returns>
        </member>
        <member name="M:API_DISCOVER.Models.Services.DiscoverItemBDService.ExistsDiscoverItemsErrorOrDissambiguatinProblems(System.String)">
            <summary>
            Obtiene si existen o no items con estado error o procesados con problemas de desambiguación
            </summary>
            <param name="jobId">Identificador del job</param>
            <returns></returns>
        </member>
        <member name="M:API_DISCOVER.Models.Services.DiscoverItemBDService.AddDiscoverItem(API_DISCOVER.Models.Entities.DiscoverItem)">
            <summary>
            Añade un item de descubrimiento
            </summary>
            <param name="discoverItem">Item de descubrimiento</param>
        </member>
        <member name="M:API_DISCOVER.Models.Services.DiscoverItemBDService.ModifyDiscoverItem(API_DISCOVER.Models.Entities.DiscoverItem)">
            <summary>
            Modifica una item de descubrimiento
            </summary>
            <param name="discoverItem">tem de descubrimiento a modificar con los datos nuevos</param>
        </member>
        <member name="M:API_DISCOVER.Models.Services.DiscoverItemBDService.RemoveDiscoverItem(System.Guid)">
            <summary>
            Elimina un discoverItem
            </summary>
            <param name="identifier">Identificador del item</param>
        </member>
        <member name="T:API_DISCOVER.Models.Services.ProcessDiscoverStateJobBDService">
            <summary>
            Clase para gestionar los estados de descubrimiento de las tareas
            </summary>
        </member>
        <member name="M:API_DISCOVER.Models.Services.ProcessDiscoverStateJobBDService.GetProcessDiscoverStateJobById(System.Guid)">
            <summary>
            Obtiene un estado de descubrimiento de una tarea a través de su identificador
            </summary>
            <param name="id">Identificador del estado de descubrimiento de la tarea</param>
        </member>
        <member name="M:API_DISCOVER.Models.Services.ProcessDiscoverStateJobBDService.GetProcessDiscoverStateJobByIdJob(System.String)">
            <summary>
            Obtiene un estado de descubrimiento de una tarea a través de su idJob
            </summary>
            <param name="id">Identificador del Job del estado de descubrimiento de la tarea</param>
        </member>
        <member name="M:API_DISCOVER.Models.Services.ProcessDiscoverStateJobBDService.AddProcessDiscoverStateJob(API_DISCOVER.Models.Entities.ProcessDiscoverStateJob)">
            <summary>
            Añade un estado de descubrimiento de una tarea
            </summary>
            <param name="processDiscoverStateJob">Estado de descubrimiento de una tarea</param>
        </member>
        <member name="M:API_DISCOVER.Models.Services.ProcessDiscoverStateJobBDService.ModifyProcessDiscoverStateJob(API_DISCOVER.Models.Entities.ProcessDiscoverStateJob)">
            <summary>
            Modifica un estado de descubrimiento de una tarea
            </summary>
            <param name="processDiscoverStateJob">Estado de descubrimiento de una tarea</param>
        </member>
        <member name="M:API_DISCOVER.Models.Services.ProcessDiscoverStateJobBDService.RemoveDiscoverItem(System.Guid)">
            <summary>
            Elimina un estado de descubrimiento de una tarea
            </summary>
            <param name="id">Identificador del estado de descubrimiento de la tarea</param>
        </member>
        <member name="T:API_DISCOVER.Models.Services.RabbitMQService">
            <summary>
            Clase para conectar con el servidor Rabbi
            </summary>
        </member>
        <member name="M:API_DISCOVER.Models.Services.RabbitMQService.#ctor(Microsoft.Extensions.Options.IOptions{API_DISCOVER.Models.Entities.RabbitMQInfo})">
            <summary>
            Constructor de la clase que configura los datos necesarios para conectarse con rabbit
            </summary>
            <param name="ampOptionsSnapshot">Opciones de configuracion para Rabbit</param>
        </member>
        <member name="M:API_DISCOVER.Models.Services.RabbitMQService.PublishMessage(System.Object)">
            <summary>
            Encola un objeto en Rabbbit
            </summary>
            <param name="message">Objeto a encolar</param>
        </member>
        <member name="M:API_DISCOVER.Utility.AsioPublication.#ctor(API_DISCOVER.Utility.I_SparqlUtility,System.String,System.String,System.String)">
            <summary>
            Constructor
            </summary>
            <param name="pSparqlUtility">SPARQL Utility</param>
            <param name="pSPARQLEndpoint">SPARQL endpoint</param>
            <param name="pQueryParam">Parámetros para las queries</param>
            <param name="pGraph">Grafo de carga</param>
        </member>
        <member name="M:API_DISCOVER.Utility.AsioPublication.PublishRDF(VDS.RDF.RohGraph,VDS.RDF.RohGraph,VDS.RDF.RohGraph,System.Nullable{System.Collections.Generic.KeyValuePair{System.String,System.String}},System.DateTime,System.DateTime,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.KeyValuePair{System.String,System.Collections.Generic.HashSet{System.String}}}})">
            <summary>
            Publica un RDF en Asio aplicado todos losprocedimientos pertinentes
            </summary>
            <param name="dataGraph">Grafo con los datos a cargar</param>
            <param name="dataInferenceGraph">Grafo con los datos a cargar (con inferencia)</param>
            <param name="ontologyGraph">Grafo con la ontología</param>
            <param name="pAttributedTo">Sujeto y nombre para atribuir los triples de los apis externos</param>
            <param name="pActivityStartedAtTime">Inicio del proceso</param>
            <param name="pActivityEndedAtTime">Fin del proceso</param>
            <param name="externalIntegration">Datos extraídos de las integracinoes externas sujeto, propiedad, valor, identificador fuente externa</param>
        </member>
        <member name="M:API_DISCOVER.Utility.AsioPublication.RemovePrimaryTopics(VDS.RDF.RohGraph@)">
            <summary>
            Elimina los triples http://purl.org/roh/mirror/foaf#primaryTopic del RDF a cargar y los triples que tenían cagados en la BBDD
            </summary>
            <param name="dataGraph">Grafo con los datos a cargar</param>
            <returns>Lista de grafos afectados</returns>
        </member>
        <member name="M:API_DISCOVER.Utility.AsioPublication.RemoveMonovaluatedProperties(VDS.RDF.RohGraph,VDS.RDF.RohGraph)">
            <summary>
            Elimina todos los triples de la BBDD cuyo sujeto y predicado estén en el RDF a cargar y estén marcados como monovaluados.
            </summary>
            <param name="ontologyGraph">Grafo con la ontología</param>
            <param name="dataInferenceGraph">Grafo con los datos a cargar (con inferencia)</param>
        </member>
        <member name="M:API_DISCOVER.Utility.AsioPublication.DeleteEntity(System.String)">
            <summary>
            Elimina una entidad de la BBDD (y sus blank nodes de forma recursiva)
            </summary>
            <param name="pEntity">Entida</param>
            <returns>Lista de grafos afectados</returns>
        </member>
        <member name="M:API_DISCOVER.Utility.AsioPublication.DeleteOrphanNodes(System.Collections.Generic.HashSet{System.String})">
            <summary>
            Limpiamos los blanknodes huerfanos, o que no tengan triples (sólo rdftype)
            </summary>
            <param name="graphs">Lista de grafos en los que ejecutar</param>
        </member>
        <member name="T:API_DISCOVER.Utility.Discover">
            <summary>
            Clase para el descubrimiento
            </summary>
        </member>
        <member name="M:API_DISCOVER.Utility.Discover.Init(API_DISCOVER.Models.Entities.DiscoverItem,API_DISCOVER.Models.Services.CallEtlApiService)">
            <summary>
            Realiza el desubrimiento sobre un RDF
            </summary>
            <param name="pDiscoverItem">Item de descubrimiento</param>
            <param name="pCallEtlApiService">Servicio para hacer llamadas a los métodos del controlador etl del API_CARGA </param>
            <returns>DiscoverResult con los datos del descubrimiento</returns>
        </member>
        <member name="M:API_DISCOVER.Utility.Discover.Process(API_DISCOVER.Models.Entities.DiscoverItem,API_DISCOVER.Models.Entities.DiscoverResult,API_DISCOVER.Models.Services.DiscoverItemBDService,API_DISCOVER.Models.Services.CallCronApiService,API_DISCOVER.Models.Services.ProcessDiscoverStateJobBDService)">
            <summary>
            Procesa los resultados del descubrimiento
            </summary>
            <param name="pDiscoverItem">Objeto con los datos de com procesar el proeso de descubrimiento</param>
            <param name="pDiscoverResult">Resultado de la aplicación del descubrimiento</param>
            <param name="pDiscoverItemBDService">Clase para gestionar las operaciones de las tareas de descubrimiento</param>
            <param name="pCallCronApiService">Servicio para hacer llamadas a los métodos del apiCron</param>
            <param name="pProcessDiscoverStateJobBDService">Clase para gestionar los estados de descubrimiento de las tareas</param>
            <returns></returns>
        </member>
        <member name="M:API_DISCOVER.Utility.Discover.LoadDisambiguationConfigs">
            <summary>
            Cargamos las configuraciones de sincronización
            </summary>
            <returns></returns>
        </member>
        <member name="M:API_DISCOVER.Utility.Discover.LoadEntitiesWithRdfTypes(VDS.RDF.RohGraph,System.Boolean)">
            <summary>
            Obtiene las entidades con sus rdf:type (con la inferencia)
            </summary>
            <param name="pRohInferenceGraph">Grafo en local (con inferencia)</param>
            <param name="pIncludeBlankNodes">indica si hay que incluir los blanknodes</param>
            <returns>Diccionario con las entidades y su rdf:types</returns>
        </member>
        <member name="M:API_DISCOVER.Utility.Discover.LoadEntitiesWithRdfType(VDS.RDF.RohGraph,System.Boolean)">
            <summary>
            Obtiene las entidades con su rdf:type
            </summary>
            <param name="pRohGraph">Grafo en local</param>
            <param name="pIncludeBlankNodes">indica si hay que incluir los blanknodes</param>
            <returns>Diccionario con las entidades y su rdf:type</returns>
        </member>
        <member name="M:API_DISCOVER.Utility.Discover.GetDisambiguationDataRdf(System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.HashSet{System.String}},System.Collections.Generic.List{VDS.RDF.Triple})">
            <summary>
            Obtiene los datos de desambiguación del RDF
            </summary>
            <param name="pEntitiesRdfTypes">Listado con los sujetos y sus rdf:type (con inferencia)</param>
            <param name="pTriples">Lista de triples</param>
            <returns>Entidades del RDF con sus datos de desambiguación</returns>
        </member>
        <member name="M:API_DISCOVER.Utility.Discover.GetEntityDataForReconciliation(System.String,API_DISCOVER.Models.Entities.Disambiguation,System.Collections.Generic.List{System.String},System.Collections.Generic.List{System.String},System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.HashSet{System.String}}},System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.HashSet{System.String}}})">
            <summary>
            Obtiene datos de una entidad cargada en un grafo en local para la reconciliación
            </summary>
            <param name="pSubject">Sujeto</param>
            <param name="pDisambiguation">Objeto de desambiguación</param>
            <param name="pProperties">Propiedades directas del objeto de desambigucación (incluidos los identificadores)</param>
            <param name="pInverseProperties">Propiedades inversas del objeto de desambigucación</param>
            <param name="pDirectRels">Relaciones directas</param>
            <param name="pInverseRels">Relaciones inversas</param>
            <returns>Datos para la desambiguación</returns>
        </member>
        <member name="M:API_DISCOVER.Utility.Discover.GetEntityDataForReconciliation(System.Collections.Generic.List{System.String},API_DISCOVER.Models.Entities.Disambiguation,System.Collections.Generic.List{System.String},System.Collections.Generic.List{System.String},System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.HashSet{System.String}}},System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.HashSet{System.String}}})">
            <summary>
            Obtiene datos de varias entidades cargadas en un grafo en local para la reconciliación
            </summary>
            <param name="pSubjects">Sujetos</param>
            <param name="pDisambiguation">Objeto de desambiguación</param>
            <param name="pProperties">Propiedades directas del objeto de desambigucación (incluidos los identificadores)</param>
            <param name="pInverseProperties">Propiedades inversas del objeto de desambigucación</param>
            <param name="pDirectRels">Relaciones directas</param>
            <param name="pInverseRels">Relaciones inversas</param>
            <returns>Datos para la desambiguación</returns>
        </member>
        <member name="M:API_DISCOVER.Utility.Discover.ExtractRelsFromTriples(System.Collections.Generic.List{VDS.RDF.Triple},System.Boolean)">
            <summary>
            Extrae las relaciones de los triples para procesarlos posteriormente por GetPropertiesValues
            </summary>
            <param name="pTriples">Lista de triples</param>
            <param name="pInverse">Implica si son inversas</param>
            <returns>Diccinoario con las relaciones</returns>
        </member>
        <member name="M:API_DISCOVER.Utility.Discover.GetPropertiesValues(System.Collections.Generic.List{System.String},System.Collections.Generic.List{System.String},System.Boolean,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.HashSet{System.String}}})">
            <summary>
            Obtiene N propiedades de N entidades de un grafo en local
            </summary>
            <param name="pSubjects">Sujetos</param>
            <param name="pProperties">Propiedades</param>
            <param name="pInverse">Implica si son inversas</param>
            <param name="pRels">Relaciones</param>
            <returns>Valor de las propiedades para los sujetos introducidos</returns>
        </member>
        <member name="M:API_DISCOVER.Utility.Discover.LoadNamesScore(System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.Dictionary{System.String,System.Single}}@,System.Collections.Generic.Dictionary{System.String,System.String},VDS.RDF.RohGraph,API_DISCOVER.Models.Entities.DiscoverCache)">
            <summary>
            Carga los pesos de los nombres del RDF con sus equivalentes en la BBDD
            </summary>
            <param name="pNamesScore">Diccionario con los nombres del RDF y las entidades de la BB con sus scores</param>
            <param name="pPersonsWithName">Nombres de todas las personas que hay cargadas en la BBDD, Clave ID, Valor nombre</param>
            <param name="pDataGraph">Grafo en local</param>
            <param name="pDiscoverCache">Caché de discover</param>
        </member>
        <member name="M:API_DISCOVER.Utility.Discover.LoadEntitiesDB(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Obtiente los sujetos que están cargados en la BBDD SPARQL junto con su rdf:type
            </summary>
            <param name="pSubjects">Lista de identificadores de las entidades a buscar</param>
            <returns></returns>
        </member>
        <member name="M:API_DISCOVER.Utility.Discover.GetDisambiguationDataBBDD(System.Collections.Generic.Dictionary{System.String,System.String}@,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.HashSet{System.String}},System.Collections.Generic.HashSet{System.String},System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{API_DISCOVER.Models.Entities.DisambiguationData}},System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.Dictionary{System.String,System.Single}},API_DISCOVER.Models.Entities.DiscoverCache)">
            <summary>
            Obtiene de la BBDD los candidatos para la desambiguación junto con sus datos para unoa serie de entidades junto con sus datos de desambiguación
            </summary>
            <param name="pEntitiesRdfTypeBBDD">rdf:type de las entidades obtenidas de la BBDD</param>
            <param name="pEntitiesRdfType">rdf:types de las entidades a las que se les va a buscar candidatos</param>
            <param name="pListaEntidadesOmitir">lista de entidades que hay que omitir al buscar candidatos</param>
            <param name="pDisambiguationDataRdf">datos de desambiguación del RDF</param>
            <param name="pNamesScore">Diccionario con los nombres del RDF y las entidades de la BB con sus scores</param>
            <param name="pDiscoverCache">Caché de Discover</param>
            <returns>Diccionario con los candidatos encontrados y sus datos para apoyar la desambiguación</returns>
        </member>
        <member name="M:API_DISCOVER.Utility.Discover.GetEntityDataForReconciliationBBDD(System.Collections.Generic.HashSet{System.String},System.Collections.Generic.Dictionary{System.String,System.String}@,API_DISCOVER.Models.Entities.DisambiguationData,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.Dictionary{System.String,System.Single}},API_DISCOVER.Models.Entities.DiscoverCache)">
            <summary>
            Obtiene de la BBDD los candidatos para la desambiguación junto con sus datos para unos datos de desambiguación concretos
            </summary>
            <param name="pRdfTypes">posibles rdf:types de los candidatos</param>
            <param name="rdfTypesReturn">rdf:type de los candidatos</param>
            <param name="pDisambiguationData">Datos de desambiguación</param>
            <param name="pNamesScore">Diccionario con los nombres del RDF y las entidades de la BB con sus scores</param>
            <param name="pDiscoverCache">Caché de Discover</param>
            <returns></returns>
        </member>
        <member name="M:API_DISCOVER.Utility.Discover.LoadPersonWithName">
            <summary>
            Obtiene los nombres de todas las personas
            </summary>
            <returns></returns>
        </member>
        <member name="M:API_DISCOVER.Utility.Discover.PrepareData(VDS.RDF.RohGraph,VDS.RDF.Query.Inference.RohRdfsReasoner,VDS.RDF.RohGraph@,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.HashSet{System.String}}@,System.Collections.Generic.Dictionary{System.String,System.String}@,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{API_DISCOVER.Models.Entities.DisambiguationData}}@,System.Boolean)">
            <summary>
            Método que prepara los datos para efectuar la reconciliación
            </summary>
            <param name="pDataGraph">Grafo en local con los datos a procesar</param>
            <param name="pReasoner">Razonador para la inferencia de la ontología</param>
            <param name="pDataInferenceGraph">Grafo en local con los datos a procesar (con la inferencia de la ontología)</param>
            <param name="pEntitiesRdfTypes">Diccionario con las entidades encontradas y sus rdf:type (con inferencia)</param>
            <param name="pEntitiesRdfType">Diccionario con las entidades encontradas y su rdf:type (sin inferencia)</param>
            <param name="pDisambiguationDataRdf">Datos extraidos del grafo para la reconciliación</param>
            <param name="pIncludeBlankNodes">indica si hay que incluir los blanknodes</param>
        </member>
        <member name="M:API_DISCOVER.Utility.Discover.ReconciliateIDs(System.Boolean@,System.Collections.Generic.Dictionary{System.String,System.String}@,System.Collections.Generic.Dictionary{System.String,System.String},System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{API_DISCOVER.Models.Entities.DisambiguationData}},System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.HashSet{System.String}},VDS.RDF.RohGraph@)">
            <summary>
            Efectua la reconciliación con los identificadores
            </summary>
            <param name="pHasChanges">Indica si se han realizado cambios en pDataGraph</param>
            <param name="pListaEntidadesReconciliadas">Lista con las entidades reconciliadas</param>
            <param name="pEntitiesRdfType">Diccionario con las entidades encontradas y su rdf:type (sin inferencia)</param>
            <param name="pDisambiguationDataRdf">Datos extraidos del grafo para la reconciliación</param>
            <param name="pDiscardDissambiguations">Descartes para la desambiguación</param>
            <param name="pDataGraph">Grafo en local con los datos a procesar</param>
            <returns>Lista con las entidades reconciliadas</returns>
        </member>
        <member name="M:API_DISCOVER.Utility.Discover.ReconciliateBBDD(System.Boolean@,System.Collections.Generic.Dictionary{System.String,System.String}@,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.Dictionary{System.String,System.Single}}@,VDS.RDF.RohGraph@,VDS.RDF.Query.Inference.RohRdfsReasoner,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.Dictionary{System.String,System.Single}},System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.HashSet{System.String}},API_DISCOVER.Models.Entities.DiscoverCache)">
            <summary>
            Reconcilia el RDF con la BBDD
            </summary>
            <param name="pHasChanges">Indica si se han realizado cambios en pDataGraph</param>
            <param name="pListaEntidadesReconciliadas">Lista con las entidades reconciliadas</param>
            <param name="pListaEntidadesReconciliadasDudosas">Lista con las entidades dudosas</param>
            <param name="pDataGraph">Grafo en local con los datos del RDF</param>
            <param name="pReasoner">Razonador</param>
            <param name="pNamesScore">Diccionario con los nombres del RDF y las entidades de la BB con sus scores</param>
            <param name="pDiscardDissambiguations">Descartes de desambiguación</param>
            <param name="pDiscoverCache">Caché de discover</param>
            <returns>Diccioario con las entidades reconciliadas</returns>
        </member>
        <member name="M:API_DISCOVER.Utility.Discover.ReconciliateRDF(System.Boolean@,System.Collections.Generic.Dictionary{System.String,System.String}@,VDS.RDF.RohGraph@,VDS.RDF.Query.Inference.RohRdfsReasoner,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.HashSet{System.String}},API_DISCOVER.Models.Entities.DiscoverCache)">
            <summary>
            Reconcilia el RDF con datos del propio RDF
            </summary>
            <param name="pHasChanges">Indica si se han realizado cambios en pDataGraph</param>
            <param name="pListaEntidadesReconciliadas">Lista con las entidades reconciliadas</param>
            <param name="pDataGraph">Grafo en local con los datos del RDF</param>
            <param name="pReasoner">Razonador</param>
            <param name="pDiscardDissambiguations">Descartes de desambiguación</param>
            <param name="pDiscoverCache">Caché de Discover</param>
            <returns>Diccioario con las entidades reconciliadas</returns>
        </member>
        <member name="M:API_DISCOVER.Utility.Discover.ReconciliateExternalIntegration(System.Boolean@,System.Collections.Generic.Dictionary{System.String,System.String}@,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.Dictionary{System.String,System.Single}}@,VDS.RDF.RohGraph@,System.Collections.Generic.Dictionary{System.String,System.String},VDS.RDF.RohGraph,VDS.RDF.Query.Inference.RohRdfsReasoner,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.Dictionary{System.String,System.Single}},System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.HashSet{System.String}},System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.HashSet{System.String}},API_DISCOVER.Models.Entities.DiscoverCache)">
            <summary>
            Reconcilia el RDF con datos de los APIs externos
            </summary>
            <param name="pHasChanges">Indica si se han realizado cambios en pDataGraph</param>
            <param name="pListaEntidadesReconciliadas">Lista con las entidades reconciliadas</param>
            <param name="pDiscoveredEntitiesProbability">Diccionario con los candidatos para las entidades</param>
            <param name="pDataGraph">Grafo en local con los datos del RDF</param>
            <param name="pListaEntidadesRDFEnriquecer">Diccionario con las entidades en común del RDF y de los APIs externos</param>
            <param name="pExternalGraph">Grafo en local con los datos de los APIs externos</param>
            <param name="pReasoner">Razonador</param>
            <param name="pNamesScore">Diccionario con los nombres del RDF y las entidades de la BB con sus scores</param>
            <param name="pClasesConSubclases">Diccionario con las clases de la ontología junto con sus subclases</param>
            <param name="pDiscardDissambiguations">Descartes para la desambiguación</param>
            <param name="pDiscoverCache">Caché de Discover</param>
            <returns>Diccioario con las entidades reconciliadas</returns>
        </member>
        <member name="M:API_DISCOVER.Utility.Discover.EnriquecerDisambiguationDataRdfConExternalDisambiguationDataRdf(System.Collections.Generic.Dictionary{System.String,System.String},System.Collections.Generic.Dictionary{System.String,System.String}@,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{API_DISCOVER.Models.Entities.DisambiguationData}}@,System.Collections.Generic.Dictionary{System.String,System.String}@,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{API_DISCOVER.Models.Entities.DisambiguationData}}@)">
            <summary>
            Enriquece los datos de desambiguación del RDF con los datos extraídos de las integraciones externas
            </summary>
            <param name="pListaEntidadesRDFEnriquecer">Diccionario con las entidades en común del RDF y de los APIs externos</param>
            <param name="pEntitiesRdfType">Dicionario con las entidades del RDF y sus clases</param>
            <param name="pDisambiguationDataRdf">Datos de desambiguación del RDF</param>
            <param name="pExternalEntitiesRdfType">Dicionario con las integraciones externas y sus clases</param>
            <param name="pExternalDisambiguationDataRdf">Datos de desambiguación de las integraciones externas</param>
        </member>
        <member name="M:API_DISCOVER.Utility.Discover.ReconciliateData(System.Boolean@,System.Collections.Generic.Dictionary{System.String,System.String}@,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.Dictionary{System.String,System.Single}}@,System.Collections.Generic.Dictionary{System.String,System.String},System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{API_DISCOVER.Models.Entities.DisambiguationData}},System.Collections.Generic.Dictionary{System.String,System.String},System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{API_DISCOVER.Models.Entities.DisambiguationData}},VDS.RDF.RohGraph@,System.Boolean,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.HashSet{System.String}},API_DISCOVER.Models.Entities.DiscoverCache)">
            <summary>
            Efectua la reconciliación con los datos proporcionados
            </summary>
            <param name="pHasChanges">Indica si se han realizado cambios en pDataGraph</param>
            <param name="pListaEntidadesReconciliadas">Lista con las entidades reconciliadas</param>
            <param name="pListaEntidadesReconciliadasDudosas"></param>
            <param name="pEntitiesRdfType">Diccionario con las entidades encontradas y sus rdf:type</param>
            <param name="pEntitiesRdfTypeCandidate">Diccionario con los candidatos y sus rdf:type</param>
            <param name="pDisambiguationDataRdf">Datos extraidos del grafo en local para la reconciliación</param>
            <param name="pDisambiguationDataCandidate">Datos de los candidatos para actualizar el rdf en local</param>
            <param name="pDataGraph">Grafo en local con los datos a procesar</param>
            <param name="pExternalIntegration">Indica si es para una integración externa, en ese caso no se hace efectiva la reconciliación y no se aplica la coincidencia de rdftypes incluye la herencia</param>
            <param name="pDiscardDissambiguations">Descartes de desambiguación</param>
            <param name="pDiscoverCache">Caché de Discover</param>
            <returns>Diccionario de entidades reconciliadas</returns>
        </member>
        <member name="M:API_DISCOVER.Utility.Discover.GetSimilarity(API_DISCOVER.Models.Entities.DisambiguationData,API_DISCOVER.Models.Entities.DisambiguationData,System.Collections.Generic.Dictionary{API_DISCOVER.Models.Entities.Disambiguation,System.Collections.Generic.List{API_DISCOVER.Models.Entities.Disambiguation.Property}},System.Collections.Generic.Dictionary{API_DISCOVER.Models.Entities.DisambiguationData,System.Collections.Generic.List{API_DISCOVER.Models.Entities.Disambiguation.Property}},System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.Dictionary{System.String,System.Single}},System.Boolean,API_DISCOVER.Models.Entities.DiscoverCache)">
            <summary>
            Obtiene la similaridad entre dos DisambiguationData
            </summary>
            <param name="pDisambiguationDataOriginal">DisambiguationData Original</param>
            <param name="pDisambiguationDataCandidate">DisambiguationData Candidato</param>
            <param name="pCandidates">Candidatos a la desambiguación, el sujeto es ID del RDF y loas valores son los posibles valores de la BBDD</param>
            <param name="pOnlyPositive">Sólo los calculos positivos</param>
            <param name="pDiscoverCache">Caché de Discover</param>
            <returns></returns>
        </member>
        <member name="M:API_DISCOVER.Utility.Discover.GetSimilarity(System.String,System.String,API_DISCOVER.Models.Entities.Disambiguation.Property.Type,API_DISCOVER.Models.Entities.DiscoverCache,System.Nullable{System.Int32})">
            <summary>
            Obtenemos la similitud
            </summary>
            <param name="pOriginal">Dato Original</param>
            <param name="pCandidato">Dato Candidato</param>
            <param name="pMaxNumWordsTitle">Número de palabras a partir de la cual la similitud de tipo 'title' obtiene la máxima puntuación</param>
            <param name="pType">Tipo de similitud</param>
            <param name="pDiscoverCache">Caché de Discover</param>
            <returns></returns>
        </member>
        <member name="M:API_DISCOVER.Utility.Discover.ExternalIntegration(System.Boolean@,System.Collections.Generic.Dictionary{System.String,System.String}@,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.Dictionary{System.String,System.Single}}@,VDS.RDF.RohGraph@,VDS.RDF.Query.Inference.RohRdfsReasoner,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.Dictionary{System.String,System.Single}},VDS.RDF.RohGraph,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.KeyValuePair{System.String,System.Single}}@,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.HashSet{System.String}},API_DISCOVER.Models.Entities.DiscoverCache)">
            <summary>
            Método para el descubrimiento con los APIs externos
            </summary>
            <param name="pHasChanges">Indica si se han realizado cambios en pDataGraph</param>
            <param name="pListaEntidadesReconciliadas">Lista con las entidades reconciliadas</param>
            <param name="pDiscoveredEntitiesProbability">Lista con las entidades dudosas</param>
            <param name="pDataGraph">Grafo en local con los datos del RDF</param>
            <param name="pReasoner">Razonador</param>
            <param name="pNamesScore">Diccionario con los nombres del RDF y las entidades de la BB con sus scores</param>
            <param name="pOntologyGraph">Grafo en local con los datos de la ontología</param>
            <param name="pEntidadesReconciliadasConIntegracionExterna">Entidades reconciliadas con la integración externa</param>
            <param name="pDiscardDissambiguations">Descartes para la desambiguación</param>
            <param name="pDiscoverCache">Caché de discover</param>
            <returns>Diccionario con las entidades y los identificadores extraídos, junto con su provenencia</returns>
        </member>
        <member name="M:API_DISCOVER.Utility.Discover.ExternalIntegrationExtractIdentifiers(System.Boolean@,VDS.RDF.RohGraph,VDS.RDF.RohGraph@,System.Collections.Generic.Dictionary{System.String,System.String},VDS.RDF.Query.Inference.RohRdfsReasoner,System.Collections.Generic.Dictionary{System.String,System.String}@,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.HashSet{System.String}},API_DISCOVER.Models.Entities.DiscoverCache)">
            <summary>
            Extrae los identificadores obtenidos de las integraciones externas y los almacena en el Grafo a cargar
            </summary>
            <param name="pHasChanges">Indica si se han realizado cambios en pDataGraph</param>
            <param name="pExternalGraph">Grafo con los datos de las integraciones externas</param>
            <param name="pDataGraph">Grafo en local con los datos del RDF</param>
            <param name="pListaEntidadesReconciliadas">Lista con las entidades reconciliadas</param>
            <param name="pReasoner">Razonador</param>
            <param name="pListaEntidadesRDFEnriquecer">Diccionario con las entidades del RDF a enriquecer con los datos de las integraciones externas</param>
            <param name="pDiscardDissambiguations">Descartes de desambiguación</param>
            <param name="pDiscoverCache">Caché de Discover</param>
            <returns>Diccionario con las entidades y los identificadores extraídos y sus provenencias</returns>
        </member>
        <member name="M:API_DISCOVER.Utility.Discover.ExternalIntegrationORCID(System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.HashSet{System.String}},VDS.RDF.RohGraph,API_DISCOVER.Models.Entities.DiscoverCache,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.Dictionary{System.String,System.Single}})">
            <summary>
            Integración con el API de ORCID
            </summary>
            <param name="pEntitiesRdfTypes">Diccionario con las entidades y sus clases (con herencia)</param>
            <param name="pDiscoverCache">Caché de discover</param>
            <param name="pDataGraph">Grafo en local con los datos del RDF</param>
            <param name="pDiscoveredEntitiesProbability">Entidades con probabilidades</param>
            <returns>Grafo con los datos obtenidos de ORCID</returns>
        </member>
        <member name="M:API_DISCOVER.Utility.Discover.ExternalIntegrationSCOPUS(System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.HashSet{System.String}},VDS.RDF.RohGraph,API_DISCOVER.Models.Entities.DiscoverCache,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.Dictionary{System.String,System.Single}})">
            <summary>
            Integración con el API de SCOPUS
            </summary>
            <param name="pEntitiesRdfTypes">Diccionario con las entidades y sus clases (con herencia)</param>
            <param name="pDiscoverCache">Caché de discover</param>
            <param name="pDataGraph">Grafo en local con los datos del RDF</param>
            <param name="pDiscoveredEntitiesProbability">Entidades con probabilidades</param>
            <returns>Grafo con los datos obtenidos de SCOPUS</returns>
        </member>
        <member name="M:API_DISCOVER.Utility.Discover.ExternalIntegrationDBLP(System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.HashSet{System.String}},VDS.RDF.RohGraph,API_DISCOVER.Models.Entities.DiscoverCache,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.Dictionary{System.String,System.Single}})">
            <summary>
            Integración con el API de DBLP
            </summary>
            <param name="pEntitiesRdfTypes">Diccionario con las entidades y sus clases (con herencia)</param>
            <param name="pDiscoverCache">Caché de discover</param>
            <param name="pDataGraph">Grafo en local con los datos del RDF</param>
            <param name="pDiscoveredEntitiesProbability">Entidades con probabilidades</param>
            <returns>Grafo con los datos obtenidos de DBLP</returns>
        </member>
        <member name="M:API_DISCOVER.Utility.Discover.ExternalIntegrationCROSSREF(System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.HashSet{System.String}},VDS.RDF.RohGraph,API_DISCOVER.Models.Entities.DiscoverCache,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.Dictionary{System.String,System.Single}})">
            <summary>
            Integración con el API de CROSSREF
            </summary>
            <param name="pEntitiesRdfTypes">Diccionario con las entidades y sus clases (con herencia)</param>
            <param name="pDiscoverCache">Caché de discover</param>
            <param name="pDataGraph">Grafo en local con los datos del RDF</param>
            <param name="pDiscoveredEntitiesProbability">Entidades con probabilidades</param>
            <returns>Grafo con los datos obtenidos de CROSSREF</returns>
        </member>
        <member name="M:API_DISCOVER.Utility.Discover.ExternalIntegrationPUBMED(System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.HashSet{System.String}},VDS.RDF.RohGraph,API_DISCOVER.Models.Entities.DiscoverCache,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.Dictionary{System.String,System.Single}})">
            <summary>
            Integración con el API de PUBMED
            </summary>
            <param name="pEntitiesRdfTypes">Diccionario con las entidades y sus clases (con herencia)</param>
            <param name="pDiscoverCache">Caché de discover</param>
            <param name="pDataGraph">Grafo en local con los datos del RDF</param>
            <param name="pDiscoveredEntitiesProbability">Entidades con probabilidades</param>
            <returns>Grafo con los datos obtenidos de SCOPUS</returns>
        </member>
        <member name="M:API_DISCOVER.Utility.Discover.ExternalIntegrationWOS(System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.HashSet{System.String}},VDS.RDF.RohGraph,API_DISCOVER.Models.Entities.DiscoverCache,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.Dictionary{System.String,System.Single}})">
            <summary>
            Integración con el API de WOS
            </summary>
            <param name="pEntitiesRdfTypes">Diccionario con las entidades y sus clases (con herencia)</param>
            <param name="pDiscoverCache">Caché de discover</param>
            <param name="pDataGraph">Grafo en local con los datos del RDF</param>
            <param name="pDiscoveredEntitiesProbability">Entidades con probabilidades</param>
            <returns>Grafo con los datos obtenidos de SCOPUS</returns>
        </member>
        <member name="M:API_DISCOVER.Utility.Discover.ExternalIntegrationRECOLECTA(System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.HashSet{System.String}},VDS.RDF.RohGraph,API_DISCOVER.Models.Entities.DiscoverCache,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.Dictionary{System.String,System.Single}})">
            <summary>
            Integración con el API de RECOLECTA
            </summary>
            <param name="pEntitiesRdfTypes">Diccionario con las entidades y sus clases (con herencia)</param>
            <param name="pDiscoverCache">Caché de discover</param>
            <param name="pDataGraph">Grafo en local con los datos del RDF</param>
            <param name="pDiscoveredEntitiesProbability">Entidades con probabilidades</param>
            <returns>Grafo con los datos obtenidos de SCOPUS</returns>
        </member>
        <member name="M:API_DISCOVER.Utility.Discover.ExternalIntegrationDOAJ(System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.HashSet{System.String}},VDS.RDF.RohGraph,API_DISCOVER.Models.Entities.DiscoverCache,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.Dictionary{System.String,System.Single}})">
            <summary>
            Integración con el API de DOAJ
            </summary>
            <param name="pEntitiesRdfTypes">Diccionario con las entidades y sus clases (con herencia)</param>
            <param name="pDiscoverCache">Caché de discover</param>
            <param name="pDataGraph">Grafo en local con los datos del RDF</param>
            <param name="pDiscoveredEntitiesProbability">Entidades con probabilidades</param>
            <returns>Grafo con los datos obtenidos de SCOPUS</returns>
        </member>
        <member name="M:API_DISCOVER.Utility.Discover.AddExternalIDProvenance(VDS.RDF.RohGraph,VDS.RDF.IUriNode,VDS.RDF.IUriNode,VDS.RDF.ILiteralNode,System.String)">
            <summary>
            Añade los triples para conocer la proveniencia de los enriquecimientos con APIs externos
            </summary>
            <param name="pDataGraph">Grafo con los datos</param>
            <param name="pSubject">Sujeto</param>
            <param name="pProperty">Propiedad</param>
            <param name="pValue">Valor</param>
            <param name="pProvenanceId">Identificador de la fuente externa</param>
        </member>
        <member name="M:API_DISCOVER.Utility.Discover.ExtractClassWithSubclass(VDS.RDF.RohGraph)">
            <summary>
            Extra las clases con todas las subclases de la ontología pasada como parámetro
            </summary>
            <param name="pOntology">Ontología</param>
            <returns>Diccionario con las clases y sus subclases (en las subclases está la propia clase)</returns>
        </member>
        <member name="M:API_DISCOVER.Utility.Discover.SelectDataCache(System.String,API_DISCOVER.Models.Entities.DiscoverCache)">
            <summary>
            Hace una consulta a la BBDD usando la cache de discover
            </summary>
            <param name="pConsulta">Consulta</param>
            <param name="pDiscoverCache">Caché de Discover</param>
            <returns>Resultado de la consulta</returns>
        </member>
        <member name="M:API_DISCOVER.Utility.Discover.SelectORCIDExpandedSearchCache(System.String,API_DISCOVER.Models.Entities.DiscoverCache)">
            <summary>
            Hace una consulta al api de ORCID usando la cache de discover
            </summary>
            <param name="q">texto</param>
            <param name="pDiscoverCache">Caché de Discover</param>
            <returns></returns>
        </member>
        <member name="M:API_DISCOVER.Utility.Discover.SelectORCIDPersonCache(System.String,API_DISCOVER.Models.Entities.DiscoverCache)">
            <summary>
            Hace una consulta al api de ORCID usando la cache de discover
            </summary>
            <param name="orcid_id">Identificador de ORCID de la persona</param>
            <param name="pDiscoverCache">Caché de Discover</param>
            <returns></returns>
        </member>
        <member name="M:API_DISCOVER.Utility.Discover.SelectORCIDWorksCache(System.String,API_DISCOVER.Models.Entities.DiscoverCache)">
            <summary>
            Hace una consulta al api de ORCID usando la cache de discover
            </summary>
            <param name="orcid_id">Identificador de ORCID de la persona</param>
            <param name="pDiscoverCache">Caché de Discover</param>
            <returns></returns>
        </member>
        <member name="M:API_DISCOVER.Utility.Discover.SelectDBLPAuthorsCache(System.String,API_DISCOVER.Models.Entities.DiscoverCache)">
            <summary>
            Hace una consulta al api de DBLP usando la cache de discover
            </summary>
            <param name="q">texto</param>
            <param name="pDiscoverCache">Caché de Discover</param>
            <returns></returns>
        </member>
        <member name="M:API_DISCOVER.Utility.Discover.SelectDBLPPersonCache(System.String,API_DISCOVER.Models.Entities.DiscoverCache)">
            <summary>
            Hace una consulta al api de DBLP usando la cache de discover
            </summary>
            <param name="idPerson">Identificador de DBLP de la persona</param>
            <param name="pDiscoverCache">Caché de Discover</param>
            <returns></returns>
        </member>
        <member name="M:API_DISCOVER.Utility.Discover.SelectSCOPUSWorksCache(System.String,API_DISCOVER.Models.Entities.DiscoverCache)">
            <summary>
            Hace una consulta al api de SCOPUS usando la cache de discover
            </summary>
            <param name="q">texto</param>
            <param name="pDiscoverCache">Caché de Discover</param>
            <returns></returns>
        </member>
        <member name="M:API_DISCOVER.Utility.Discover.SelectSCOPUSPersonCache(System.UInt64,API_DISCOVER.Models.Entities.DiscoverCache)">
            <summary>
            Hace una consulta al api de SCOPUS usando la cache de discover
            </summary>
            <param name="authid">Identificador de SCOPUS de la persona</param>
            <param name="pDiscoverCache">Caché de Discover</param>
            <returns></returns>
        </member>
        <member name="M:API_DISCOVER.Utility.Discover.SelectCROSSREF_WorksCache(System.String,API_DISCOVER.Models.Entities.DiscoverCache)">
            <summary>
            Hace una consulta al api de CROSSREF usando la cache de discover
            </summary>
            <param name="q">texto</param>
            <param name="pDiscoverCache">Caché de Discover</param>
            <returns></returns>
        </member>
        <member name="M:API_DISCOVER.Utility.Discover.SelectPUBMED_WorkSearchByTitle(System.String,API_DISCOVER.Models.Entities.DiscoverCache)">
            <summary>
            Hace una consulta al api de PUBMED usando la cache de discover
            </summary>
            <param name="q">texto</param>
            <param name="pDiscoverCache">Caché de Discover</param>
            <returns></returns>
        </member>
        <member name="M:API_DISCOVER.Utility.Discover.SelectPUBMED_GetWorkByID(System.UInt32,API_DISCOVER.Models.Entities.DiscoverCache)">
            <summary>
            Hace una consulta al api de PUBMED usando la cache de discover
            </summary>
            <param name="id">identificador del documento</param>
            <param name="pDiscoverCache">Caché de Discover</param>
            <returns></returns>
        </member>
        <member name="M:API_DISCOVER.Utility.Discover.SelectWOSWorksCache(System.String,API_DISCOVER.Models.Entities.DiscoverCache)">
            <summary>
            Hace una consulta al api de WOS usando la cache de discover
            </summary>
            <param name="q">texto</param>
            <param name="pDiscoverCache">Caché de Discover</param>
            <returns></returns>
        </member>
        <member name="M:API_DISCOVER.Utility.Discover.SelectRECOLECTAWorksCache(System.String,API_DISCOVER.Models.Entities.DiscoverCache)">
            <summary>
            Hace una consulta al api de RECOLECTA usando la cache de discover
            </summary>
            <param name="q">texto</param>
            <param name="pDiscoverCache">Caché de Discover</param>
            <returns></returns>
        </member>
        <member name="M:API_DISCOVER.Utility.Discover.SelectDOAJWorksCache(System.String,API_DISCOVER.Models.Entities.DiscoverCache)">
            <summary>
            Hace una consulta al api de DOAJ usando la cache de discover
            </summary>
            <param name="q">texto</param>
            <param name="pDiscoverCache">Caché de Discover</param>
            <returns></returns>
        </member>
        <member name="M:API_DISCOVER.Utility.Discover.SplitList``1(System.Collections.Generic.List{``0},System.Int32)">
            <summary>
            Divide una lista en N listas
            </summary>
            <typeparam name="T"></typeparam>
            <param name="pItems">Lista</param>
            <param name="pSize">Tamaño máximo de las sublistas devueltas</param>
            <returns>Lista de listas</returns>
        </member>
        <member name="F:API_DISCOVER.Utility.Discover.charRemovePropertyTitle">
            <summary>
            Array para aplicar en las restricciones de tipo 'title'
            </summary>
        </member>
        <member name="M:API_DISCOVER.Utility.Discover.GetNameSimilarity(System.String,System.String,API_DISCOVER.Models.Entities.DiscoverCache)">
            <summary>
            Obtiene la similitud de dos nombres de personas, a partir de 0.5, se consideran probables
            </summary>
            <param name="pNombreA">Nombre A</param>
            <param name="pNombreB">Nombre B</param>
            <param name="pDiscoverCache">Caché de descubrimiento</param>
            <returns>Scores</returns>
        </member>
        <member name="M:API_DISCOVER.Utility.Discover.CompareSingleName(System.String,System.String)">
            <summary>
            Obtiene el coeficiente jackard de dos nombres
            </summary>
            <param name="pNameA">Nombre A</param>
            <param name="pNameB">Nombre B</param>
            <returns>Coeficiente</returns>
        </member>
        <member name="M:API_DISCOVER.Utility.Discover.GetNGramas(System.String,System.Int32)">
            <summary>
            Obtiene ngramas del tamaño especificado de un texto
            </summary>
            <param name="pText">Texto del que obtener los ngramas</param>
            <param name="pNgramSize">Tamaño de los ngramas</param>
            <returns>Lista de ngramas</returns>
        </member>
        <member name="M:API_DISCOVER.Utility.Discover.NormalizeName(System.String,API_DISCOVER.Models.Entities.DiscoverCache,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Normaliza un texto (Nombre) eliminando acentos y caracteres que no sean letras
            </summary>
            <param name="text">Texto a normalizar</param>
            <param name="pDiscoverCache">Caché de descubrimiento</param>
            <param name="eliminaracentos">Indica si deben eliminarse los acentos</param>
            <param name="pPropername">Indica si es un nombre propio (personas)</param>
            <param name="pReplaceNumbers">Reemplazar numeros</param>
            <returns>Texto normalizado</returns>
        </member>
        <member name="M:API_DISCOVER.Utility.SparqlUtility.GetTriplesFromRDF(System.Xml.XmlDocument)">
            <summary>
            Obtiene los triples de un RDF
            </summary>
            <param name="pXMLRDF">XML RDF</param>
            <returns>Lista de triples</returns>
        </member>
        <member name="M:API_DISCOVER.Utility.SparqlUtility.GetTriplesFromGraph(VDS.RDF.RohGraph)">
            <summary>
            Obtiene los triples de un RDF
            </summary>
            <param name="pXMLRDF">XML RDF</param>
            <returns>Lista de triples</returns>
        </member>
        <member name="M:API_DISCOVER.Utility.SparqlUtility.LoadTriples(System.Collections.Generic.List{System.String},System.String,System.String,System.String)">
            <summary>
            Carga los triples en un PARQL endpoint
            </summary>
            <param name="pTriples">Triples a inertar</param>
            <param name="pSPARQLEndpoint">Endpoint SPARQL</param>
            <param name="pQueryParam">Query param</param>
            <param name="pGraph">Grafo</param>
        </member>
        <member name="M:API_DISCOVER.Utility.SparqlUtility.SplitList``1(System.Collections.Generic.List{``0},System.Int32)">
            <summary>
            Divide una lista en N listas
            </summary>
            <typeparam name="T"></typeparam>
            <param name="pItems">Lista</param>
            <param name="pSize">Tamaño máximo de las sublistas devueltas</param>
            <returns>Lista de listas</returns>
        </member>
        <member name="T:API_DISCOVER.ViewModels.JobViewModel">
            <summary>
            Clase que sirve para mostrar los datos de una tarea
            </summary>
        </member>
        <member name="P:API_DISCOVER.ViewModels.JobViewModel.Job">
            <summary>
            Método Ejecutado
            </summary>
        </member>
        <member name="P:API_DISCOVER.ViewModels.JobViewModel.State">
            <summary>
            Estado de la ejecución
            </summary>
        </member>
        <member name="P:API_DISCOVER.ViewModels.JobViewModel.Id">
            <summary>
            Identificador de le tarea
            </summary>
        </member>
        <member name="P:API_DISCOVER.ViewModels.JobViewModel.ExceptionDetails">
            <summary>
            Excepción producida en caso de error
            </summary>
        </member>
        <member name="P:API_DISCOVER.ViewModels.JobViewModel.ExecutedAt">
            <summary>
            Fecha de ejecución
            </summary>
        </member>
        <member name="P:API_DISCOVER.ViewModels.JobViewModel.ProcessNumIdentifierOAIPMH">
            <summary>
            Número de elementos procesados
            </summary>
        </member>
        <member name="P:API_DISCOVER.ViewModels.JobViewModel.TotalNumIdentifierOAIPMH">
            <summary>
            Número de elementos a procesar
            </summary>
        </member>
        <member name="P:API_DISCOVER.ViewModels.JobViewModel.LastIdentifierOAIPMH">
            <summary>
            Último elemento procesado
            </summary>
        </member>
        <member name="T:API_DISCOVER.ViewModels.ShapeReportModel">
            <summary>
            Datos de reporte de un Shape
            </summary>
        </member>
        <member name="P:API_DISCOVER.ViewModels.ShapeReportModel.Result.severity">
            <summary>
            Severidad
            </summary>
        </member>
        <member name="P:API_DISCOVER.ViewModels.ShapeReportModel.Result.focusNode">
            <summary>
            Nodo 
            </summary>
        </member>
        <member name="P:API_DISCOVER.ViewModels.ShapeReportModel.Result.resultValue">
            <summary>
            Resultado
            </summary>
        </member>
        <member name="P:API_DISCOVER.ViewModels.ShapeReportModel.Result.message">
            <summary>
            Mensaje de error
            </summary>
        </member>
        <member name="P:API_DISCOVER.ViewModels.ShapeReportModel.Result.resultPath">
            <summary>
            Path del resultado
            </summary>
        </member>
        <member name="P:API_DISCOVER.ViewModels.ShapeReportModel.Result.shapeName">
            <summary>
            Nombre del Shape
            </summary>
        </member>
        <member name="P:API_DISCOVER.ViewModels.ShapeReportModel.Result.sourceShape">
            <summary>
            Identificador del shape SHACL
            </summary>
        </member>
        <member name="P:API_DISCOVER.ViewModels.ShapeReportModel.Result.shapeID">
            <summary>
            Identificador de la configuración del Shape configurado
            </summary>
        </member>
        <member name="P:API_DISCOVER.ViewModels.ShapeReportModel.severity">
            <summary>
            Severidad
            </summary>
        </member>
        <member name="P:API_DISCOVER.ViewModels.ShapeReportModel.conforms">
            <summary>
            Indica si no se incumple ninguna restricción
            </summary>
        </member>
        <member name="P:API_DISCOVER.ViewModels.ShapeReportModel.results">
            <summary>
            Lista con las validaciones que no han pasado
            </summary>
        </member>
        <member name="M:VDS.RDF.RohGraph.#ctor">
            <summary>
            Creates a new instance of a Graph.
            </summary>
        </member>
        <member name="M:VDS.RDF.RohGraph.#ctor(System.Boolean)">
            <summary>
            Creates a new instance of a Graph with an optionally empty Namespace Map.
            </summary>
            <param name="emptyNamespaceMap">Whether the Namespace Map should be empty.</param>
        </member>
        <member name="M:VDS.RDF.RohGraph.#ctor(VDS.RDF.BaseTripleCollection)">
            <summary>
            Creates a new instance of a Graph using the given Triple Collection.
            </summary>
            <param name="tripleCollection">Triple Collection.</param>
        </member>
        <member name="M:VDS.RDF.RohGraph.#ctor(VDS.RDF.BaseTripleCollection,System.Boolean)">
            <summary>
            Creates a new instance of a Graph using the given Triple Collection and an optionally empty Namespace Map.
            </summary>
            <param name="tripleCollection">Triple Collection.</param>
            <param name="emptyNamespaceMap">Whether the Namespace Map should be empty.</param>
        </member>
        <member name="M:VDS.RDF.RohGraph.GetNextBlankNodeID">
            <summary>
            Creates a new unused Blank Node ID and returns it.
            </summary>
            <returns></returns>
        </member>
        <member name="T:VDS.RDF.Query.Inference.RohRdfsReasoner">
            <summary>
            An Inference Engine which uses RDFS reasoning.
            </summary>
            <remarks>
            <para>
            Does basic RDFS inferencing using the schema taken from the Graph(s) which are provided in calls to the reasoners <see cref="M:VDS.RDF.Query.Inference.StaticRdfsReasoner.Initialise(VDS.RDF.IGraph)">Initialise()</see> method.
            </para>
            <para>
            Types of inference performed are as follows:.
            </para>
            <ul>
                <li>Class hierarchy reasoning - asserts additional types triples for anything that is typed as the subclass of a class.</li>
                <li>Property hierarchy reasoning - asserts additional property triples for anything where the predicate is a subproperty of a defined property</li>   
            </ul>
            </remarks>
        </member>
        <member name="M:VDS.RDF.Query.Inference.RohRdfsReasoner.#ctor">
            <summary>
            Creates a new instance of the Static RdfsReasoner.
            </summary>
        </member>
        <member name="M:VDS.RDF.Query.Inference.RohRdfsReasoner.Apply(VDS.RDF.IGraph)">
            <summary>
            Applies inference to the given Graph and outputs the inferred information to that Graph.
            </summary>
            <param name="g">Graph.</param>
        </member>
        <member name="M:VDS.RDF.Query.Inference.RohRdfsReasoner.Apply(VDS.RDF.IGraph,VDS.RDF.IGraph)">
            <summary>
            Applies inference to the Input Graph and outputs the inferred information to the Output Graph.
            </summary>
            <param name="input">Graph to apply inference to.</param>
            <param name="output">Graph inferred information is output to.</param>
        </member>
        <member name="M:VDS.RDF.Query.Inference.RohRdfsReasoner.Initialise(VDS.RDF.IGraph)">
            <summary>
            Imports any Class heirarchy information from the given Graph into the Reasoners Knowledge Base in order to initialise the Reasoner.
            </summary>
            <param name="g">Graph to import from.</param>
            <remarks>
            Looks for Triples defining things to be classes and those defining that something is a subClass of something.
            </remarks>
        </member>
        <member name="M:VDS.RDF.Query.Inference.RohRdfsReasoner.InferClasses(VDS.RDF.Triple,VDS.RDF.IGraph,VDS.RDF.IGraph,System.Collections.Generic.List{VDS.RDF.Triple})">
            <summary>
            Helper method which applies Class hierarchy inferencing.
            </summary>
            <param name="t">Triple defining the type for something.</param>
            <param name="input">Input Graph.</param>
            <param name="output">Output Graph.</param>
            <param name="inferences">List of Inferences.</param>
        </member>
    </members>
</doc>
