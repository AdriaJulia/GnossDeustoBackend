### YamlMime:ManagedReference
items:
- uid: UrisFactory.Models.Services.UriFormer
  commentId: T:UrisFactory.Models.Services.UriFormer
  id: UriFormer
  parent: UrisFactory.Models.Services
  children:
  - UrisFactory.Models.Services.UriFormer.#ctor(UrisFactory.Models.ConfigEntities.UriStructureGeneral)
  - UrisFactory.Models.Services.UriFormer.GetURI(System.String,System.Collections.Generic.Dictionary{System.String,System.String})
  langs:
  - csharp
  - vb
  name: UriFormer
  nameWithType: UriFormer
  fullName: UrisFactory.Models.Services.UriFormer
  type: Class
  source:
    remote:
      path: UrisFactory/UrisAutoGenerator/Models/Services/UriFormer.cs
      branch: master
      repo: https://github.com/HerculesCRUE/GnossDeustoBackend.git
    id: UriFormer
    path: Models/Services/UriFormer.cs
    startLine: 8
  assemblies:
  - UrisFactory
  namespace: UrisFactory.Models.Services
  syntax:
    content: public class UriFormer
    content.vb: Public Class UriFormer
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: UrisFactory.Models.Services.UriFormer.#ctor(UrisFactory.Models.ConfigEntities.UriStructureGeneral)
  commentId: M:UrisFactory.Models.Services.UriFormer.#ctor(UrisFactory.Models.ConfigEntities.UriStructureGeneral)
  id: '#ctor(UrisFactory.Models.ConfigEntities.UriStructureGeneral)'
  parent: UrisFactory.Models.Services.UriFormer
  langs:
  - csharp
  - vb
  name: UriFormer(UriStructureGeneral)
  nameWithType: UriFormer.UriFormer(UriStructureGeneral)
  fullName: UrisFactory.Models.Services.UriFormer.UriFormer(UrisFactory.Models.ConfigEntities.UriStructureGeneral)
  type: Constructor
  source:
    remote:
      path: UrisFactory/UrisAutoGenerator/Models/Services/UriFormer.cs
      branch: master
      repo: https://github.com/HerculesCRUE/GnossDeustoBackend.git
    id: .ctor
    path: Models/Services/UriFormer.cs
    startLine: 13
  assemblies:
  - UrisFactory
  namespace: UrisFactory.Models.Services
  syntax:
    content: public UriFormer(UriStructureGeneral uristructure)
    parameters:
    - id: uristructure
      type: UrisFactory.Models.ConfigEntities.UriStructureGeneral
    content.vb: Public Sub New(uristructure As UriStructureGeneral)
  overload: UrisFactory.Models.Services.UriFormer.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: UrisFactory.Models.Services.UriFormer.GetURI(System.String,System.Collections.Generic.Dictionary{System.String,System.String})
  commentId: M:UrisFactory.Models.Services.UriFormer.GetURI(System.String,System.Collections.Generic.Dictionary{System.String,System.String})
  id: GetURI(System.String,System.Collections.Generic.Dictionary{System.String,System.String})
  parent: UrisFactory.Models.Services.UriFormer
  langs:
  - csharp
  - vb
  name: GetURI(String, Dictionary<String, String>)
  nameWithType: UriFormer.GetURI(String, Dictionary<String, String>)
  fullName: UrisFactory.Models.Services.UriFormer.GetURI(System.String, System.Collections.Generic.Dictionary<System.String, System.String>)
  type: Method
  source:
    remote:
      path: UrisFactory/UrisAutoGenerator/Models/Services/UriFormer.cs
      branch: master
      repo: https://github.com/HerculesCRUE/GnossDeustoBackend.git
    id: GetURI
    path: Models/Services/UriFormer.cs
    startLine: 26
  assemblies:
  - UrisFactory
  namespace: UrisFactory.Models.Services
  syntax:
    content: public string GetURI(string resourceClass, Dictionary<string, string> queryString)
    parameters:
    - id: resourceClass
      type: System.String
    - id: queryString
      type: System.Collections.Generic.Dictionary{System.String,System.String}
    return:
      type: System.String
    content.vb: Public Function GetURI(resourceClass As String, queryString As Dictionary(Of String, String)) As String
  overload: UrisFactory.Models.Services.UriFormer.GetURI*
  nameWithType.vb: UriFormer.GetURI(String, Dictionary(Of String, String))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: UrisFactory.Models.Services.UriFormer.GetURI(System.String, System.Collections.Generic.Dictionary(Of System.String, System.String))
  name.vb: GetURI(String, Dictionary(Of String, String))
references:
- uid: UrisFactory.Models.Services
  commentId: N:UrisFactory.Models.Services
  name: UrisFactory.Models.Services
  nameWithType: UrisFactory.Models.Services
  fullName: UrisFactory.Models.Services
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: UrisFactory.Models.Services.UriFormer.#ctor*
  commentId: Overload:UrisFactory.Models.Services.UriFormer.#ctor
  name: UriFormer
  nameWithType: UriFormer.UriFormer
  fullName: UrisFactory.Models.Services.UriFormer.UriFormer
- uid: UrisFactory.Models.ConfigEntities.UriStructureGeneral
  commentId: T:UrisFactory.Models.ConfigEntities.UriStructureGeneral
  parent: UrisFactory.Models.ConfigEntities
  name: UriStructureGeneral
  nameWithType: UriStructureGeneral
  fullName: UrisFactory.Models.ConfigEntities.UriStructureGeneral
- uid: UrisFactory.Models.ConfigEntities
  commentId: N:UrisFactory.Models.ConfigEntities
  name: UrisFactory.Models.ConfigEntities
  nameWithType: UrisFactory.Models.ConfigEntities
  fullName: UrisFactory.Models.ConfigEntities
- uid: UrisFactory.Models.Services.UriFormer.GetURI*
  commentId: Overload:UrisFactory.Models.Services.UriFormer.GetURI
  name: GetURI
  nameWithType: UriFormer.GetURI
  fullName: UrisFactory.Models.Services.UriFormer.GetURI
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Collections.Generic.Dictionary{System.String,System.String}
  commentId: T:System.Collections.Generic.Dictionary{System.String,System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.Dictionary`2
  name: Dictionary<String, String>
  nameWithType: Dictionary<String, String>
  fullName: System.Collections.Generic.Dictionary<System.String, System.String>
  nameWithType.vb: Dictionary(Of String, String)
  fullName.vb: System.Collections.Generic.Dictionary(Of System.String, System.String)
  name.vb: Dictionary(Of String, String)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.Dictionary`2
  commentId: T:System.Collections.Generic.Dictionary`2
  isExternal: true
  name: Dictionary<TKey, TValue>
  nameWithType: Dictionary<TKey, TValue>
  fullName: System.Collections.Generic.Dictionary<TKey, TValue>
  nameWithType.vb: Dictionary(Of TKey, TValue)
  fullName.vb: System.Collections.Generic.Dictionary(Of TKey, TValue)
  name.vb: Dictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
